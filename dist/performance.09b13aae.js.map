{"version":3,"sources":["../src/typings/types.ts","../src/data/constants.ts","../src/data/ReportData.ts","../src/config/index.ts","../src/helpers/getNetworkInformation.ts","../src/helpers/isLowEnd.ts","../src/helpers/getNavigatorInfo.ts","../src/helpers/onVisibilityChange.ts","../src/helpers/utils.ts","../src/helpers/vitalsScore.ts","../src/data/reportPerf.ts","../src/data/log.ts","../src/helpers/isSupported.ts","../src/performance/getNavigationTiming.ts","../src/data/metrics.ts","../src/performance/onCumulativeLayoutShift.ts","../src/performance/observeInstances.ts","../src/performance/performanceObserver.ts","../src/performance/onResourceTiming.ts","../src/performance/onElementTiming.ts","../src/performance/onFP.ts","../src/performance/onTBT.ts","../src/performance/onFCP.ts","../src/performance/onLCP.ts","../src/performance/onFID.ts","../src/performance/onTTFB.ts","../src/performance/onINP.ts","../src/performance/observe.ts","../src/tools/isSupported.ts","../src/error/index.ts","../src/data/analyticsTracker.ts","../src/data/reportdata.ts","../src/data/storageEstimate.ts","../src/index.ts","performance/index.ts","../node_modules/.pnpm/parcel-bundler@1.12.5/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"performance.09b13aae.js","sourceRoot":"../examples","sourcesContent":["export interface IDataConsumption {\n  beacon: number;\n  css: number;\n  fetch: number;\n  img: number;\n  other: number;\n  script: number;\n  total: number;\n  xmlhttprequest: number;\n}\nexport interface INavigationTiming {\n  fetchTime?: number;\n  workerTime?: number;\n  totalTime?: number;\n  downloadTime?: number;\n  timeToFirstByte?: number;\n  headerSize?: number;\n  dnsLookupTime?: number;\n  tcpTime?: number;\n  whiteTime?: number;\n  domTime?: number;\n  loadTime?: number;\n  parseDomTime?: number;\n}\nexport type EffectiveConnectionType =\n  | '2g'\n  | '3g'\n  | '4g'\n  | '5g'\n  | 'slow-2g'\n  | 'lte';\nexport interface INetworkInformation {\n  downlink?: number;\n  effectiveType?: EffectiveConnectionType;\n  onchange?: () => void;\n  rtt?: number;\n  saveData?: boolean;\n}\nexport type IPerformanceMonitorData =\n  | number\n  | INavigationTiming\n  | INetworkInformation;\n\nexport interface INavigatorInfo {\n  deviceMemory?: number;\n  hardwareConcurrency?: number;\n  isLowEndDevice?: boolean;\n  isLowEndExperience?: boolean;\n  serviceWorkerStatus?: 'controlled' | 'supported' | 'unsupported';\n}\nexport type IVitalsScore = 'good' | 'needsImprovement' | 'poor' | null;\n\nexport interface IAnalyticsTrackerOptions {\n  metricName: string;\n  data: IPerformanceMonitorData;\n  eventProperties: object;\n  navigatorInformation: INavigatorInfo;\n  vitalsScore: IVitalsScore;\n}\nexport interface IOptions {\n  // Metrics\n  captureError?: boolean;\n  resourceTiming?: boolean;\n  elementTiming?: boolean;\n  // Analytics\n  analyticsTracker?: (options: IAnalyticsTrackerOptions) => void;\n  // Logging\n  maxMeasureTime?: number;\n  logUrl?: string;\n}\nexport interface IReportData {\n  sendToAnalytics(level: AskPriority, body: string): void;\n}\n/**IPerformanceMonitorSdkOptions\n * @param isResourceTiming - 是否开启资源数据\n * @param isElementTiming - 是否开启性能数据\n * @param analyticsTracker - 最大请求时间\n * @param analyticsTracker - void方法参数IAnalyticsTrackerOptions\n * @param maxTime - 自定义分析工具\n * @interface 系统配置接口\n * @public\n */\nexport interface IConfig {\n  reportData: IReportData;\n  isResourceTiming: boolean;\n  isElementTiming: boolean;\n  analyticsTracker?: (options: IAnalyticsTrackerOptions) => void;\n  maxTime: number;\n}\n\nexport interface IPerfObservers {\n  [measureName: string]: any;\n}\n//性能指标参数\nexport type IPerformanceObserverType =\n  | 'first-input'\n  | 'largest-contentful-paint'\n  | 'layout-shift'\n  | 'longtask'\n  | 'measure'\n  | 'navigation'\n  | 'paint'\n  | 'element'\n  | 'resource'\n  | 'event';\n//性能指标具体请求类型\nexport type IPerformanceEntryInitiatorType =\n  | 'beacon'\n  | 'css'\n  | 'fetch'\n  | 'img'\n  | 'other'\n  | 'script'\n  | 'xmlhttprequest';\nexport declare interface IPerformanceEntry {\n  decodedBodySize?: number;\n  duration: number;\n  entryType: IPerformanceObserverType;\n  initiatorType?: IPerformanceEntryInitiatorType;\n  loadTime: number;\n  name: string;\n  renderTime: number;\n  startTime: number;\n  hadRecentInput?: boolean;\n  value?: number;\n  identifier?: string;\n  interactionId?: number;\n}\n//度量指标数据\nexport interface IMetricMap {\n  [measureName: string]: boolean;\n}\n// https://wicg.github.io/event-timing/#sec-performance-event-timing\nexport interface PerformanceEventTiming extends IPerformanceEntry {\n  processingStart: DOMHighResTimeStamp;\n  target?: Node;\n}\n//请求响应优先级\nexport enum AskPriority {\n  URGENT = 1,\n  IDLE = 2,\n}\n","/**\n * 浏览器导航器接口扩展\n * 为 navigator 对象添加额外的属性和方法类型定义\n */\ninterface Navigator {\n  /** 存储空间估算方法 */\n  estimate: any;\n  /** 存储相关功能 */\n  storage: any;\n  /** 设备内存大小（GB） */\n  deviceMemory?: number;\n  /** 硬件并发数（CPU核心数） */\n  hardwareConcurrency?: number;\n  /** 网络连接类型 */\n  connection?: string;\n  /** 有效连接类型（如 4g、3g 等） */\n  effectiveType?: string;\n  /** Service Worker 相关功能 */\n  serviceWorker?: {\n    /** Service Worker 控制器 */\n    controller?: string;\n  };\n  /** 发送信标数据的方法 */\n  sendBeacon?: any;\n}\n\n// 全局对象引用，提供便捷访问\n/** 全局 window 对象引用 */\nexport const W = window;\n\n/** 全局 console 对象引用，用于日志输出 */\nexport const C = W.console;\n\n/** 全局 document 对象引用，用于DOM操作 */\nexport const D = document;\n\n/** 全局 navigator 对象引用，类型转换为扩展的 Navigator 接口 */\nexport const WN = (W.navigator as unknown) as Navigator;\n\n/** 全局 performance 对象引用，用于性能监控 */\nexport const WP = W.performance;\n\n/**\n * 获取设备内存大小\n * 从 navigator.deviceMemory 获取设备内存信息，如果不支持则返回 0\n * \n * @returns 设备内存大小（GB），如果不支持则返回 0\n */\nexport const getDM = () => WN.deviceMemory ?? 0;\n\n/**\n * 获取硬件并发数\n * 从 navigator.hardwareConcurrency 获取CPU核心数，如果不支持则返回 0\n * \n * @returns CPU核心数，如果不支持则返回 0\n */\nexport const getHC = () => WN.hardwareConcurrency ?? 0;\n","import { AskPriority, IReportData } from '../typings/types';\nimport { W, WN } from './constants';\n\n/**\n * 数据上报工具配置选项\n */\ntype TrackerOptions = {\n  /** 日志上报的目标URL地址 */\n  logUrl: string;\n};\n\n/**\n * 数据上报类\n * 实现了 IReportData 接口，负责将性能监控数据发送到指定的服务器\n * \n * 支持两种上报方式：\n * 1. 紧急数据（URGENT）：使用 fetch 或 XMLHttpRequest 立即发送\n * 2. 空闲数据（IDLE）：使用 sendBeacon 或图片请求在空闲时发送\n */\nclass ReportData implements IReportData {\n  /** 日志上报的目标URL地址 */\n  private logUrl: string;\n\n  /**\n   * 构造函数\n   * @param options - 配置选项，必须包含 logUrl\n   * @throws Error 如果没有传递 logUrl 参数\n   */\n  constructor(options: TrackerOptions) {\n    const { logUrl } = options;\n    if (logUrl) {\n      this.logUrl = logUrl;\n    } else {\n      throw new Error('请传递要记录数据的路由~');\n    }\n  }\n\n  /**\n   * 发送数据到分析服务\n   * 根据优先级选择不同的上报方式，确保数据能够可靠地发送到服务器\n   * \n   * @param level - 数据优先级，决定上报方式和时机\n   * @param body - 要上报的数据内容\n   * @param uri - 可选的自定义上报URL，如果提供则覆盖默认的 logUrl\n   */\n  public sendToAnalytics(level: AskPriority, body: string, uri?: string) {\n    // 确定最终使用的上报URL\n    let logurl = this.logUrl;\n    // 临时更换其他url，用于特殊场景下的数据上报\n    if (uri) {\n      logurl = uri;\n    }\n    // console.log('路由', logurl);\n\n    // 紧急数据上报：需要立即发送的重要数据\n    if (level == AskPriority.URGENT) {\n      // 优先使用 fetch API，支持 keepalive 选项\n      if (!!W.fetch) {\n        fetch(logurl, { \n          body, \n          method: 'POST', \n          keepalive: true  // 确保页面关闭后请求仍能完成\n        });\n      } else {\n        // 降级到 XMLHttpRequest\n        let xhr: XMLHttpRequest | null = new XMLHttpRequest();\n        xhr.open('post', logurl, true);\n        // 设置请求头，指定内容类型为 JSON\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(body); // 发送参数\n        \n        xhr.onload = function (e) {\n          //   if (this.status == 200 || this.status == 304) {\n          //     alert(this.responseText);\n          //   }\n          // 及时清理引用，防止多次创建导致的内存泄露\n          xhr = null;\n        };\n      }\n    } \n    // 空闲数据上报：可以在空闲时发送的非紧急数据\n    else if (level == AskPriority.IDLE) {\n      // 优先使用 sendBeacon API，专为数据上报设计\n      if (!!WN.sendBeacon) {\n        navigator.sendBeacon(logurl, body);\n      } else {\n        // 降级到图片请求方式，兼容性最好\n        let img: HTMLImageElement | null = new Image();\n        img.src = `${logurl}?body=${body}`;\n        img.onload = function () {\n          // 统计完成收回创建的元素，防止内存泄露\n          img = null;\n        };\n      }\n    }\n  }\n}\n\nexport default ReportData;\n","import ReportData from '../data/ReportData';\nimport { IConfig, IReportData } from '../typings/types';\n\nexport const config: IConfig = {\n  // Metrics\n  reportData: new ReportData({ logUrl: 'hole' }),\n  isResourceTiming: false,\n  isElementTiming: false,\n  // Logging\n  maxTime: 15000,\n};\n","import { WN } from '../data/constants';\nimport {\n  EffectiveConnectionType,\n  INetworkInformation,\n} from '../typings/types';\n\n/**\n * 网络连接类型\n * 用于存储当前网络的有效连接类型，默认为 '4g'\n */\nexport let et: EffectiveConnectionType = '4g';\n\n/**\n * 节省数据模式状态\n * 表示用户是否启用了节省数据模式，默认为 false\n */\nexport let sd = false;\n\n/**\n * 获取网络连接信息\n * 从浏览器的 Network Information API 获取网络状态信息\n * 包括下行带宽、有效连接类型、往返时间等\n * \n * 如果浏览器不支持 Network Information API，则返回空对象\n * 未来计划实现多普勒测速法或图片探测法作为备选方案\n * \n * @returns 网络信息对象，包含下行带宽、连接类型、RTT等信息\n */\nexport const getNetworkInformation = (): INetworkInformation => {\n  // 检查浏览器是否支持 Network Information API\n  if ('connection' in WN) {\n    // 获取网络连接对象\n    const dataConnection = (WN as any).connection;\n    \n    // 验证连接对象是否为有效对象\n    if (typeof dataConnection !== 'object') {\n      return {};\n    }\n    \n    // 更新全局变量：有效连接类型\n    et = dataConnection.effectiveType;\n    \n    // 更新全局变量：节省数据模式状态\n    sd = !!dataConnection.saveData;\n    \n    // 返回完整的网络信息对象\n    return {\n      downlink: dataConnection.downlink,           // 下行带宽（Mbps）\n      effectiveType: dataConnection.effectiveType, // 有效连接类型（如 4g、3g 等）\n      rtt: dataConnection.rtt,                     // 往返时间（毫秒）\n      saveData: !!dataConnection.saveData,         // 是否启用节省数据模式\n    };\n  } else {\n    // 浏览器不支持 Network Information API\n    // TODO: 这里我们使用多普勒测速法或者直接用图片探测法\n    // 作为获取网络信息的备选方案\n  }\n  \n  // 如果无法获取网络信息，返回空对象\n  return {};\n};\n","import { getDM, getHC } from '../data/constants';\nimport { EffectiveConnectionType } from '../typings/types';\n\n/**\n * 判断是否为低端设备\n * 基于硬件能力（CPU核心数和内存大小）来评估设备性能\n * \n * 判断标准：\n * - CPU核心数 ≤ 4 个\n * - 设备内存 ≤ 4GB\n * \n * @returns true 表示低端设备，false 表示中高端设备\n */\nexport const getIsLowEndDevice = (): boolean => {\n  // 检查CPU核心数：如果逻辑处理器数量 ≤ 4，则认为是低端设备\n  if (getHC() && getHC() <= 4) {\n    return true;\n  }\n  \n  // 检查设备内存：如果可用内存 ≤ 4GB，则认为是低端设备\n  if (getDM() && getDM() <= 4) {\n    return true;\n  }\n  \n  // 如果CPU核心数 > 4 且内存 > 4GB，则认为是中高端设备\n  return false;\n};\n\n/**\n * 判断是否为低端用户体验\n * 综合考虑网络连接类型、节省数据模式和设备硬件能力\n * \n * @param et - 有效连接类型，如 'slow-2g'、'2g'、'3g'、'4g' 等\n * @param sd - 是否启用节省数据模式\n * @returns true 表示低端用户体验，false 表示中高端用户体验\n */\nexport const getIsLowEndExperience = (\n  et: EffectiveConnectionType,\n  sd: boolean\n): boolean => {\n  // 根据网络连接类型判断用户体验质量\n  // 如果连接类型不是 4g，则认为是低端体验\n  switch (et) {\n    case 'slow-2g':\n      // 极慢的2G网络，用户体验较差\n      return true;\n      break;\n    case '2g':\n      // 2G网络，用户体验较差\n      return true;\n      break;\n    case '3g':\n      // 3G网络，用户体验一般\n      return true;\n      break;\n    default:\n      // 4G或更好的网络连接\n      // 此时需要综合考虑设备硬件能力和节省数据模式\n      // 如果设备本身是低端设备，或者启用了节省数据模式，则认为是低端体验\n      return getIsLowEndDevice() || sd;\n  }\n};\n","import { getDM, getHC, WN } from '../data/constants';\nimport { et, sd } from './getNetworkInformation';\nimport { getIsLowEndDevice, getIsLowEndExperience } from './isLowEnd';\nimport { INavigatorInfo } from '../typings/types';\n\n/**\n * 获取浏览器导航器信息\n * 收集来自 window.navigator 的各种设备和浏览器能力信息\n * \n * 包含以下信息：\n * 1. Device Memory - 设备内存大小（GB）\n * 2. Hardware Concurrency - 硬件并发数（CPU核心数）\n * 3. Service Worker 状态：\n *    - controlled: 页面被 service worker 控制\n *    - supported: 浏览器支持 service worker\n *    - unsupported: 用户浏览器不支持 service worker\n * 4. 低端设备判断 - 基于硬件能力的设备性能评估\n * 5. 低端体验判断 - 基于网络条件的用户体验评估\n * \n * @returns 包含设备信息的对象，如果无法获取则返回空对象\n */\nexport const getNavigatorInfo = function (): INavigatorInfo {\n  // 检查浏览器是否支持 navigator 对象\n  if (WN) {\n    return {\n      // 获取设备内存大小，如果无法获取则默认为 0\n      deviceMemory: getDM() || 0,\n      \n      // 获取硬件并发数（CPU核心数），如果无法获取则默认为 0\n      hardwareConcurrency: getHC() || 0,\n      \n      // 判断 Service Worker 状态\n      serviceWorkerStatus:\n        'serviceWorker' in WN\n          ? WN.serviceWorker!.controller\n            ? 'controlled'    // 页面被 service worker 控制\n            : 'supported'     // 支持但未控制页面\n          : 'unsupported',    // 不支持 service worker\n      \n      // 基于硬件能力判断是否为低端设备\n      isLowEndDevice: getIsLowEndDevice(),\n      \n      // 基于网络条件判断是否为低端体验\n      // 传入网络类型(et)和节省数据模式(sd)参数\n      isLowEndExperience: getIsLowEndExperience(et, sd),\n    };\n  }\n  \n  // 如果浏览器不支持 navigator 对象，返回空对象\n  return {};\n};\n","import { D } from '../data/constants';\n\n/**\n * 页面可见性状态管理对象\n * 用于跟踪页面的可见性状态，避免在页面隐藏时发送错误的性能数据\n */\nexport const visibility = {\n  /** 页面是否处于隐藏状态，默认为 false（可见） */\n  isHidden: false,\n};\n\n/**\n * 页面可见性变化事件处理函数\n * \n * 该函数只在页面变为隐藏状态时执行回调，这样设计的原因是：\n * 1. 避免在页面隐藏时发送错误的性能数据或日志\n * 2. 确保性能监控的准确性，因为隐藏页面的性能数据可能不准确\n * 3. 优化资源使用，在页面不可见时停止不必要的性能监控\n * \n * 使用场景：\n * - 当用户切换到其他标签页时\n * - 当用户最小化浏览器窗口时\n * - 当页面被其他应用遮挡时\n * \n * @param cb - 页面隐藏时要执行的回调函数，通常用于停止性能监控\n */\nexport const didVisibilityChange = function (cb: Function) {\n  // 检查页面是否处于隐藏状态\n  if (D.hidden) {\n    // 执行回调函数，通常用于停止性能监控或清理资源\n    cb();\n    \n    // 更新全局可见性状态，记录页面当前为隐藏状态\n    visibility.isHidden = D.hidden;\n  }\n};\n","import { W } from '../data/constants';\n\n/**\n * 数值四舍五入到两位小数\n * 使用 toFixed(2) 方法进行精度控制，然后转换为浮点数\n * \n * @param num - 需要处理的数值\n * @returns 四舍五入到两位小数的浮点数\n */\nexport const roundByTwo = (num: number) => {\n  return parseFloat(num.toFixed(2));\n};\n\n/**\n * 将字节数转换为千字节（KB）\n * 将字节数除以 1024^2 得到 KB 值，并保留两位小数\n * \n * @param bytes - 字节数\n * @returns 转换后的 KB 值，如果输入无效则返回 null\n */\nexport const convertToKB = (bytes: number): number | null => {\n  // 验证输入参数是否为有效数字\n  if (typeof bytes !== 'number') {\n    return null;\n  }\n  \n  // 将字节转换为 KB：1 KB = 1024^2 字节\n  // 使用 roundByTwo 函数保留两位小数\n  return roundByTwo(bytes / Math.pow(1024, 2));\n};\n\n/**\n * 推送任务到 requestIdleCallback\n * 高效利用浏览器的空闲时间进行数据收集，避免阻塞主线程\n * \n * 如果浏览器支持 requestIdleCallback，则使用它来调度任务\n * 如果不支持，则立即执行回调函数\n * \n * @param cb - 需要执行的回调函数\n */\nexport const pushTask = (cb: any): void => {\n  // 检查浏览器是否支持 requestIdleCallback API\n  if ('requestIdleCallback' in W) {\n    // 使用 requestIdleCallback 在浏览器空闲时执行任务\n    // timeout: 3000 表示最多等待 3 秒，如果一直没有空闲时间则强制执行\n    (W as any).requestIdleCallback(cb, { timeout: 3000 });\n  } else {\n    // 浏览器不支持 requestIdleCallback，立即执行回调函数\n    cb();\n  }\n};\n","import { IPerformanceMonitorData, IVitalsScore } from '../typings/types';\n\n// Web Vitals 评分标准阈值定义\n// 参考标准：https://web.dev/vitals/\n// 这些阈值用于评估网页性能指标的质量等级\n\n// FCP (First Contentful Paint) 评分阈值：1000ms 为优秀，2500ms 为需要改进\nconst fcpScore = [1000, 2500];\n\n// LCP (Largest Contentful Paint) 评分阈值：2500ms 为优秀，4000ms 为需要改进\nconst lcpScore = [2500, 4000];\n\n// FID (First Input Delay) 评分阈值：100ms 为优秀，300ms 为需要改进\nconst fidcore = [100, 300];\n\n// CLS (Cumulative Layout Shift) 评分阈值：0.1 为优秀，0.25 为需要改进\nconst clsScore = [0.1, 0.25];\n\n// TBT (Total Blocking Time) 评分阈值：300ms 为优秀，600ms 为需要改进\nconst tbtScore = [300, 600];\n\n/**\n * Web Vitals 评分标准映射表\n * 将各种性能指标名称映射到对应的评分阈值数组\n * 每个阈值数组包含两个值：[优秀阈值, 需要改进阈值]\n */\nexport const webVitalsScore: Record<string, number[]> = {\n  // First Paint 和 First Contentful Paint 使用相同的评分标准\n  fp: fcpScore,      // First Paint\n  fcp: fcpScore,     // First Contentful Paint\n  \n  // Largest Contentful Paint 相关指标\n  lcp: lcpScore,     // Largest Contentful Paint\n  lcpFinal: lcpScore, // LCP 最终值\n  \n  // First Input Delay 相关指标\n  fid: fidcore,      // First Input Delay\n  fidVitals: fidcore, // FID Vitals 指标\n  \n  // Cumulative Layout Shift 相关指标\n  cls: clsScore,     // Cumulative Layout Shift\n  clsFinal: clsScore, // CLS 最终值\n  \n  // Total Blocking Time 相关指标\n  tbt: tbtScore,     // Total Blocking Time\n  tbt5S: tbtScore,   // 5秒内的 TBT\n  tbt10S: tbtScore,  // 10秒内的 TBT\n  tbtFinal: tbtScore, // TBT 最终值\n};\n\n/**\n * 根据性能指标名称和值计算 Web Vitals 评分\n * 将数值性能指标转换为可读的质量等级\n * \n * @param measureName - 性能指标名称，如 'fcp'、'lcp'、'cls' 等\n * @param value - 性能指标的具体数值\n * @returns 性能评分等级：'good'（优秀）、'needsImprovement'（需要改进）、'poor'（较差）或 null（未知指标）\n */\nexport const getVitalsScore = (\n  measureName: string,\n  value: IPerformanceMonitorData\n): IVitalsScore => {\n  // 检查指标名称是否在评分标准中存在\n  if (!webVitalsScore[measureName]) {\n    return null;\n  }\n  \n  // 获取该指标的评分阈值\n  const thresholds = webVitalsScore[measureName];\n  \n  // 根据数值与阈值的比较确定评分等级\n  if (value as number <= thresholds[0]) {\n    // 数值小于等于第一个阈值，评为优秀\n    return 'good';\n  }\n  \n  // 数值小于等于第二个阈值，评为需要改进，否则评为较差\n  return value as number <= thresholds[1] ? 'needsImprovement' : 'poor';\n};","import { config } from '../config';\nimport { getNavigatorInfo } from '../helpers/getNavigatorInfo';\nimport { visibility } from '../helpers/onVisibilityChange';\nimport { pushTask } from '../helpers/utils';\nimport { getVitalsScore } from '../helpers/vitalsScore';\n\n/**\n * Sends the User timing measure to analyticsTracker\n */\nexport const reportPerf = function (\n  measureName: string,\n  data: any,\n  customProperties?: object\n): void {\n  pushTask(() => {\n    // 当页面被隐藏的时候不报告具体数据\n    if (\n      (visibility.isHidden && measureName.indexOf('Final') < 0) ||\n      !config.analyticsTracker\n    ) {\n      return;\n    }\n    // Send metric to custom Analytics service\n    config.analyticsTracker({\n      metricName: measureName,\n      data,\n      eventProperties: customProperties || {},\n      navigatorInformation: getNavigatorInfo(),\n      vitalsScore: getVitalsScore(measureName, data),\n    });\n  });\n};\n","import { config } from '../config';\nimport { reportPerf } from '../data/reportPerf';\nimport { roundByTwo } from '../helpers/utils';\n\n/**\n * 记录并上报性能指标数据\n * 将传入的指标数据中的数值进行四舍五入处理，然后发送到外部跟踪服务\n * \n * @param measureName - 指标名称，用于标识不同类型的性能数据\n * @param metric - 指标数据对象，包含各种性能指标值\n * @param customProperties - 可选的自定义属性，用于添加额外的上下文信息\n */\nexport const logData = (\n  measureName: string,\n  metric: any,\n  customProperties?: object\n): void => {\n  // 遍历指标对象的所有属性，对数值类型的属性进行精度处理\n  Object.keys(metric).forEach((key) => {\n    if (typeof metric[key] === 'number') {\n      // 将数值四舍五入到两位小数，提高数据的一致性和可读性\n      metric[key] = roundByTwo(metric[key]);\n    }\n  });\n  \n  // 将处理后的指标数据发送到外部跟踪服务\n  reportPerf(measureName, metric, customProperties);\n};\n\n/**\n * 记录并上报性能指标持续时间\n * 将指标持续时间分发到内部日志和外部时间跟踪服务\n * \n * @param duration - 持续时间（毫秒），表示某个操作的执行时间\n * @param measureName - 指标名称，用于标识性能指标类型\n * @param customProperties - 可选的自定义属性，用于添加额外的上下文信息\n */\nexport const logMetric = (\n  duration: number,\n  measureName: string,\n  customProperties?: object\n): void => {\n  // 将持续时间四舍五入到两位小数\n  const duration2Decimal = roundByTwo(duration);\n  \n  // 验证持续时间的有效性：必须在配置的最大时间范围内且为非负数\n  if (duration2Decimal <= config.maxTime && duration2Decimal >= 0) {\n    // 从内部或者外部的报告工具报告指标数据\n    reportPerf(measureName, duration2Decimal, customProperties);\n  }\n};\n","import { W, WP } from '../data/constants';\n\n/**\n * 检查浏览器是否支持性能监控相关的 API\n * \n * 该函数检查浏览器是否支持以下三个关键的性能 API：\n * 1. Navigation Timing API - 导航时间 API\n * 2. User Timing API - 用户时间 API（performance.mark()）\n * 3. PerformanceObserver Interface - 性能观察器接口\n * \n * 注意事项：\n * - 在 Safari 浏览器中，User Timing API (performance.mark()) 不可用\n * - 这会导致 DevTools 时间轴无法显示性能标记\n * \n * 相关文档：\n * - Performance.mark(): https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n * - PerformanceObserver: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n * - Performance.getEntriesByType: https://developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType\n * \n * @returns true 表示浏览器支持性能监控 API，false 表示不支持\n */\nexport const isPerformanceSupported = (): boolean => {\n  // 检查 performance 对象是否存在\n  // 检查 getEntriesByType 方法是否可用（Navigation Timing API）\n  // 检查 now 方法是否可用（高精度时间戳）\n  // 检查 mark 方法是否可用（User Timing API）\n  return WP && !!WP.getEntriesByType && !!WP.now && !!WP.mark;\n};","import { WP } from '../data/constants';\nimport { isPerformanceSupported } from '../helpers/isSupported';\nimport { INavigationTiming } from '../typings/types';\n\n/**\n * 获取页面导航时间性能指标\n * \n * Navigation Timing API 提供了 HTML 文档的性能指标数据。\n * 该 API 可以详细测量页面加载过程中的各个阶段耗时。\n * \n * 相关文档：\n * - W3C 规范：https://w3c.github.io/navigation-timing/\n * - Google 开发者指南：https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\n * \n * @returns 包含各种导航时间指标的对象，如果浏览器不支持则返回空对象\n */\nexport const getNavigationTiming = (): INavigationTiming => {\n  // 检查浏览器是否支持性能监控 API\n  if (!isPerformanceSupported()) {\n    return {};\n  }\n  \n  // 获取导航类型的性能条目\n  // 注意：这里直接使用 performance.timing 已被弃用，改用 getEntriesByType\n  // TypeScript 类型定义问题：https://github.com/microsoft/TypeScript/issues/33866\n  const n = WP.getEntriesByType('navigation')[0] as any;\n  \n  // Safari 11.2 版本之前不支持 Navigation Timing API\n  if (!n) {\n    return {};\n  }\n  \n  // 缓存响应开始和结束时间，避免重复计算\n  const responseStart = n.responseStart;\n  const responseEnd = n.responseEnd;\n  \n  // 返回包含各种导航时间指标的对象\n  return {\n    // 资源获取时间：从开始获取到最后一个字节到达的时间\n    fetchTime: responseEnd - n.fetchStart,\n    \n    // Service Worker 时间：Service Worker 启动到响应结束的时间\n    // 如果没有 Service Worker 则返回 0\n    workerTime: n.workerStart > 0 ? responseEnd - n.workerStart : 0,\n    \n    // 总网络时间：请求开始到响应结束的总时间（仅网络部分）\n    totalTime: responseEnd - n.requestStart,\n    \n    // 下载时间：仅响应数据的下载时间\n    downloadTime: responseEnd - responseStart,\n    \n    // 首字节时间（TTFB）：从请求开始到收到第一个字节的时间\n    // 这是衡量服务器响应速度的重要指标\n    timeToFirstByte: responseStart - n.requestStart,\n    \n    // HTTP 头部大小：传输大小减去编码后的主体大小\n    headerSize: n.transferSize - n.encodedBodySize || 0,\n    \n    // DNS 解析时间：域名查找结束时间减去开始时间\n    dnsLookupTime: n.domainLookupEnd - n.domainLookupStart,\n    \n    // TCP 建立时间：连接结束时间减去开始时间\n    tcpTime: n.connectEnd - n.connectStart || 0,\n    \n    // 白屏时间：从导航开始到响应开始的时间\n    // 表示用户看到页面的第一个视觉反馈的时间\n    whiteTime: n.responseStart - n.navigationStart || 0,\n    \n    // DOM 渲染完成时间：从导航开始到 DOM 内容加载完成的时间\n    // 表示页面结构完全渲染完成的时间\n    domTime: n.domContentLoadedEventEnd - n.navigationStart || 0,\n    \n    // 页面完全加载时间：从导航开始到 onload 事件结束的时间\n    // 表示页面所有资源加载完成的时间\n    loadTime: n.loadEventEnd - n.navigationStart || 0,\n    \n    // 页面解析 DOM 耗时：DOM 完成时间减去 DOM 交互时间\n    // 表示浏览器解析和构建 DOM 树所需的时间\n    parseDomTime: n.domComplete - n.domInteractive || 0,\n  };\n};\n","import { IMetricMap, IDataConsumption } from '../typings/types';\n\n/**\n * 性能指标存储映射表\n * 用于存储各种性能指标的测量结果\n */\nexport const metrics: IMetricMap = {};\n\n/**\n * CLS (Cumulative Layout Shift) 累积布局偏移指标\n * 用于衡量页面的视觉稳定性，值越小表示页面越稳定\n */\nexport const cls = {\n  /** CLS 指标值，默认为 0 */\n  value: 0,\n};\n\n/**\n * FCP (First Contentful Paint) 首次内容绘制指标\n * 用于衡量页面首次显示内容的时间，值越小表示页面加载越快\n */\nexport const fcp = {\n  /** FCP 指标值，默认为 0 */\n  value: 0,\n};\n\n/**\n * LCP (Largest Contentful Paint) 最大内容绘制指标\n * 用于衡量页面主要内容加载完成的时间，值越小表示用户体验越好\n */\nexport const lcp = {\n  /** LCP 指标值，默认为 0 */\n  value: 0,\n};\n\n/**\n * First Paint 性能条目的名称\n * 用于标识首次绘制的性能条目\n */\nexport const fpEntryName = 'first-paint';\n\n/**\n * First Contentful Paint 性能条目的名称\n * 用于标识首次内容绘制的性能条目\n */\nexport const fcpEntryName = 'first-contentful-paint';\n\n/**\n * 资源时间消耗统计对象\n * 用于跟踪不同类型资源的加载时间消耗\n */\nexport const rt: { value: IDataConsumption } = {\n  value: {\n    beacon: 0,           // 信标请求消耗的时间\n    css: 0,              // CSS 资源加载消耗的时间\n    fetch: 0,            // Fetch API 请求消耗的时间\n    img: 0,              // 图片资源加载消耗的时间\n    other: 0,            // 其他类型资源消耗的时间\n    script: 0,           // JavaScript 脚本加载消耗的时间\n    total: 0,            // 所有资源消耗的总时间\n    xmlhttprequest: 0,   // XMLHttpRequest 请求消耗的时间\n  },\n};\n\n/**\n * TBT (Total Blocking Time) 总阻塞时间指标\n * 用于衡量主线程被阻塞的总时间，值越小表示页面响应性越好\n * 这是衡量页面交互性能的重要指标\n */\nexport const tbt = {\n  /** TBT 指标值，默认为 0 */\n  value: 0,\n};\n","import { cls } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\n/**\n * 检测新的布局偏移事件并更新累积布局偏移分数\n * \n * 该函数用于监控页面的视觉稳定性，通过累积计算布局偏移分数来评估用户体验。\n * CLS (Cumulative Layout Shift) 是 Core Web Vitals 的重要指标之一。\n * \n * 布局偏移检测规则：\n * 1. 只计算没有最近用户输入的布局偏移\n * 2. 累积所有有效的布局偏移值\n * 3. 确保布局偏移值的有效性\n * \n * @param performanceEntries - 性能条目数组，包含布局偏移事件的详细信息\n */\nexport const onLayoutShift = (performanceEntries: IPerformanceEntry[]) => {\n  // 获取最后一个布局偏移条目\n  // 因为布局偏移观察器可能触发多次，我们处理最新的偏移事件\n  const lastEntry = performanceEntries.pop();\n  \n  // 只计算没有最近用户输入的布局偏移\n  // 这是 CLS 计算的重要规则，避免将用户主动操作导致的布局变化计入分数\n  // 同时确保布局偏移值存在且有效\n  if (lastEntry && !lastEntry.hadRecentInput && lastEntry.value) {\n    // 累积布局偏移分数\n    // cls.value 存储的是页面的累积布局偏移分数\n    // 分数越高表示页面视觉稳定性越差\n    cls.value += lastEntry.value;\n  }\n};\n","import { IPerfObservers } from '../typings/types';\n/**\n * @remarks 核心性能数据指标对象\n * @public\n */\nexport const perfObservers: IPerfObservers = {};\n","import { C } from '../data/constants';\nimport { perfObservers } from './observeInstances';\nimport { IPerformanceObserverType } from '../typings/types';\n\n/**\n * PerformanceObserver 异步订阅封装\n * 用于创建和配置性能观察器，监听特定类型的性能事件\n * \n * @param eventType - 性能事件类型，如 'first-input'、'largest-contentful-paint' 等\n * @param cb - 回调函数，当性能事件触发时会被调用，接收性能条目数组作为参数\n * @returns PerformanceObserver 实例或 null（如果创建失败）\n */\nexport const po = (\n  eventType: IPerformanceObserverType,\n  cb: (performanceEntries: any[]) => void\n): PerformanceObserver | null => {\n  try {\n    // 创建新的性能观察器实例\n    const perfObserver = new PerformanceObserver((entryList) => {\n      // 当性能事件触发时，调用回调函数并传递性能条目\n      cb(entryList.getEntries());\n    });\n    \n    // 订阅指定类型的事件\n    // buffered: true 表示不立即执行，在内存中保留 PerformanceObserver 实例\n    // 这样可以捕获在观察器创建之前就已经发生的性能事件\n    perfObserver.observe({ type: eventType, buffered: true });\n    \n    return perfObserver;\n  } catch (e) {\n    // 如果创建观察器失败，记录警告信息\n    C.warn('sdk.js:', e);\n  }\n  \n  // 创建失败时返回 null\n  return null;\n};\n\n/**\n * 断开性能观察器的连接并清理资源\n * 用于停止性能监控并释放内存\n * \n * @param observer - 要断开的观察器标识符\n */\nexport const poDisconnect = (observer: any) => {\n  // 检查观察器是否存在\n  if (perfObservers[observer]) {\n    // 断开观察器的连接，停止监听性能事件\n    perfObservers[observer].disconnect();\n  }\n  \n  // 从观察器实例集合中删除该观察器，释放内存\n  delete perfObservers[observer];\n};\n","import { config } from '../config';\nimport { logData } from '../data/log';\nimport { rt } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\n/**\n * 初始化资源时间监控\n * \n * 该函数用于监控和分析页面中各种资源的加载性能，包括：\n * 1. 记录资源加载的详细时间信息（如果启用）\n * 2. 统计不同类型资源的体积大小\n * 3. 累积计算总资源消耗\n * \n * 支持的资源类型包括：script、css、img、fetch、xmlhttprequest 等\n * \n * @param performanceEntries - 性能条目数组，包含各种资源加载的详细信息\n */\nexport const onResourceTiming = (performanceEntries: IPerformanceEntry[]) => {\n  // 遍历所有资源性能条目\n  performanceEntries.forEach((entry) => {\n    // 如果配置中启用了资源时间监控，则记录详细的资源时间信息\n    if (config.isResourceTiming) {\n      logData('resourceTiming', entry);\n    }\n    \n    // 检查条目是否包含有效的体积信息和发起者类型\n    // decodedBodySize: 解码后的资源体积（字节）\n    // initiatorType: 资源发起者类型（如 script、css、img 等）\n    if (entry.decodedBodySize && entry.initiatorType) {\n      // 将字节转换为 KB，提高可读性\n      const bodySize = entry.decodedBodySize / 1000;\n      \n      // 累加到对应资源类型的体积统计中\n      // 例如：如果是 script 资源，则累加到 rt.value.script\n      rt.value[entry.initiatorType] += bodySize;\n      \n      // 同时累加到总体积统计中\n      rt.value.total += bodySize;\n    }\n  });\n};\n","import { IPerformanceEntry } from '../typings/types';\nimport { logMetric } from '../data/log';\n\n/**\n * 初始化元素时间监控\n * \n * 该函数监控页面中特定元素的性能指标，\n * 需要在 HTML 元素上添加 elementtiming 属性来启用监控。\n * \n * 使用场景：监控关键元素的加载和渲染性能\n * \n * @param performanceEntries - 性能条目数组，包含元素时间事件的详细信息\n */\nexport const onElementTiming = (performanceEntries: IPerformanceEntry[]) => {\n    // 遍历所有元素时间性能条目\n    performanceEntries.forEach((entry) => {\n      if (entry.identifier) {\n        // 记录特定元素的性能指标\n        // identifier 是在 HTML 元素上设置的 elementtiming 属性值\n        // 用于标识和区分不同的监控元素\n        logMetric(entry.startTime, entry.identifier);\n      }\n    });\n  };","import { IPerformanceEntry } from '../typings/types';\nimport { fpEntryName } from '../data/metrics';\nimport { logMetric } from '../data/log';\n\nexport const onFP = (performanceEntries: IPerformanceEntry[]) => {\n  // 遍历所有绘制性能条目\n  performanceEntries.forEach((entry) => {\n    if (entry.name === fpEntryName) {\n      // 记录首次绘制（FP）时间\n      // FP 表示页面开始渲染的第一个像素点\n      logMetric(entry.startTime, 'fp');\n    }\n  });\n};","import { fcp, tbt } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\n/**\n * 初始化总阻塞时间监控\n * \n * 该函数用于计算页面的总阻塞时间（Total Blocking Time, TBT），\n * TBT 是衡量页面交互性能的重要指标，表示主线程被阻塞的总时间。\n * \n * 计算逻辑：\n * 1. 只统计 FCP（首次内容绘制）之后的长任务\n * 2. 只统计来自渲染帧的长任务（name === 'self'）\n * 3. 长任务是指执行时间超过 50ms 的任务\n * 4. 阻塞时间 = 任务持续时间 - 50ms（50ms 是长任务的阈值）\n * \n * 相关文档：https://developer.mozilla.org/zh-CN/docs/Web/API/Long_Tasks_API\n * \n * @param performanceEntries - 性能条目数组，包含长任务的详细信息\n */\nexport const onTBT = (\n  performanceEntries: IPerformanceEntry[]\n): void => {\n  // 遍历所有性能条目，寻找长任务\n  performanceEntries.forEach((entry) => {\n    // 从 FCP 到 TTI 获取长耗时任务\n    // 只统计 name === 'self' 的任务，表示耗时长任务来自于渲染帧\n    // 只统计 FCP 之后的任务，因为 FCP 之前的阻塞不影响用户交互\n    if (entry.name !== 'self' || entry.startTime < fcp.value) {\n      return;\n    }\n    \n    // 长耗时任务意味着执行时间超过 50ms 的任务\n    // 50ms 是长任务的阈值，超过这个时间的任务被认为会阻塞主线程\n    // 参考文档：https://developer.mozilla.org/zh-CN/docs/Web/API/Long_Tasks_API\n    const blockingTime = entry.duration - 50;\n    \n    // 只有当阻塞时间大于 0 时才累加到总阻塞时间中\n    // 如果任务持续时间小于等于 50ms，则不会产生阻塞时间\n    if (blockingTime > 0) {\n      tbt.value += blockingTime;\n    }\n  });\n};\n","import { IPerformanceEntry } from '../typings/types';\nimport { fcp, fcpEntryName, fpEntryName } from '../data/metrics';\nimport { po, poDisconnect } from './performanceObserver';\nimport { perfObservers } from './observeInstances';\nimport { onTBT } from './onTBT';\nimport { logMetric } from '../data/log';\n\nexport const onFCP = (performanceEntries: IPerformanceEntry[]) => {\n  // 遍历所有绘制性能条目\n  performanceEntries.forEach((entry) => {\n    if (entry.name === fcpEntryName) {\n      // 记录首次内容绘制（FCP）时间\n      // FCP 表示页面首次显示有意义内容的时间点\n      fcp.value = entry.startTime;\n      logMetric(fcp.value, 'fcp');\n      // FCP 触发后，启动长任务监控\n      // 长任务监控用于计算总阻塞时间（TBT），这是衡量页面交互性能的重要指标\n      perfObservers[5] = po('longtask', onTBT);\n\n      // 断开首次绘制观察器，因为 FP 和 FCP 已经获取到，不再需要继续监控\n      poDisconnect(0);\n    }\n  });\n};","import { IPerformanceEntry } from '../typings/types';\nimport { lcp } from '../data/metrics';\n\n/**\n * 初始化最大内容绘制监控\n * \n * 该函数监控页面的最大内容绘制（LCP）指标，\n * LCP 是 Core Web Vitals 的重要指标，表示页面主要内容加载完成的时间。\n * \n * 注意：LCP 观察器会持续监控，直到页面隐藏或用户交互\n * \n * @param performanceEntries - 性能条目数组，包含 LCP 事件的详细信息\n */\nexport const onLCP = (\n    performanceEntries: IPerformanceEntry[]\n  ) => {\n    // 获取最后一个 LCP 条目\n    // 因为 LCP 可能在页面加载过程中多次更新，我们取最新的值\n    const lastEntry = performanceEntries.pop();\n    \n    if (lastEntry) {\n      // 使用 renderTime 或 loadTime 作为 LCP 值\n      // renderTime: 元素渲染完成的时间\n      // loadTime: 元素加载完成的时间\n      lcp.value = lastEntry.renderTime || lastEntry.loadTime;\n    }\n  };","import { logData, logMetric } from '../data/log';\nimport { cls, lcp, rt, tbt } from '../data/metrics';\nimport { perfObservers } from './observeInstances';\nimport { poDisconnect } from './performanceObserver';\nimport { PerformanceEventTiming } from '../typings/types';\n\n/**\n * 初始化首次输入延迟监控\n * \n * 该函数在首次输入事件触发后被调用，用于：\n * 1. 计算并记录 FID (First Input Delay) 指标\n * 2. 记录其他核心 Web Vitals 指标\n * 3. 清理性能观察器，避免内存泄露\n * 4. 延迟记录 TBT 和资源消耗数据\n * \n * @param performanceEntries - 性能事件时间数组，包含输入事件的详细信息\n */\nexport const onFID = (\n  performanceEntries: PerformanceEventTiming[]\n) => {\n  // 取最后一位即为我们希望所获取的时间点\n  // 因为 FID 观察器可能触发多次，我们只需要最后一次的输入事件\n  const lastEntry = performanceEntries.pop();\n  \n  if (lastEntry) {\n    // Core Web Vitals FID 逻辑\n    // 测量输入事件的延迟操作：从事件开始到开始处理的时间差\n    // 这是衡量页面响应性的关键指标\n    logMetric(lastEntry.processingStart - lastEntry.startTime, 'fidVitals', {\n      performanceEntry: lastEntry,\n    });\n    \n    // 传统的 FID 逻辑\n    // 测量处理第一个输入事件的持续时间\n    // 包括事件处理的总时间\n    logMetric(lastEntry.duration, 'fid', {\n      performanceEntry: lastEntry,\n    });\n  }\n  \n  // 销毁对 FID 的注册回调，避免过多的观察者造成内存泄露\n  poDisconnect(1);\n  \n  // 初始化并记录 LCP (Largest Contentful Paint) 指标\n  logMetric(lcp.value, 'lcp');\n  \n  // 如果存在 LCP 观察器，立即获取其记录\n  // takeRecords() 方法可以立即获取所有待处理的性能条目\n  if (perfObservers[3] && typeof perfObservers[3].takeRecords === 'function') {\n    perfObservers[3].takeRecords();\n  }\n  \n  // 记录 CLS (Cumulative Layout Shift) 累积布局偏移指标\n  logMetric(cls.value, 'cls');\n  \n  // 记录 TBT (Total Blocking Time) 总阻塞时间指标\n  logMetric(tbt.value, 'tbt');\n  \n  // FID 触发后 5 秒延迟记录 TBT 指标\n  // 这可以反映用户在首次交互后的页面响应性\n  setTimeout(() => {\n    logMetric(tbt.value, `tbt5S`);\n  }, 5000);\n  \n  // FID 触发后 10 秒延迟记录 TBT 指标和资源消耗数据\n  // 这可以反映用户在首次交互后一段时间内的整体体验\n  setTimeout(() => {\n    logMetric(tbt.value, `tbt10S`);\n    \n    // FID 被激活以后 10S 的整体数据消耗\n    // 记录各种资源类型的加载时间消耗\n    logData('dataConsumption', rt.value);\n  }, 10000);\n};\n","import { logMetric } from '../data/log';\nimport { WP } from '../data/constants';\nimport { isPerformanceSupported } from '../helpers/isSupported';\n\n/**\n * 初始化首字节时间监控\n * \n * 该函数用于计算并记录页面的 TTFB（Time to First Byte）指标，\n * TTFB 是衡量服务器响应速度的重要指标，表示从请求开始到收到第一个字节的时间。\n * \n * 与其他性能指标不同，TTFB 不需要 PerformanceObserver，\n * 而是直接使用 Navigation Timing API 进行一次性计算。\n * \n * 计算逻辑：\n * TTFB = responseStart - requestStart\n * \n * 相关文档：\n * - Navigation Timing API: https://developer.mozilla.org/zh-CN/docs/Web/API/Navigation_timing_API\n * - TTFB 指标说明: https://web.dev/ttfb/\n */\nexport const onTTFB = (): void => {\n  // 检查浏览器是否支持性能监控 API\n  if (!isPerformanceSupported()) {\n    return;\n  }\n\n  try {\n    // 获取导航类型的性能条目\n    const navigationEntry = WP.getEntriesByType('navigation')[0] as any;\n    \n    // Safari 11.2 版本之前不支持 Navigation Timing API\n    if (!navigationEntry) {\n      return;\n    }\n    \n    // 计算首字节时间（TTFB）\n    // requestStart: 浏览器开始向服务器发送请求的时间\n    // responseStart: 浏览器收到服务器响应第一个字节的时间\n    const ttfbValue = navigationEntry.responseStart - navigationEntry.requestStart;\n    \n    // 确保 TTFB 值有效（大于 0）\n    if (ttfbValue > 0) {\n      // 记录 TTFB 指标\n      logMetric(ttfbValue, 'ttfb');\n    }\n  } catch (e) {\n    // 如果获取 TTFB 失败，静默处理\n    // 避免影响其他性能监控功能\n  }\n};","import { logMetric } from '../data/log';\nimport { PerformanceEventTiming } from '../typings/types';\n\n/**\n * INP 交互延迟追踪\n * 用于存储和计算页面的交互延迟指标\n */\nlet inpValue = 0;\nlet maxInteractionDelay = 0;\nconst interactionDelays: number[] = [];\n\n/**\n * 初始化交互到下一次绘制监控\n * \n * 该函数用于监控页面的 INP（Interaction to Next Paint）指标，\n * INP 是 Core Web Vitals 的重要指标，用于衡量页面对用户交互的响应性。\n * \n * 计算逻辑：\n * 1. 监控所有用户交互事件（点击、键盘输入、触摸等）\n * 2. 计算每个交互从开始到下一次绘制的延迟时间\n * 3. 取所有交互延迟的第98百分位数作为 INP 值\n * \n * 相关文档：\n * - INP 指标说明: https://web.dev/inp/\n * - Event Timing API: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEventTiming\n * \n * @param performanceEntries - 性能事件时间数组，包含用户交互事件的详细信息\n */\nexport const onINP = (\n  performanceEntries: PerformanceEventTiming[]\n) => {\n  // 遍历所有性能事件条目\n  performanceEntries.forEach((entry) => {\n    // 只处理用户交互事件\n    // 包括：pointerdown、pointerup、click、keydown、keyup 等\n    if (!entry.interactionId) {\n      return;\n    }\n    \n    // 计算交互延迟时间\n    // duration 包含了从事件开始到浏览器能够绘制下一帧的总时间\n    // 这是 INP 的核心指标：交互到下一次绘制的时间\n    const interactionDelay = entry.duration;\n    \n    // 确保延迟时间有效\n    if (interactionDelay > 0) {\n      // 将交互延迟添加到数组中，用于后续计算百分位数\n      interactionDelays.push(interactionDelay);\n      \n      // 更新最大交互延迟（用于简单场景的快速参考）\n      maxInteractionDelay = Math.max(maxInteractionDelay, interactionDelay);\n      \n      // 计算 INP 值（第98百分位数）\n      // 根据 Web Vitals 规范，INP 取所有交互延迟的第98百分位数\n      inpValue = calculatePercentile(interactionDelays, 98);\n      \n      // 记录当前的 INP 值\n      // 由于 INP 会随着用户交互持续更新，我们记录每次更新的值\n      logMetric(inpValue, 'inp', {\n        performanceEntry: entry,\n        maxDelay: maxInteractionDelay,\n        totalInteractions: interactionDelays.length,\n      });\n    }\n  });\n};\n\n/**\n * 计算数组的指定百分位数\n * \n * @param values - 数值数组\n * @param percentile - 百分位数（0-100）\n * @returns 指定百分位数的值\n */\nconst calculatePercentile = (values: number[], percentile: number): number => {\n  if (values.length === 0) {\n    return 0;\n  }\n  \n  // 对数组进行排序\n  const sortedValues = [...values].sort((a, b) => a - b);\n  \n  // 计算百分位数的索引\n  const index = Math.ceil((percentile / 100) * sortedValues.length) - 1;\n  \n  // 返回对应索引的值\n  return sortedValues[Math.max(0, index)] || 0;\n};\n\n/**\n * 获取当前 INP 值\n * 用于在页面卸载或其他需要最终 INP 值的场景中获取数据\n * \n * @returns 当前的 INP 值和相关统计信息\n */\nexport const getINPValue = () => {\n  return {\n    value: inpValue,\n    maxDelay: maxInteractionDelay,\n    totalInteractions: interactionDelays.length,\n    allDelays: [...interactionDelays],\n  };\n};","import { config } from '../config';\nimport { logMetric } from '../data/log';\nimport { cls, lcp, tbt } from '../data/metrics';\nimport { onLayoutShift } from './onCumulativeLayoutShift';\nimport { perfObservers } from './observeInstances';\nimport { po, poDisconnect } from './performanceObserver';\nimport { onResourceTiming } from './onResourceTiming';\nimport { onElementTiming } from './onElementTiming';\nimport { onFP } from './onFP';\nimport { onFCP } from './onFCP';\nimport { onLCP } from './onLCP';\nimport { onFID } from './onFID';\nimport { onTTFB } from './onTTFB';\nimport { onINP,getINPValue } from './onINP';\n\n/**\n * 初始化性能观察器\n * 设置各种性能指标的监控\n */\nexport const initPerformanceObserver = (): void => {\n  console.log('⏰ 性能收集开始');\n\n  // 计算 TTFB（首字节时间）\n  onTTFB();\n\n  // 监控首次绘制（FP）\n  perfObservers[0] = po('paint', onFP);\n  \n  // 监控首次内容绘制（FCP）\n  perfObservers[1] = po('paint', onFCP);\n\n  // 监控首次输入延迟（FID）\n  perfObservers[2] = po('first-input', onFID);\n\n  // 监控最大内容绘制（LCP）\n  perfObservers[3] = po('largest-contentful-paint', onLCP);\n\n  // 监控资源加载性能（可选）\n  if (config.isResourceTiming) {\n    console.log('�� 收集页面性能数据');\n    po('resource', onResourceTiming);\n  }\n\n  // 监控布局偏移（CLS）\n  perfObservers[4] = po('layout-shift', onLayoutShift);\n\n  // 监控元素时间指标（可选）\n  if (config.isElementTiming) {\n    po('element', onElementTiming);\n  }\n\n  // 监控交互响应性（INP）\n  perfObservers[6] = po('event', onINP);\n};\n\n/**\n * 页面隐藏时断开性能观察器连接\n * 记录最终值并清理资源\n */\nexport const disconnectPerfObserversHidden = (): void => {\n  // 记录最终 LCP 值并断开连接\n  if (perfObservers[2]) {\n    logMetric(lcp.value, `lcpFinal`);\n    poDisconnect(2);\n  }\n\n  // 记录最终 CLS 值并断开连接\n  if (perfObservers[3]) {\n    if (typeof perfObservers[3].takeRecords === 'function') {\n      perfObservers[3].takeRecords();\n    }\n    logMetric(cls.value, `clsFinal`);\n    poDisconnect(3);\n  }\n\n  // 记录最终 TBT 值并断开连接\n  if (perfObservers[4]) {\n    logMetric(tbt.value, `tbtFinal`);\n    poDisconnect(4);\n  }\n\n  // 记录最终 INP 值并断开连接\n  if (perfObservers[6]) {\n    console.log('🎯 记录最终 INP 值');\n    const finalINP = getINPValue();\n    if (finalINP.value > 0) {\n      logMetric(finalINP.value, `inpFinal`, finalINP);\n    }\n    poDisconnect(6);\n  }\n};","import { W, WP } from '../data/constants';\n\n/**\n * 检查浏览器是否支持性能监控相关的 API\n * \n * 该函数检查浏览器是否支持以下三个关键的性能 API：\n * 1. Navigation Timing API - 导航时间 API，用于获取页面加载性能数据\n * 2. User Timing API - 用户时间 API，用于自定义性能标记和测量\n * 3. PerformanceObserver Interface - 性能观察器接口，用于异步监控性能事件\n * \n * 兼容性说明：\n * - 在 Safari 浏览器中，User Timing API (performance.mark()) 不可用\n * - 这会导致 DevTools 时间轴无法显示性能标记\n * - 但其他性能 API 仍然可以正常使用\n * \n * 相关文档：\n * - Performance.mark(): https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n * - PerformanceObserver: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n * - Performance.getEntriesByType: https://developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType\n * \n * @returns true 表示浏览器支持性能监控 API，false 表示不支持\n */\nexport const isPerformanceSupported = (): boolean => {\n  // 检查 performance 对象是否存在\n  // 检查 getEntriesByType 方法是否可用（Navigation Timing API）\n  // 检查 now 方法是否可用（高精度时间戳）\n  // 检查 mark 方法是否可用（User Timing API）\n  return WP && !!WP.getEntriesByType && !!WP.now && !!WP.mark;\n};\n","import { config } from '../config';\nimport { W } from '../data/constants';\n//rrweb引入到了这里\nimport { AskPriority } from '../typings/types';\ntype ErrorInfo = {};\nclass ErrorTrace {\n  private errordefo: ErrorInfo;\n  constructor() {\n    this.errordefo = {};\n  }\n  //全局捕获同步+异步错误\n  private globalError() {\n    console.log('上报sdk');\n    console.log('[ ❌全局捕获错误 ]');\n    W.onerror = (\n      eventOrMessage: Event | string,\n      scriptURI?: string,\n      lineno?: number,\n      colno?: number,\n      error?: Error\n    ): boolean => {\n      console.log('[ 我知道错误了 ]', eventOrMessage);\n      const errorInfo = JSON.stringify({\n        scriptURI,\n        lineno,\n        colno,\n        error,\n      });\n      //通过错误信息还原sourcemap源文件地址\n      console.log(errorInfo);\n      config.reportData.sendToAnalytics(AskPriority.IDLE, errorInfo);\n      return true;\n    };\n  }\n  //资源挂载失败 如404png\n  private networkError() {\n    W.addEventListener(\n      'error',\n      function (e: ErrorEvent) {\n        if (e.target !== W) {\n          console.log('🖼网络错误', e.target);\n        }\n      },\n      true\n    );\n  }\n  //异步Promise错误\n  private promiseError() {\n    W.addEventListener('unhandledrejection', function (e) {\n      e.preventDefault();\n      console.log('我知道 promise 的错误了', e.reason);\n      return true;\n    });\n  }\n  private iframeError() {\n    const frames = W.frames;\n    for (let i = 0; i < frames.length; i++) {\n      frames[i].addEventListener(\n        'error',\n        (e) => {\n          console.log('addEventListener');\n          console.log(e);\n        },\n        true\n      );\n\n      frames[i].addEventListener(\n        'unhandledrejection',\n        function (e) {\n          console.log('unhandledrejection');\n        },\n        true\n      );\n    }\n  }\n  // private consoleReflect() {\n  //   const console_error = W.console.error;\n  //   W.console.error = function () {\n  //     config.reportData.sendToAnalytics(AskPriority.IDLE, errorInfo);\n  //     console_error.apply(window, arguments);\n  //   };\n  // }\n  public run() {\n    this.networkError();\n    //触发全体数据监听错误\n    this.globalError();\n    //触发promise的错误\n    this.promiseError();\n  }\n}\nexport default ErrorTrace;\n","import { IAnalyticsTrackerOptions } from '../typings/types';\nconst analyticsTracker = (options: IAnalyticsTrackerOptions): void => {\n  const {\n    metricName,\n    eventProperties,\n    data,\n    navigatorInformation,\n    vitalsScore,\n  } = options;\n  console.log(options);\n};\nexport default analyticsTracker;\n","import { AskPriority, IReportData } from '../typings/types';\nimport { W, WN } from './constants';\n\n/**\n * 数据上报工具配置选项\n */\ntype TrackerOptions = {\n  /** 日志上报的目标URL地址 */\n  logUrl: string;\n};\n\n/**\n * 数据上报类\n * 实现了 IReportData 接口，负责将性能监控数据发送到指定的服务器\n * \n * 支持两种上报方式：\n * 1. 紧急数据（URGENT）：使用 fetch 或 XMLHttpRequest 立即发送\n * 2. 空闲数据（IDLE）：使用 sendBeacon 或图片请求在空闲时发送\n */\nclass ReportData implements IReportData {\n  /** 日志上报的目标URL地址 */\n  private logUrl: string;\n\n  /**\n   * 构造函数\n   * @param options - 配置选项，必须包含 logUrl\n   * @throws Error 如果没有传递 logUrl 参数\n   */\n  constructor(options: TrackerOptions) {\n    const { logUrl } = options;\n    if (logUrl) {\n      this.logUrl = logUrl;\n    } else {\n      throw new Error('请传递要记录数据的路由~');\n    }\n  }\n\n  /**\n   * 发送数据到分析服务\n   * 根据优先级选择不同的上报方式，确保数据能够可靠地发送到服务器\n   * \n   * @param level - 数据优先级，决定上报方式和时机\n   * @param body - 要上报的数据内容\n   * @param uri - 可选的自定义上报URL，如果提供则覆盖默认的 logUrl\n   */\n  public sendToAnalytics(level: AskPriority, body: string, uri?: string) {\n    // 确定最终使用的上报URL\n    let logurl = this.logUrl;\n    // 临时更换其他url，用于特殊场景下的数据上报\n    if (uri) {\n      logurl = uri;\n    }\n    // console.log('路由', logurl);\n\n    // 紧急数据上报：需要立即发送的重要数据\n    if (level == AskPriority.URGENT) {\n      // 优先使用 fetch API，支持 keepalive 选项\n      if (!!W.fetch) {\n        fetch(logurl, { \n          body, \n          method: 'POST', \n          keepalive: true  // 确保页面关闭后请求仍能完成\n        });\n      } else {\n        // 降级到 XMLHttpRequest\n        let xhr: XMLHttpRequest | null = new XMLHttpRequest();\n        xhr.open('post', logurl, true);\n        // 设置请求头，指定内容类型为 JSON\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(body); // 发送参数\n        \n        xhr.onload = function (e) {\n          //   if (this.status == 200 || this.status == 304) {\n          //     alert(this.responseText);\n          //   }\n          // 及时清理引用，防止多次创建导致的内存泄露\n          xhr = null;\n        };\n      }\n    } \n    // 空闲数据上报：可以在空闲时发送的非紧急数据\n    else if (level == AskPriority.IDLE) {\n      // 优先使用 sendBeacon API，专为数据上报设计\n      if (!!WN.sendBeacon) {\n        navigator.sendBeacon(logurl, body);\n      } else {\n        // 降级到图片请求方式，兼容性最好\n        let img: HTMLImageElement | null = new Image();\n        img.src = `${logurl}?body=${body}`;\n        img.onload = function () {\n          // 统计完成收回创建的元素，防止内存泄露\n          img = null;\n        };\n      }\n    }\n  }\n}\n\nexport default ReportData;\n","import { logData } from './log';\nimport { convertToKB } from '../helpers/utils';\n\n/**\n * 存储空间估算报告函数\n * \n * 该函数使用 StorageManager 接口的 estimate() 方法来获取应用的存储使用情况：\n * - 应用已使用的存储空间（usage）\n * - 可用的存储空间（quota）\n * - 各种存储类型的详细使用情况\n * \n * 参考文档：https://developer.mozilla.org/en-US/docs/Web/API/StorageManager/estimate\n * \n * @param storageInfo - StorageEstimate 对象，包含存储空间的使用和配额信息\n */\nexport const reportStorageEstimate = (storageInfo: StorageEstimate) => {\n  // 获取详细的存储使用情况\n  // 某些浏览器可能不支持 usageDetails，需要做兼容性处理\n  const estimateUsageDetails =\n    'usageDetails' in storageInfo ? (storageInfo as any).usageDetails : {};\n  \n  // 记录存储空间估算数据\n  // 将所有存储空间数值从字节转换为 KB，提高可读性\n  logData('storageEstimate', {\n    quota: convertToKB((storageInfo as any).quota),                    // 总配额（可用存储空间）\n    usage: convertToKB((storageInfo as any).usage),                    // 已使用存储空间\n    caches: convertToKB(estimateUsageDetails.caches),                  // 缓存存储使用量\n    indexedDB: convertToKB(estimateUsageDetails.indexedDB),            // IndexedDB 存储使用量\n    serviceWorker: convertToKB(estimateUsageDetails.serviceWorkerRegistrations), // Service Worker 注册存储使用量\n  });\n};\n","/**\n * 一款免费的开源性能监控SDK\n *\n * @remarks\n * 目前能够完成监控的指标包含FCP等\n *\n * @packageDocumentation\n */\nimport { config } from './config';\nimport { D, W, WN, WP } from './data/constants';\nimport { logData } from './data/log';\nimport { getNavigationTiming } from './performance/getNavigationTiming';\nimport {\n  disconnectPerfObserversHidden,\n  initPerformanceObserver,\n} from './performance/observe';\nimport { isPerformanceSupported } from './tools/isSupported';\nimport { IReportData, IOptions } from './typings/types';\nimport ErrorTrace from './error';\nimport analyticsTracker from './data/analyticsTracker';\nimport ReportData from './data/reportdata';\nimport { didVisibilityChange } from './helpers/onVisibilityChange';\nimport { getNetworkInformation } from './helpers/getNetworkInformation';\nimport { reportStorageEstimate } from './data/storageEstimate';\n\n/**\n * 性能监控主类\n * 负责初始化性能监控、错误跟踪、网络信息收集等功能\n * \n * 主要功能模块：\n * 1. 性能指标监控（FCP、LCP、CLS、FID、TBT等）\n * 2. 错误捕获和跟踪\n * 3. 网络信息收集\n * 4. 存储空间监控\n * 5. 页面可见性管理\n */\nexport default class PerformanceMonitorSdk {\n  /** SDK版本号 */\n  private v = '1.0.0';\n  \n  /** 数据上报接口实例，供外部调用数据上报功能 */\n  private reportData: IReportData;\n\n  /**\n   * 构造函数\n   * 初始化性能监控SDK，配置各种监控选项和功能模块\n   * \n   * @param options - 配置选项，包含日志URL、错误捕获、性能监控等配置\n   * @throws Error 如果没有传递必需的 logUrl 参数\n   */\n  constructor(options: IOptions = {}) {\n    // 验证必需参数：日志上报URL\n    const logUrl = options.logUrl;\n    if (!logUrl) {\n      throw new Error(`系统监控平台${this.v}提示未传递logUrl`);\n    }\n\n    // 初始化数据上报实例，用于向后台输送监控数据\n    const insReportData = new ReportData({\n      logUrl,\n    });\n    config.reportData = insReportData;\n    \n    // 对外暴露上传接口，供外部调用\n    this.reportData = insReportData;\n\n    // 配置数据分析追踪器\n    const _analyticsTracker = options.analyticsTracker;\n    if (_analyticsTracker) {\n      // 使用用户自定义的分析追踪器，支持自定义数据分析逻辑\n      config.analyticsTracker = _analyticsTracker;\n    } else {\n      // 使用默认的分析追踪器，提供基础的性能数据分析\n      config.analyticsTracker = analyticsTracker;\n    }\n\n    // 配置性能监控选项\n    config.isResourceTiming = !!options.resourceTiming;      // 是否开启资源加载时间监控\n    config.isElementTiming = !!options.elementTiming;        // 是否开启元素时间监控\n    config.maxTime = options.maxMeasureTime || config.maxTime; // 设置最大测量时间，防止异常数据\n\n    // 错误监控配置\n    if (options.captureError) {\n      // 开启错误跟踪功能，捕获JavaScript运行时错误\n      const errorTtace = new ErrorTrace();\n      errorTtace.run();\n    }\n\n    // 浏览器兼容性检查：如果不支持性能指标则退出\n    // 这确保了SDK只在支持的浏览器中运行，避免运行时错误\n    if (!isPerformanceSupported()) {\n      return;\n    }\n\n    // 性能观察器初始化：如果浏览器支持PerformanceObserver则启用\n    // PerformanceObserver是监控性能指标的核心API\n    if ('PerformanceObserver' in W) {\n      initPerformanceObserver();\n    }\n\n    // 页面可见性变化监听初始化\n    // 当页面不可见时，停止性能监控以节省资源\n    if (typeof D.hidden !== 'undefined') {\n      // Opera 12.10 和 Firefox 18 及更高版本支持\n      D.addEventListener(\n        'visibilitychange',\n        didVisibilityChange.bind(this, disconnectPerfObserversHidden)\n      );\n    }\n\n    // 记录页面导航时间数据（DNS请求、白屏时间等）\n    // 这些数据反映了页面的基础加载性能\n    logData('navigationTiming', getNavigationTiming());\n    \n    // 记录用户网络信息（H5+多普勒测速）\n    // 包括网络类型、下行带宽、RTT等信息\n    logData('networkInformation', getNetworkInformation());\n    \n    // 管理离线缓存数据：如果浏览器支持存储估算API则启用\n    // 监控应用的存储使用情况，帮助优化离线体验\n    if (WN && WN.storage && typeof WN.storage.estimate === 'function') {\n      WN.storage.estimate().then(reportStorageEstimate);\n    }\n  }\n}\n","import PerformanceSdk from '../../src/index';\n\nconst sdk = new PerformanceSdk({\n  elementTiming: true,\n  logUrl: 'http://123.com/test',\n});\n\nconsole.log('🐻', sdk);\n// 模拟一个长任务\nconst start = Date.now();\nwhile (Date.now() - start < 1000) {}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}