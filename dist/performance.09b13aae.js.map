{"version":3,"sources":["../src/typings/types.ts","../src/data/constants.ts","../src/data/ReportData.ts","../src/config/index.ts","../src/helpers/getNetworkInformation.ts","../src/helpers/isLowEnd.ts","../src/helpers/getNavigatorInfo.ts","../src/helpers/onVisibilityChange.ts","../src/helpers/utils.ts","../src/helpers/vitalsScore.ts","../src/data/reportPerf.ts","../src/data/log.ts","../src/helpers/isSupported.ts","../src/performance/getNavigationTiming.ts","../src/data/metrics.ts","../src/performance/cumulativeLayoutShift.ts","../src/performance/observeInstances.ts","../src/performance/performanceObserver.ts","../src/performance/firstInput.ts","../src/performance/totalBlockingTime.ts","../src/performance/paint.ts","../src/performance/resourceTiming.ts","../src/performance/observe.ts","../src/tools/isSupported.ts","../src/error/index.ts","../src/data/analyticsTracker.ts","../src/data/reportData.ts","../src/data/storageEstimate.ts","../src/yideng.ts","performance/index.ts"],"names":[],"mappings":";;A6BAA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA;AAA8C,SAAA,uBAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CAAA,UAAA,GAAA,CAAA,KAAA,OAAA,EAAA,CAAA;AAE9C,IAAM,GAAG,GAAG,IAAI,eAAc,CAAC;EAC7B,aAAa,EAAE,IAAI;A1BHrB,ADAA,AuBCA,AxByBA,AU1BA,AGEA,AYFA,AhBAA,AiBAA,AHAA,AlBAA,AFAA,ACAA,AOAA,ALAA,ACAA,ACEA,AMFA,AGAA,ALAA,ASAA,ANCA,AIAA,AHDA,AIAA,AFAA,AIAA,AvBuIA,A4B/HA,ECJE,E1BJF,ADAA,AuBCM,AdDN,AeAA,AhBAA,AiBAA,AHAA,AlBAA,AFAA,ACAA,AOAA,ALAA,ACAA,AOAA,AGAA,ALAA,ASAA,AFCA,AHDA,AIAA,AFAA,AIAA,AKQA,IDRA,ATAA,AWIQ,E3BJR,AwBAA,AGIU,ClBJV,ADAA,AiBAA,AHAA,ANAA,AIAA,ADAA,AOQA,CbRA,AKCA,ADDA,CjBAA,AwBAA,CfAA,ADAA,AcAA,AlBAA,AFAA,ACAA,AOAA,ALAA,ACAA,AKAA,ASAA,ALAA,AIAA,AEAA,AKQA,CzBRA,AYAA,AKCA,ADDA,EbAA,AFAA,ACAA,AOAA,ALAA,ACAA,AKAA,AIAA,AMAA,CpBAA,AwBAA,ATAA,EhBAA,AuBCsB,ACDtB,CfAA,ADAA,AcAA,AFAA,ADAA,AOQA,CbRA,AKCA,ADDA,CMCyB,CnBDzB,AFAA,ACAA,AOAA,ALAA,ACAA,AKAA,AIAA,AMAA,QECM,QtBDN,CAAA,OAAA,AsBCsB,CAAI,OAAiC,EAAU;AtBDzB,ADC5C,AD0BA,AU1BA,AeAA,AhBAA,AiBAA,AHAA,AlBAA,AFDuC,ACGvC,AODA,ALAA,ACAA,ACCA,AMAA,AGFA,ALAA,ASAA,AFCA,AHDA,AIAA,AFEA,AIDA,AvBsIA,A4B/HA,CCJC,CJHC,AIGA,E3BJF,ASAA,AeAA,AhBAA,AiBAA,AHAA,AlBAA,AYAA,ALAA,ASAA,AFCA,AHDA,AIAA,ArBuIY,A4B/HZ,INRA,ADAA,ClBD4C,ACAL,CuBCvC,CLAA,ADAA,CHAA,CSAA,CzBAA,AwBAA,AFAA,AIQA,CjBRA,AOAA,AlB0IC,Ca1ID,CXAA,AwBAA,AFAA,ApBDuC,AwBSvC,CjBRA,APDuC,AkBCvC,ADAA,CRAA,CcAA,CjBAA,AOAA,CCAA,EhBAA,AwBAA,AhBAA,AcAA,AJCA,AHDA,AWQA,CjBRA,CLAA,AOAA,COCA,EdDA,EIAA,AOAA,CdD4C,CAAA,CiBE5C,EdDA,QHD4C,CAAA,IAAA,CAAA,CAAA,KCAL,KDAK,ECAL,CDAK,CAAA,KAAA,OAAA,EAAA,CAAA,OCAL,MAAA,uBAAA,MAAA,CAAA,QAAA,aAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,yBAAA,MAAA,IAAA,CAAA,CAAA,WAAA,KAAA,MAAA,IAAA,CAAA,KAAA,MAAA,CAAA,SAAA,qBAAA,CAAA,KAAA,OAAA,CAAA,CAAA;ADGhC,ADF6B,AD2B7B,AU1BP,AeDoC,AhBCpC,AiBCA,AHAA,AlBDA,AFIA,AKFA,ASFA,ALEA,ASFA,AFCA,AHCA,AIFA,ArBsIA,A4B9HA,ACHA,C7BiIA,CyBrIE,EtBAW,AFyBA,AU1Bb,ADAA,AcCA,AlBDA,AYAA,AIAA,AFCA,ACDA,AOQA,C3BkBc,E4BrBP,C5BqBO,A2BlBd,ACHQ,C3BN4B,AwBAA,CvBEjB,AQDnB,AaCA,CxBqIY,A4B9HZ,ACHW,CPLX,ADAA,AQKY,C1BJO,AQDnB,AaCA,AlBDA,EL0Bc,AqB1Bd,ADAA,CpB0Bc,AK1Bd,AuBKgB,C3BNoB,AD2BtB,AyB3BsB,CxBAA,AwBAA,AESpC,ACHkB,E1BJC,AFyBF,AU1BjB,AaCA,CrBAmB,AeDnB,AECA,ASIqB,CPLrB,ADAA,ArBsIuB,A6BjID,CnBLtB,AJAA,CYAA,AECA,ApBqIuB,EC5GA,AS1BvB,CPCmB,GAAkB,CeDrC,AECA,EVDA,uBRDoC,AwBAA,OxBAA,AwBAA,wBxBAA,AwBAA,MxBAA,AwBAA,uBxBAA,AwBAA,MxBAA,AwBAA,CxBAA,AwBAA,QxBAA,AwBAA,axBAA,AwBAA,CxBAA,AwBAA,kBxBAA,AwBAA,CxBAA,AwBAA,gBxBAA,AwBAA,CxBAA,AwBAA,WxBAA,AwBAA,CxBAA,AwBAA,yBxBAA,AwBAA,MxBAA,AwBAA,IxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,WxBAA,AwBAA,KxBAA,AwBAA,MxBAA,AwBAA,IxBAA,AwBAA,CxBAA,AwBAA,KxBAA,AwBAA,MxBAA,AwBAA,CxBAA,AwBAA,SxBAA,AwBAA,qBxBAA,AwBAA,CxBAA,AwBAA,KxBAA,AwBAA,OxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA;AxBAA,AD6BpC,AU1BA,AeHoC,AhBEpC,AcA+C,AlBE/C,AGCA,ASHA,AIAA,AFCA,ACCA,AOMA,ACHA,E1BJE,AsBAA,AzBqIA,EUtIF,AQAA,AIAA,AFCA,AQOA,EHNI,GvBJgC,AwBAA,AFEW,CdA/C,GAAA,AVsIE,CAAA,EyBpIY,CDFiC,CAAA,CCOzC,CfPN,EUCA,EFDA,AUQA,C1BVoC,AwBAA,ANGpC,ApBqIE,CExIkC,AuBSvB,ACTuB,AJEpC,AtBsIE,CyBpIE,APFJ,AUQA,C1BVoC,AwBAA,CxBAA,AwBAA,AJEpC,GFCA,EFDA,AlBsIE,A4B9HF,C5B8HE,CsBtIF,CGEc,CzBoIZ,CExIkC,AwBAA,A1BwIlC,CExIkC,AwBAA,A1BwIlC,GAAA,QAAU,CExIwB,AwBAA,CxBAA,AwBAA,GFEW,OAAA,GtBFX,AwBAA,SxBAA,AwBAA,YFEW,MAAA,uBAAA,MAAA,CAAA,QAAA,aAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,yBAAA,MAAA,IAAA,CAAA,CAAA,WAAA,KAAA,MAAA,IAAA,CAAA,KAAA,MAAA,CAAA,SAAA,qBAAA,CAAA,KAAA,OAAA,CAAA,CAAA;AtBFX,AD8B7B,AazBA,AYL6B,AhBGpC,AcD+C,AfI/C,ASDA,AIFA,ANCO,AIAP,AQOA,ACHA,E1BJE,AHqIA,EyBpIE,AxByBS,AazBA,AJFb,ADGM,AaHN,ANCa,AIAb,AQOA,ACHM,C5BsBQ,GAAA,AmB1Bd,ClBJoC,AwBAA,AFEW,AKMpC,EfHS,AMDpB,CjBAY,AMEE,AmBKd,ACHc,C7BiIZ,CGrIY,AWCM,AdoIlB,CC3GY,AQxBG,AaHjB,AMQA,C3BmBc,AS3Bd,ADGkB,AoBEA,C5BsBJ,Ae1BY,AaIP,C1BJD,AmBDlB,AFCA,CKCmB,AfFnB,CT2BiB,AQxBK,AOFI,AaIJ,C5BsBJ,AazBE,AeGE,CJChB,AxBqBa,AazBC,ALCI,AmBKxB,ACHwB,GLNuB,AFC/C,AtBsIE,CUtIF,AcD+C,AfInB,ATmI1B,CEzIkC,AwBAA,AjBMP,AOFH,CdJU,AwBAA,AFEW,ARErB,CSKb,AxBqBa,AazBN,AUH2B,CtBFX,AuBKhC,ACLgC,CxBAA,AwBAA,CZKD,AdoIjC,CcpIiC,AdoIjC,CcpImC,EdoInC,CGrI0B,AHqI1B,CGrI2B,AHqI3B,CwBvI6C,CAAA,CRErB,AhBqIxB,GEzIkC,AwBAA,AVIS,CdJT,AuBKjB,ACLiB,AVIS,CAAE,ChBqIrC,IEzI0B,AwBAA,CxBAA,AwBAA,AFEW,CAAA,EtBFX,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,MxBAA,AwBAA,ExBAA,AwBAA,CxBAA,AwBAA,AFEW,SAAA,CtBFX,AwBAA,CxBAA,AwBAA,GxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,GxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,UxBAA,AwBAA,GxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,UxBAA,AwBAA,QxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,YxBAA,AwBAA,kBxBAA,AwBAA,CxBAA,AwBAA,KxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,QxBAA,AwBAA,QxBAA,AwBAA,MxBAA,AwBAA,CxBAA,AwBAA,cxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,ExBAA,AwBAA,cxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,GxBAA,AwBAA,GxBAA,AwBAA,CxBAA,AwBAA;AxBAA,ADgCpC,AazBA,AYPoC,AhBKpC,AcH+C,AjBGxC,AEGP,AaJA,AFCO,ApBqIP,A4B3HA,ACNA,C7BiIC,EAHW,CGnImB,AsBE3B,AlBDS,AeDb,AFCa,AQUb,GCNO,CJHC,CvBN4B,AwBAA,AFEW,CrBEV,CsBK/B,AIAK,C1BL4B,A0BK3B,EtBJW,APkIA,C6B9HR,CDMf,ACNe,CtBJQ,AsBIN,CJAJ,ALJc,CKCvB,AzBiImB,A4BxHvB,CCNoB,CPLpB,AFC2B,ClBLS,AwBAA,CxBAA,AuBM5B,ACN4B,CnBKb,AeDvB,CpBJoC,AwBAA,AnBKb,AsBIE,C3BTW,AwBAA,A1BuIb,A4BxHvB,CJb+C,AxBqIxB,CEvIa,AwBAA,AFEW,AJGpB,ASIC,C3BTQ,AwBAA,ANKT,CIHoB,CAAA,AFE/C,COKgC,EAAE,CtBJX,AsBIY,GtBJT,APkIH,EEvIa,AwBAA,CxBAA,AwBAA,A1BuIxB,EoBlIe,CIHoB,CtBFX,AwBAA,AFEW,CJGjB,KIHiB,CAAA,AxBqIxB,GwBrIwB,AJGlC,ApBkIU,CwBrIwB,AxBqIxB,CwBrIwB,AxBqIxB,CAAA,CAAA,GEvIa,AwBAA,CxBAA,AwBAA,AFEW,CtBFX,AwBAA,CxBAA,AwBAA,AFEW,CAAA,GJGpB,CAAI,IlBLK,AwBAA,ExBAA,AwBAA,AFEW,CtBFX,AwBAA,AFEW,GtBFX,AwBAA,AFEW,CtBFX,AwBAA,AFEW,CAAA,CAAA,EtBFX,AwBAA,CFEW,CAAA,CAAA,AJGuB,EAAI,QIH3B,GAAA,CtBFX,AwBAA,AFEW,CtBFX,AwBAA,AFEW,CtBFX,AwBAA,ExBAA,AwBAA,CxBAA,AwBAA,GxBAA,AwBAA,GFEW,GtBFX,AwBAA,CxBAA,AwBAA,IFEW,CAAA,CAAA,QtBFX,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,EFEW,etBFX,AwBAA,GFEW,CAAA,ItBFX,AwBAA,CFEW,CAAA,CAAA,MtBFX,AwBAA,CxBAA,AwBAA,CFEW,QAAA,MAAA,CAAA,cAAA,CAAA,CAAA,EAAA,cAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA;AtBFX,ADiC7B,AyBjC6B,AFEW,ApBOxC,AKAP,AaJA,AMYA,EzBb6C,AIE3C,AaAA,CjBF6C,CAAC,AsBG5C,AxB0BS,AGxBF,AKAL,AaJN,AMYA,C3BgBc,CGxBD,EHwBC,CCjCsB,AwBAA,AFEW,ApBOlC,CkBJb,AMYA,EnBRc,CaJd,AMYA,E3BgBc,AQxBG,CRwBH,AGxBD,AKAK,CRwBJ,AGxBD,EAAA,CHwBI,AQxBK,AaJtB,AFCoB,CAAC,CIJ0B,ApBON,AKAjB,CePuB,CCKvB,CvBPY,AwBAA,AFEW,CtBFX,AwBAA,AFEW,ApBOF,AKAjB,CgBAtB,AhBAuB,CPTO,ADiCX,AyBjCW,AFEW,AJInB,ClBNQ,AwBAA,AFEW,AJIlB,ElBNO,AwBAA,CxBAA,AwBAA,EDSvB,CAFT,AGUJ,CAAA,GRX8B,CIJiB,CAAA,EIe/C,C1BjBoC,AwBAA,ANMD,ClBNC,AwBAA,AFEW,CJIR,ElBNH,AwBAA,ODOZ,OvBPY,AwBAA,AFEW,CtBFX,AwBAA,AFEW,CtBFX,AwBAA,AFEW,CAAA,KtBFX,AwBAA,CxBAA,AwBAA,GxBAA,AwBAA,AFEW,EAAA,CAAA,GtBFX,AwBAA,AFEW,CtBFX,AwBAA,AFEW,IAAA,UtBFX,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,ExBAA,AwBAA,CxBAA,AwBAA,EFEW,CAAA,CtBFX,AwBAA,AFEW,EAAA,CAAA,EtBFX,AwBAA,CFEW,CtBFX,AwBAA,CxBAA,AwBAA,ExBAA,AwBAA,EFEW,CAAA,OtBFX,AwBAA,MxBAA,AwBAA,CFEW,CAAA,CAAA,StBFX,AwBAA,MxBAA,AwBAA,EFEW,MtBFX,AwBAA,EFEW,QtBFX,AwBAA,CxBAA,AwBAA,AFEW,CtBFX,AwBAA,AFEW,CtBFX,AwBAA,IxBAA,AwBAA,CxBAA,AwBAA,ExBAA,AwBAA,CxBAA,AwBAA;AxBAA,ADmCpC,AyBnCoC,AFEW,ApBS/C,AKAA,AaDA,AMQA,EzBbE,AIEA,EkBCE,AHEJ,AFHI,AQWJ,IRXQ,ClBP4B,AwBAA,AFEW,CjBKrC,EAAE,CaAC,CAAC,CKCC,GtBHG,AsBIZ,ALFY,EjBFE,EyBapB,CRXuB,ClBPa,AwBAA,AJUpC,CnBLyB,ADLW,AuBSvB,ACTuB,AFEW,AIgB/C,CHVI,ADN2C,CFQ/C,CER+C,CAAA,EAAA,CAAA,CtBFX,AwBAA,CxBAA,AwBAA,AJUpC,GpBVoC,AuBQrB,ACRqB,MNOF,CILa,CAAA,AJKX,EQWpC,CJhB+C,AIgB/C,C1BlBoC,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,IEkBpC,OJhB+C,CAAA,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA,EtBFX,AwBAA,OxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,GFEW,CtBFX,AwBAA,AFEW,CtBFX,AwBAA,AFEW,EAAA,CtBFX,AwBAA,AFEW,CtBFX,AwBAA,GFEW,KAAA,EAAA,CAAA,EAAA,UAAA,MAAA,YAAA,MAAA,QAAA,UAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AtBFX,ADoC7B,AyBpC6B,AhBQ7B,AcNwC,AhBMxC,ACIP,AaDA,AMQA,CrBXC,CJFC,AsBIA,ExB0BW,AS5BA,AFAA,ACIP,AaDN,AMQA,E3BiBe,AmB5BT,GlBR8B,AuBU3B,AxB0BM,AyBpCqB,AFEW,CCQrC,ALFJ,CXIO,EgBFA,CAAC,AfFS,AFAA,ACIP,CAAC,AmBOjB,C3BiBe,CE9BE,AF8BF,AS5BQ,AFAA,CCIH,AmBOpB,CzBbmB,AF8BJ,AqBzBf,CbCsB,CgBFD,CvBVe,AuBUd,AxB0BH,AyBpCiB,AJWpC,CpBXoC,ADoChB,AyBpCgB,AjBYX,CNND,AF8BH,AS5BE,AcNwB,AhBMxB,ACIG,AWJX,ClBRqB,AwBAA,AhBQb,AcNwB,AhBMxB,CNRa,AwBAA,ANQpB,GEGhB,EFHqB,CAAC,CnB4BiC,AuBlCR,CAAA,CdMxB,AFAA,EgBNwB,CdMrB,AFAA,EoBW1B,CRX+B,AQW/B,ERXiC,GlBRG,AwBAA,ChBQvB,AFAA,AYAwB,CAAC,AQWtC,CJjB+C,CAAA,CAAA,EtBFX,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,EhBQb,AFAA,CECrB,AFDyB,GNRS,AwBAA,AlBQE,CNRF,AwBAA,ClBQM,MECrB,ERTe,AwBAA,AhBUlC,CRVkC,AwBAA,GhBUzB,EACT,CRXkC,AwBAA,CxBAA,AwBAA,GxBAA,AwBAA,CxBAA,AwBAA,AFEW,CtBFX,AwBAA,MxBAA,AwBAA,AFEW,CtBFX,AwBAA,AFEW,CAAA,CdSpB,EAAA,CcToB,CAAA,GAAA,CAAA,CtBFX,AwBAA,kBxBAA,AwBAA,CxBAA,AwBAA,QxBAA,AwBAA,CxBAA,AwBAA,GxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,IxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,ExBAA,AwBAA,CxBAA,AwBAA,gCxBAA,AwBAA,OxBAA,AwBAA,CxBAA,AwBAA,CxBAA,AwBAA,UxBAA,AwBAA,CxBAA,AwBAA,YxBAA,AwBAA,SxBAA,AwBAA,yExBAA,AwBAA,CxBAA,AwBAA,GxBAA,AwBAA,MxBAA,AwBAA,GxBAA,AwBAA,MxBAA,AwBAA,ExBAA,AwBAA,CxBAA,AwBAA;AxBUpC,AuBCA,AxB2BA,Aa3BO,AYDP,AFR+C,AjBQ/C,AEIA,AaFO,AMQP,CHTC,CtBJC,AOMA,AFJA,EMEW,AQCA,AFHT,AQWJ,CRXK,CVIH,CIFc,EUT+B,AhBOtC,CMEO,CMFL,IAAI,ENEC,CAAA,CNFG,CAAC,AYAA,CNEJ,AJEN,AUJW,CIP0B,CdWpC,AcXoC,AhBOxB,AoBWvB,CdTmB,ANFK,CgBPuB,AJOtB,CIPsB,AIkB/C,CNRoC,GAAA,AFHN,CZAC,CAAC,CAAC,AoBWjC,CpBXkC,CEIlB,AFJmB,EcGC,CAAA,QEVW,KJOL,EIPK,AJOH,CIPG,CAAA,MAAA,AFUX,CEVW,EFUR,OEVQ,CAAA,CFUlC,KEVkC,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KFUX,CAAA,EAAc,GEVH,kBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,gCAAA,OAAA,CAAA,CAAA,UAAA,CAAA,YAAA,SAAA,yEAAA,CAAA,GAAA,MAAA,GAAA,MAAA,EAAA,CAAA,KAD/C;ACUE,AxB4BK,AuBtCP,AhBSA,ACKA,AQJO,AMAP,AKUA,CpBXC,CLFC,AWIA,AQCA,EGFA,AxB4BW,ASzBT,AcVE,AfWA,AQJO,AWUb,E3BkBe,AmB7BT,AHCS,GdHN,AF+BM,AqB1BN,ALFM,CKEL,CnBLC,CsBGT,AhBIY,CaFD,CETG,AFSF,CGFZ,AhBIe,CRwBF,AQxBG,AQJH,ChB4BA,AgB5BA,CGDN,CnB6BM,AQxBM,AWLX,AHCK,ERIQ,CgBJrB,AxB4BgB,AgB5BA,CQAhB,AxB4BiB,CAAC,AqB1BI,AFHT,CXKY,AaFF,CbEG,AmBM5B,CRXkB,EQWlB,CHVE,CRAW,CGDU,CKER,ALFS,AHCT,CACb,ChB2B6B,C2BlB/B,MRXiC,CHEI,EACnC,EAAuC,EQDV,AREC;AhB2BhC,AU9BO,APIA,ACHA,AGAP,ACKA,AmBKA,CzBbC,CWIC,AUPA,AFQA,ALCA,ENJW,ADIT,ANAO,ACHE,AuBUb,ExBPa,AgBJP,AHIA,CHFC,CJGA,CIHE,AVEI,CgBJP,CTAc,AaLlB,GbKkB,EPIP,CAAA,EAAA,CwBOb,CjBXoB,ANCU,CMDV,AaLlB,ApBSc,CwBOhB,CJhBE,AnBM4B,AeDf,EAAC,ChBIK,EOJD,CiBWpB,CvBV8B,CMDP,ANCO,CiBEf,CAAC,CAAC,CAAC,EZED,AULE,CVKD,AYFG,AFHD,ETAP,EWGQ,CFHI,EAAE,CVKD,CCLN,CAClB,ANA4B,EKIA,AULE,CfCC,AeDA,QTCZ,CNAR,CMCX,ADGuC,CAAC,GYFnB,EXDV,AWCW,EXAtB,ADE+C,CAAC,IYFnB,EAAE,CZEwB,ALJ3B,CKI4B,ALJ5B,EAAiB,CKIc,CAAC,GCFnC,CDGrB,CCFI,ADEH,UYHwC,CAAC,GZGnC,CAAC,gBAAgB,EACxB;ANDN,AKCA,AmBI+D,CdR9D,CHEC,ANHA,AiBEA,EETA,AfYI,AQFF,EPGE,AUPA,GQUyD,GnBJjD,GAAG,CAAC,GeZhB,AfYmB,EAAE,GAAG,CAAC,CeZzB,MIgB6D,CNPhD,AMOgD,CNP/C,CAAC,CETf,AFSgB,CFHC,CAAC,CEGC,AFHA,CAAC,GEGD,AFHI,CQUsC,CAAA,ERVtC,EQUsC,CAAA,CAAA,UAAA,GAAA,CAAA,CNPxC,EAAC,EFHG,AQUoC,ERVnC,KQUmC,EAAA,CAAA,CNP1B,CFHC,CEGC,CFHC,8BEGkB,CAAC,SFHE,CAAC;ANI9D,ALIA,AmBE+D,EjBL7D,ANHA,AiBEA,EZIE,AcdF,APWE,EZHE,AeDA,ETIE,AMAE,CNAD,AiBKsD,CvBRzD,AeDA,GTIO,CAAC,GiBKiD,CAAA,CJhB7D,CbWkB,AMAE,CNAD,CAAC,CMAG,GZHd,CYGkB,CZHlB,CMGkB,ANHhB,CMGiB,GNHb,AiBEF,CAAC,CAAC,CAAC,CjBFD,EiBEI,CXCU,GAAG,AWDb,AFHH,ETIoB,ASJnB,CAAC,AHI4B,CGJ3B,AHI4B,MZH3B,EAAA,CAAE,AuBQuC,CXLb,GZHtB,CAAC,EAAE,AuBQgC,GNNxC,ALCoC,EKDnC,ALCuC,mBWKA,MAAA,CNNb,EAAE,oBMMW,MAAA,CAAA,MNNe,CAAC,CMMhB,aAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,yBAAA,MAAA,IAAA,CAAA,CAAA,WAAA,KAAA,MAAA,IAAA,CAAA,KAAA,MAAA,CAAA,SAAA,qBAAA,CAAA,KAAA,OAAA,CAAA,CAAA;ADRxD,AZCA,AFAA,AeOwD,ENL7D,EXCE,ADGA,AiBPS,AHPT,AnBQA,AUAS,AFAA,AODT,EHIE,ENAE,AaXA,CAAC,AIesD,EvBPpD,IMGI,ANHA,GmBRG,CTQU,EJGP,AaXA,CbWC,AaXD,ATQO,CSRL,AXQS,EFGP,AgBJS,ChBIR,AEHM,CeO+B,CDR7B,ACQ6B,CbPnC,CAAA,AaOmC,CjBJhC,AiBIgC,EfP/B,CAAA,CcDE,CAAA,GhBIK,EAAE,GiBIsB,CbPnC,AaOmC,GbPhC,GaOgC,CAAA,CfP/B,EeO+B,CfP5B,AeO4B,CDR7B,AZCrB,AaOkD,GDR1B,GCQ0B,EfPlD,AeOkD,CAAA,GDRlD,GZCe,CAAI,GaO+B,CAAA,GAAA,CAAA,CAAA,CAAA,CfP/B,CAAA,CeO+B,CfPE,AeOF,CAAA,EDR7B,CAAI,AZCiC,EAAI,KaOZ,GAAA,CDRG,ACQH,CAAA,CDRO,SCQP,QAAA,CAAA,CAAA,YAAA,kBAAA,CAAA,KAAA,CAAA,CAAA,QAAA,QAAA,MAAA,CAAA,cAAA,CAAA,CAAA,EAAA,cAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA;AVNxD,AGAA,AEAA,AKMwD,EDP7D,AHPA,AnBQA,AUAA,AFAA,ASEA,AFHA,CAAC,CVOC,AQNS,AEDT,ACCS,AEAA,EZGP,AWDA,ALCA,EAAE,CAAC,AWGsD,SlBArD,AOHQ,CPGP,AOHQ,CKDP,CAAC,CDFkB,AOMgC,CVN/B,AUM+B,EPNhC,AOMgC,CVN/B,AKAG,AKM4B,EAAA,CXHlC,AMHM,AKM4B,CXHlC,CAAE,CAAC,AIHD,CHAC,AGAD,CHAC,CRML,CAAC,AaNO,CDEN,ACFM,EDEJ,CMIgC,CAAA,IAAA,MPNhC,EHAC,CGAE,EHAC,GKAA,GAAG,AKMyB,CPNlD,AOMkD,CAAA,CVNlD,AUMkD,MLNlD,GKMkD,EAAA,CAAA,GAAA,CPNhC,AOMgC,CPN5B,EHAH,CAC9B,AUK6D,QLN5B,CAAA,EAAiB,IFAsB,EAAI,AOMf,CVLjB,AUKiB,CAAA,CVJ3D,CUI2D,CAAA,GAAA,MAAA,CAAA,cAAA,CAAA,CAAA,iBAAA,QAAA,SAAA,CAAA;ARN/D,AQM+D,CRN9D,COAC,AHPA,AnBSA,AUDA,AGEA,ALFA,AQAA,AEAA,EDEE,ALCA,CAAC,CNAC,ADGA,AGNA,AIGA,CJHC,EUAE,AKKsD,EfLxD,ASEI,CXCC,AWDA,CXCC,EWDE,CXCC,ADGA,AYJA,CXCC,CDGC,ECHE,EYHT,EZGS,CiBE2C,CLLhD,AKKgD,CLL/C,CAAC,AKK8C,ClBClC,AYJA,AMGkC,CNHjC,SMGiC,CAAA,CjBFjC,AYHX,CAAC,CZGW,GEHF,EAAA,CFGQ,AEHN,CFGO,CEHL,CeK8B,CjBFtB,AiBEsB,CjBFrB,CAAC,GYHP,IAAI,CAAC,CAAC,EKKqB,SAAA,ELLnB,CAAC,GAAG,IAAI,CAAC,CAAC,aAAE,CAAC,IAAI;ArBP7D,ADqCO,Aa3BA,AYVP,ANOO,ADCA,AIAP,AKI+D,CLJ9D,CIDC,AHRA,AnBUA,AUDA,AGEA,AGFA,EnBAI,AD6BO,AU1BT,AGDS,AYFP,AbAF,ASEA,AFHS,AHKT,AEJS,ETMP,AiBPE,AtBEF,AUDE,CDEQ,CQAZ,CrB2Bc,AuBtChB,AIa6D,CdF/C,AJIN,ALLJ,CQDK,CZ6BO,ASvBZ,AGNK,CAAE,CXAG,AwBAA,CXAC,CLMP,CIJM,CAAA,ACFI,Cd6BF,CAAA,AoB7BE,CPEJ,AUXd,AHSmB,CGTnB,EVWiB,Cb2BD,AkB7BgB,ASI6B,CDLnC,AtBEjB,AuBGoD,E3ByB1C,AI5BV,AgBDiB,AFAM,ASI6B,CDJ3D,AtBCS,AgBDgB,AOIkC,CRLxB,CEGjC,AMEyD,CJb7D,AIa6D,CvBH9C,AiBCV,AFHgC,EDCL,CJAI,AIAJ,ClB6BrB,AI5BI,AUDsB,EMAT,CNAY,AKDH,CLCG,AKDH,CnB8BrB,Ac7B0B,Cd6B1B,A0B7BA,ALED,CDFkB,AOI4B,CNF5C,AME4C,CPJxB,CMAjB,CCIyC,KvBHzC,EAAA,CAAE,CcDU,CQAD,EtBCL,AcDS,CQAA,AtBCR,CuBGkC,CvBHhC,AuBGgC,CAAA,GRLxB,EDC1B,CCD6B,AQKqB,CAAA,CDJP,CAAC,CCIM,KNF1B,AFHxB,CEGyB,AMEyB,CAAA,IDJM,GAAG,CAAA,CAAE,ARAxC,CAChC,ISG6D,CAAA,CAAA,EAAA,CAAA,IAAA,CRLxB,CACrC,GDCuC,ASGsB,ETFrD,ASEqD,CAAA,EAAA,URJtB,AQIsB,ERH3D,IQG2D,YAAA,MAAA,QAAA,UAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA;ApBHxD,ACMA,AmBHwD,E1BA7D,ADyBgB,AUzBhB,AGDA,AYCA,ACFA,AZAA,AGCA,ALFA,ASEA,AFDA,ADCA,CRCC,CAAC,AabF,AnBWE,AGDS,ACMA,AQFT,AIJA,EpB4Bc,AStBZ,AQJE,AEDA,CIXN,EIa6D,EvBFpD,IAAI,AGDS,AUEP,AEDA,GZDO,ACMG,ASJP,AEDA,GVKC,ADAM,CRsBT,CStBK,CkBHwC,CpBHvC,AoBGuC,CpBHvC,ECMG,CAAA,ImBHoC,CAAA,EVDzB,AEDA,CZDd,AUEe,AEDA,AQEwB,ElBGxB,CFNZ,AUEe,AEDA,CFCA,AEDA,CFCE,AEDA,CVKD,ADAhB,CCAgB,CAAE,CDAW,GDN3C,AoBGkD,CAAA,CAAA,SpBHvC,CAAI,KAAa,EAAmB,eoBGG,OAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AtBFxD,AsBEwD,E3ByB7C,AUvBhB,AGFA,AaDA,AtBAA,AGDA,ACMA,AMLA,AGEA,ALFA,ASCA,AFDA,ADCA,EKbA,AlBWW,AWIT,AIJA,EXME,AQHA,AEFA,CNCC,COFC,CPEC,AUbP,AIa6D,C3ByB7C,CuBrCR,INaK,AEFA,EFEE,AEFA,GIXP,AlBUmB,AaET,CAAC,CEFP,AOEiD,CtBFlC,AeAd,AOEgD,EAAA,C3ByB7C,ASrBQ,AkBJqC,ElBInC,ASJA,ClByBD,AkBzBE,CbFA,CL2BA,AuBrCR,AlBUQ,CL2BC,ASrBF,AchBP,CFYN,CEZM,AFYL,CAAC,CAAC,GAAG,ADFU,AFED,EEFG,ECEZ,CrByBqB,AkBzBP,EAAI,ASAwB,CtBFlC,GAAG,GsBE+B,CAAA,CAAA,G3ByBrB,CK3B7B,EsBEkD,CAAA,IlBInB,AYJrB,EZIqB,AYJpB,CZIsB,EkBJiB,CAAA,E3ByBrB,CK3Bb,CAAA,EAAG,AsBE+B,CAAA,GNAzB,AMAyB,CAAA,CNAvB,AMAuB,I3ByBrB,E2BzBqB,CAAA,WAAA,E3ByBrB,GAAI,CAAC,Y2BzBgB,CAAA,CNAR,CAAC,MMAO,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,gCAAA,OAAA,CAAA,CAAA,UAAA,CAAA,YAAA,SAAA,yEAAA,CAAA,GAAA,MAAA,GAAA,MAAA,EAAA,CAAA,KAvB/D;A3BgD+C,AW3BxC,CEGN,CHEC,AgBHA,ArBDA,ADEA,AGFA,ACMA,AMLA,AFAA,ASCA,EVHW,AHOT,ASHA,AEFA,AHGA,AEFA,EREF,ADEI,AiBLJ,AHXE,AhBUE,ACMA,AaJA,ADFA,IAAA,GGVK,AhBUE,CgBVD,AfgBE,EWLP,AHGS,CPEC,AchBF,AJWP,AHGS,CUHR,AHXO,AhBUE,CEMC,CiBLT,ALCE,CAAC,CFDA,ACDA,CXMM,AFNI,CSIC,AIJV,CGVS,AJWP,AHGS,COdD,AZSW,EDKvB,CCLuB,CDKtB,CHJkB,EAAE,CYCR,CAAC,CRFS,AUGP,CKDD,AfFQ,CUGL,CKDD,CNDC,CVIN,CUJQ,CVIN,ESHU,ECDC,CAAC,CVIN,ASHQ,CVKP,CCFC,CDEA,MULe,CRFd,AQEe,GRFZ,CFOO,EAAE,ECFG,ASHQ,CTGP,CDEA,EEPtC,sBAAsB,CAAA,EAAiB;AX6BpD,AUvBA,AGDA,CHCC,CLJC,ADEA,AOHA,AHMmB,AMJnB,AFAA,AOAA,EOAE,AnBDA,AUGA,AIDA,ADFA,AFEA,CTIC,CAAC,AchBF,AlBUE,ASCA,AEEqB,EKDvB,CKDK,AtBCA,CYCsB,CUFpB,AnBDA,CSGsB,CObtB,CAAC,AnBYE,CsBDH,AnBDI,AOCA,ESXA,CAAC,ClBUR,ASCW,CAAC,CTDV,AWGgC,QFFb,CAAC,CSXD,AFYvB,CEZwB,CGWR,ALCf,EKDiB,OLCR,EPD4B,AOC1B,EKDyB,CAAC,CZAI,IYAC,CAAC,IZAO,CAAC,KAAK,EAAE,GOC9B,CAAC;AXIpC,APDO,ACFP,AeDA,CfCC,AeDA,CVKC,AEPA,AJCA,ACKA,AIJA,ASCA,CZIC,CAAC,AiBNmE,ArBAnE,AFIS,AWHT,AGEA,AGFA,AFCA,CVGC,CefD,AXWI,AICoC,CRGrC,AIJE,GAAG,CPDD,GWEyC,CRGrC,CQHuC,EOZjD,CAAC,IXWQ,CAAC,CTGmB,CoBdrB,EpBcqB,CoBdlB,MpBckB,CAAA,GoBb5B,CXUyB,CAAC,YWVI,AXUQ,CAAC,CWTvC,AXSwC,CAAC,CTGb,ASHqB,GTGlB,IoBZb,EAClB,GpBWO,GoBXQ,EACf,KAAc,EACd,KAAa,EACF,EpBQiB,CAAA,EAAmC;AMGrE,ALHA,AiBDA,AFDO,CVKN,AYJA,CpBCC,AwBAA,AtBCA,AQLA,AJEA,ACGmB,AIFnB,EcFE,AZCA,AGEA,AEFS,AHA6C,AIAtD,AFCA,CFDwD,CXDtD,AWCuD,EOLvD,ANOF,ACDI,CQFC,EzBGP,AwBAA,ACHS,EREE,CAAC,CQFH,AHJE,CAAC,ELMI,CKND,CAAC,CJKY,ClBEhB,AwBAA,ARAD,CCDU,CDCT,AEFgB,KlBEO,AwBAA,APDR,EjBCQ,AwBAA,ANFP,CILA,AJKA,CODR,ATGC,ACDU,CKND,ANOR,CSHA,GREc,CAAC,OQFI,CAAC,CHJE,ALME,CKND,ANOR,AEFT,EDCqB,CQFF,ATGP,AEFT,CODiB,QTGC,AEFtC,CFEuC,CCDE,CAAC,KAAK,EDCC,ACDC,EDCC,KEFjC,CAAI,KFEwC,EAAE,WEFH,EAAI;AbAtE,AeGA,ElBCL,AQLA,AJEA,ACIA,AIHA,AODA,ElBCmC,AwBAA,ACHkC,ApBC1D,AQCT,AOES,ALDT,AIDA,EfDE,AFIA,AcDA,ALDA,AMAA,CNAC,CWND,AXME,EAAE,CIAC,CONC,MlBIM,AFIA,CFFmB,AwBAA,CpBFjB,AcCA,CILC,AJKA,ChBGC,AcDA,CXHU,AUET,CONC,AlBIJ,AYGI,EhBDa,AwBAA,AnBFL,EiBJJ,AJKA,CILC,AJKA,IbDG,AeGU,CfHV,CHIR,CFFa,AwBAA,AJCK,ClBChB,CoBRY,CAAC,AJKT,CdDL,EAAA,CAAE,AgBGe,CAAA,AFFP,EAAI,CdDR,CAAC,KCAA,GAAG,SAAtB,QeG6B,GAAG,QfHb,CAAa,AeGhC,EfH4C,EAAA,yBeGf,CAAA,EAAc;ARCjD,EFJL,ALCA,ACCA,ACIA,AaFA,ALDA,CAAC,CfTD,AYUW,AYVX,ACME,AvBKA,AWHA,AFCA,AODA,AHCA,AIDA,AFCA,CVGC,ASFA,CZFC,AYEA,AIAA,CRAU,ALET,CWJC,ACAA,CTFC,AJEA,CMEO,AaJN,AHHF,CXMG,AIAA,CUHC,AdGD,AIAC,CJAC,AODA,ACAA,CDAC,AHCA,AIDA,CZIC,CkBNH,AZEL,CDES,ACFR,CDEQ,CUPC,AhBKE,CAAC,CMEJ,AUPR,CZGG,AGEE,EDEM,AMFK,CZAC,CIFV,AGEE,AKAS,CRFV,CAAC,AJEW,CaAC,CGLZ,EhBKe,CAAC,AaAA,CMFV,CZEG,CYFF,AnBEY,AOAT,CPAU,AcElB,CAAC,ADFkB,CCEjB,ADFkB,CCEjB,CVJH,AJEsB,AOAT,CHFZ,AUII,CdFmB,CAAC,CAAC,CAAC,MaAM,EAAE,EMFV,CAAC,CfAT,IAAI,CeAW,AfAV,CeAW,AfAV,aAAE,CAAC,GAAG,IAAI,CAAC,CAAC,aAAE,CAAC,IAAI;AAC7D,AJEA,CIFC,AJEA,CMEC,APHA,AEImB,AMHnB,AFCA,EXVA,AwBAA,ACMqE,AvBMnE,AcAA,AIDA,ALDA,AECA,EbFE,ACDA,AaCA,ACAA,EjBGI,AkBDN,EEPI,AJKF,MILQ,EAAN,AjBID,CLRL,AwBAA,AnBQM,GHIgB,AkBDX,EEPC,AFOA,AFFC,CdAU,AFGG,AGJd,CaCE,CdAW,ACDX,IDCW,AcAN,CAAC,IEEL,CAAC,ClBCoB,CAAC,EgBHR,CEER,CFFU,IdAD,CcAM,CdAN,AFGiB,AgBHV,CdAL,IAAI,AgBEH,ChBFI,AgBEH,IFFa,CAAC;AnB2B3C,AOzBP,AODA,AaLA,CbKC,CDEC,ALCA,AIDA,EXHE,AD2BS,AyB3BT,ACFA,AvBOA,AGLA,AWIA,AIDA,AFFA,AHCA,AECA,EbDE,AeDA,CPEC,CZHK,AwBAA,AJGR,CrBwBc,AaxBT,CUPD,AfQE,AYHE,EpB0BM,AQvBN,CkBNC,CzBEK,AwBAA,CCFH,AHFF,CPMR,CfFkB,AwBAA,AFJf,APMF,CIDc,CpB0BF,A0B7BH,C1B6BG,AQvBE,CQFV,AIDa,CGLV,APMF,EfFmB,AwBAA,CxBAlB,AD2BM,AyB3BN,CLCgB,CAAC,CpB0BR,GC3BH,AwBAA,ATEE,EAAE,CAAC,CAAC,EhByBX,A0B7Ba,EAAC,ELKX,CrBwBE,AoB1B0B,CpB0B1B,AqBxBD,CAAC,CAAC,ADF4B,IAAI,UMHJ,CAAC,SAAS,CAAC;CbMzD,CbuBiB,AQvBI,AIApB,ASAA,AFFA,AHCA,CGDC,ClBDC,AwBAA,ACHmE,AvBQnE,AGLA,AWIA,AEHA,ADEA,ElBuBc,AKxBZ,ACFA,AMGE,AQDF,CdFA,CLAE,AwBAA,AtBKA,AGLA,EiBJA,ItBIM,AwBAA,CFJD,ApBSL,CFLQ,AwBAA,AtBKD,CoBTP,EXOa,GAAG,CAAC,CAAC,CPDD,ELwBP,AKvBV,GFEqB,MAAK,CSFK,KPAhB,EFEmB,EEFf,AFEiB,aEFf,GACjB,aAAE,CAAC,aAAc,CAAC,UAAU,GAC1B,YAAY,CAAI;AQA9B,AMHA,CAAC,CnBwBiB,AQrBhB,AIDA,ASAA,ALAA,EUNE,ApBIA,AWGA,ACDA,EjBHE,AwBAA,ApBIwB,AFCxB,ASFE,ASAF,ADDA,EfGQ,AYDV,ACDM,CKPH,CtBIG,ADyBQ,AyBzBR,AFJF,CtBIG,AwBAA,EtBKE,CAAA,CAAE,EFLE,AwBAA,ACHA,AdME,EcNA,ArBQM,CJLL,AwBAA,ApBKU,AOFR,AMAA,CNAC,CKCV,ALDW,CcNL,ARMM,CDCX,EhBJY,AwBAA,EPGI,CAAC,ElBsBb,EiBrBK,ALDY,CZsBR,AiBrBH,EjBqBK,CAAC,AqBtBX,AHAoB,CGAnB,CAAC,CAAC,AHAoB,CQNZ,CTOE,AIDR,AHAoB,CQNb,CTOG,KAAK,EAAE,KjBqBQ,O0B5BE,CAAC,M1B4BH,oB0B5B6B,C1B4B7B,A0B5B8B,CAAE,a1B4BhC,qBAAA,GAAI,CAAC;AAAA,AUnB/C,EFDL,AIAA,AIDA,CUNC,CzBGC,ASKS,AeLT,ACHA,AvBQA,AGJA,AeEA,AHCA,CjBJC,AwBAA,AjBIA,CHAyB,AYAxB,AGFA,CZEC,CeRD,AlBSM,AgBFJ,CLAC,EfHE,AwBAA,EfKW,AMFT,CVFC,AEGA,CFHC,AeEA,CXEO,CUHd,CAAC,GfGgB,CYDH,CPCA,AJJC,AcCT,CVGQ,AODE,AGFT,EdDW,GcCN,CAAC,GVGC,GAAG,EJJE,CAAC,IcCM,CAAC,CVGtB,AJJqB,CeEN,CAAC,CAAC,ADDS,CCCR,CAAC,IXEV,CACpB,CUJ6C,KCCJ,EXGzB,EAChB,CWJ8C,UXI3B,AWJqC,EXKxD,AWL0D,gBXKjC,EACjB;AgBXV,AtBMO,AYAP,AWXA,CDKC,AVMA,CNMC,AJRA,AEEmB,AICnB,ETEE,ACHS,AcCT,ASRiB,CVQhB,ChBJC,AwBAA,ApBIwB,AYAxB,AIDA,ADAA,EGPA,CXQG,CeRkB,E1BIf,AwBAA,CEJe,EJAd,CtBIG,AwBAA,AFJF,GAAG,CAAC,AIAS,C1BIN,AwBAA,AEJM,C1BIL,AwBAA,GrBGY,GAAA,AuBPP,CJAA,CAAC,KnBOM,CHHE,AwBAA,ArBGF,CHHG,AwBAA,AJGlB,CAAC,CAAC,CAAC,CAAC,GMPI,QNOO,CAAA,CAAE,EMPT,CvBOO,GAAG,SAAxB,qBAAqB,CAChC,EAA2B,EAC3B,EAAW,EACA;AEJb,AUGA,AWFE,CrBDD,CIQC,ANHA,AIHA,ASCA,EhBJE,AwBAA,AtBMA,ASFA,ASDA,AHCA,ERKI,ALJF,AeFA,EGPA,ALQE,GfEJ,AKHO,CLGP,CKHS,CLGT,GAAA,AiBHI,CAAC,CjBGH,CKHc,AUCA,ERKI,AabZ,ApBUH,CoBVI,AHOC,AFCS,CEDR,AFCS,CRKG,CQLD,GRKC,AUNP,IGPG,AHOC,CGPA,EpBUD,CAAC,IiBHQ,KVMK,EAAC,CabC,CAAC,ApBUH,MOGS,CAAC,WabI,CAAC,IAAI,EAAE,SAAS,CAAC;AVS7D,EZJL,ASUA,AeVA,ArBMA,AIJoB,ASGpB,EJDW,AVGT,ASHA,ASDA,ADAA,EfEE,AaDA,EKRA,AFOF,KTCS,ECAW,AURX,AXQE,GCAS,AKAf,CKRQ,ALQP,CbCU,EAAE,AgBFT,EAAC,AHCC,CLAS,CAAA,ARCF,AODI,EMAP,CNAU,CAAC,CAAC,KSDd,CRCO,AQDN,GRCS,AKAI,CNAU,CSDlB,WRCiB,ARCD,CgBFJ,ChBEI,AgBFH,ChBEK;AQCzC,EZJE,ASSA,AeTA,ArBKA,AIHA,ASEA,AGFA,CAAC,CjBIC,ASFA,ASFA,ADAA,AFCA,ERME,AadF,AlBUE,AYDJ,CMTG,CFOD,EjBGM,CDCN,CAAA,ACDQ,EDCR,GAAA,EAAE,GOGgB,APHb,CAAC,CAAC,EOGe,YPHD,CAAC,AcFZ,CPKkB,CAAC,AOLlB,AIFC,CJEA,CAAC,AIFA,CAAC,CAAC,ElBIe,COGM,IAAI,gBAAgB,IAAI,CAAC,EAAE;AUNnE,CAAC,CZAC,ASGA,AIHA,AHCA,CAAC,CRMC,AadF,ApBYE,ACFA,AQDA,AMDA,CVDC,CHGC,CGHC,EJGE,MIHM,GJGG;AGHX,AWEP,ASFE,CTED,CVFoB,ASInB,AIHA,EXOE,AadF,ApBYE,AINS,AKGT,EPCE,ADAA,AaAJ,AIHI,EXOF,CiBRF,ExBMS,CINU,EKGP,CLHO,CKGL,AeHd,CfGe,CAAC,AeHwB,EVI/B,EVJU,AUIT,CVJS,CFIG,EAAE,GODG,CFKf,ALJY,CEJL,CGQN,AELiB,CAAC,CLHT,AUIT,CAAC,CLDoB,CSFjB,CAAC,CAAC,CJGA,AIHC,EJGC,AIHC,CXOE,AHRb,EGQe,EOJA,ALDmB,CKClB,ELDqB,CLH7B,AKG8B,CLH1B,AKG2B,ELHpB,EAAU,KGQE,ALJG,EKID,ALJE,AODe,GAAG,CAAC,YFKL,CAAC,QLJb,EAAE,yBAAE;EKKpD,AafA,AhBOA,ACAA,ASKA,AUNwC,EfKtC,ASHA,ChBGC,CFEC,ACFA,AuBLQ,ENEV,EbDM,EAAE,CJIC,AuBLC,CxBOA,EAAE,AwBPF,CvBKG,GIJG,EaCP,EAAC,CMFA,CAAA,IxBOgB,CAAC,CwBPjB,INEG,CAAC,ElBKqB,CwBPzB,ENES,OMFT,KNEqB,CAAC,EMFtB,SAAA,GAAA,SAAA,MAA0B,CAAA,CAAE;AjBU1C,AGLO,AGDA,CNMN,CLJC,AEJA,ACDoB,ASMpB,AUPwC,EdK7B,AUXX,AXYE,ASHA,ALCS,EbGsC,ACD7C,AGJA,CgBRJ,CFSE,KTGS,EAAE,CCDU,AGDA,CWJiB,EdKjB,AGDA,KWJiB,EdKjB,ADCC,AIFD,CHCA,ANHE,ASEF,EJEI,CAAC,AeNY,CpBEX,AKIA,QCDN,AGDA,EKDT,CREY,AGDA,CTFI,AKIW,ASH1B,CAAC,CdDgB,AcCf,MLCN,YAAY,CAAI,EHCuB,MGDV,EAAI;AHG9C,ERCE,AGLA,ASKA,AIJA,ALCA,AWfA,EJIA,AnBaE,AGJA,AKKA,ETAE,AcAA,GMdJ,AnBaO,EmBZC,EnBYG,MDCM,CoBbT,CpBaW,WoBbC,CAAA,EAAA,ApBaa,CAAC,CcAjB,CAAC,CAAC,CAAC,IAAI,KdAuB,EcAhB,+BAAa,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,UAAU,EAAE;AIH9E,CAAC,ChBIC,AGLA,AQEA,AWhBA,EpBcE,AUKA,ALAA,CJLC,CeRD,ApBY+C,ACA7C,AYFA,CRFC,EHKE,CAAA,CAAE,IGLI,CIKC,CenBd,CJMG,AXaa,CWbZ,UXauB,AelBf,GfkBkB,GWbV,ANaL,CMZX,ANYY,AUlBG,CVkBF,ADHA,CCGC,ADHA,CCGC,IMZR,EACP,AXWuC,CIHjB,CAAC,EAAE,CCGC,CAAA,CAAE,GMXlB,CAAa,EAAA;AlBY7B,CAAC,CGNoB,ASMnB,AUjBA,EpBYG,AKMD,AIJA,EbEE,ACAA,EmBVE,CpBUC,EAAE,CoBVC,CAAC,AnBUA,CmBVC,EhBMA,CHIG,AGJF,GgBNK,KAAK,ApBUA,CAAC,GAAG,OIJK,CgBNR,AhBMS,EgBNP,AhBMS,EAAE;ENRrC,AwBAA,AjBQA,ASOA,AUnBA,EfmBE,AIJA,EbC+C,ACC7C,AGLmC,CCAlC,EPRL,AwBAA,AjBQO,CeLC,GhBKsC,EAAE,EgBLjC,AfKA,AmBZf,CJOgB,GtBHhB,AwBAA,AFGmB,CtBHnB,AwBAA,AFGoB,QAAQ,EtBH5B,AwBAA,AFG8B,CAAC,CAAC,CPQjB,CAAC,IORsB,CAAC,GPQf,CAAC,CAAC,UAAU,CAAA,CAAE;AHGjC,ELNc,ASQnB,ADJA,AWRE,E1BJF,AYcW,AYdX,ArBcE,AGNkD,AKQlD,CLRoD,CMMzC,AVDT,AILmD,AUQvD,ChBhBA,AwBAA,CFIM,CVUO,ATAN,IAAI,CDDC,EUCC,AVDC,CUCD,AVDE,CAAC,CUCH,ADEI,CKAR,CLAU,CCFgC,AIEzC,UdHoB,CAAC,CcGlB,ALAmB,CKAlB,ELAqB,CAAC,CAAC,CKAlB,CdHoB,CAAU,AcG5B,KAAK,CAAC,GLAsB;ECDjD,ANNA,ACAA,ASSA,ADJA,AWTE,CpBID,CNTD,AwBAA,AbkBE,CTJC,CoBTC,AnBUA,AuBVI,CdUH,AUVA,CfIC,CPTN,AYeO,AYfP,AFMI,AhBGG,CCAC,CPDD,AwBAA,CEHO,CJCN,CACL,CIFc,GnBID,EPDT,AwBAA,EEHiB,CAAC,MAAM,M1BGT,AwBAA,CxBAC,AwBAA,KxBAkB,AwBAA,ExBAE,AwBAA,IxBAY,AwBAA,ExBAE,AwBAA,GxBAY,AwBAA,ExBAA,AwBAA;EtBOrE,AKNmB,ASUnB,ADJA,AWTE,CxBSD,CUCC,AURF,AhBEE,AKSA,EXVA,AwBAA,ArBOE,AaGJ,AUbM,CAAC,ExBSA,AaAA,CHCC,EAAE,CAAC,ATAA,AuBVE,CfaD,CebG,CfaD,CRHC,AQGA,CAAC,EKAP,EAAC,QLAkB,GAAG,CKAlB,ALAmB,CKAlB,ALAmB,KKAd,ADJC,CAAC,CCIA,KAAK,CAAC,CDJE,CJImB,AIJlB,IJIsB,CAAC;AIHvD,CAAC,CRNC,ASWA,EJLuB,AUPvB,ApBOE,AILA,AKUA,AedE,E1BGF,AwBAA,ArBOE,AGNA,CAAA,CAAE,ENDA,AwBAA,AjBAE,AmBHE,EnBGA,EmBHI,E1BGF,AwBAA,GxBAG,AwBAA,AEHI,CnBGD,CAAE,EPAD,AwBAA,CxBAC,AwBAA,MxBAM,AwBAA,6BEHP,MAAA,CAAU,IAAI,CAAC,CAAC,yCAAa,CAAC;CnBIlD,CeFC,AhBGA,AUUA,AUdE,EdSA,AVAA,ACCA,AQIA,EXXA,AwBAA,CZMG,EAAE,CAAC,ODKO,EAAE,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,iBAAiB;ALT1D,ACAA,CDAC,CUUC,AUbE,EdOqB,AURvB,ApBSE,ASMA,EXZA,AwBAA,ArBOE,CmBVJ,GtBGM,AwBAA,ERWI,ChBXD,AwBAA,ARWE,EhBXA,AwBAA,URWK;EdLd,AwBPA,EdOA,AUTF,ANeE,ALCA,ERLE,AuBTI,E1BEJ,AwBAA,ARWF,CJNK,AUTP,EVSS,AURD,AXeC,CCPC,CDOC,CXZD,AwBAA,AbYE,CAAC,EXZA,AwBAA,EEFQ,C1BEL,AwBAA,AFHR,ENcG,AUba,EVaZ,CLCW,CedK,EfcF,CAAC,CAAC,EWfR,CAAA,EAAA,CNcL,CAAC,KAAK,ALCmB,GedF,CfcM,AedL,CfcM,IKDf,CAAC;EdH/B,AcIA,CAAC,CJPsB,ADSrB,AefE,CVaD,ChBXD,AwBAA,AFHA,AnBUE,GaIG,CAAC,AUbE,EAAN,MJDD,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAA;EpBWtD,AcKA,CUdG,CdMD,ADSA,AefE,E1BEF,AwBAA,ArBOE,CSHC,CUPD,CVOG,AUPF,ApBUE,CUHC,AUPF,ApBUC,CAAE,ECAE,WmBVS,CAAA,CAAE,InBUM,CAAA,CAAE,IAAI,EAAE;ADCtC,CAAC,CCAC,AaKA,AUdE,EdKqB,ADUrB,EXZA,AwBAA,EFJE,KXgBO,EWhBA,AXgBE,CWhBD,AXgBE,AefN,CfeO,AefN,EJDM,CAAC,OICG,GfeS,AefN,GfeS,CAAC,CAAC,GWhBC,EAAE,CAAC,CAAC,CICH,KJDS,CAAC,CXgBG,IAAI,CAAC;ARLvD,CAAC,CaKC,AUbE,EdIA,ADWA,EXbA,AwBAA,EFJE,CVMG,CZFD,AwBAA,CZEG,CAAC,AISA,CAAC,EhBXA,AwBAA,AFJA,ItBII,AwBAA,AFJA,MNeC,YhBXU,AwBAA,CxBAC,AwBAA,MxBAM,AwBAA,ExBAE,AwBAA;EEDjC,EdGqB,AIUrB,ALEA,EWjBA,AIEI,CJFH,AIEI,C1BEH,AwBAA,AFJA,ANeF,SUbe,GAAG,EVaT,EAAC,SUbqB,GValB,CAAC,KAAK,UAAU,CAAC;EUX9B,EdEA,AULF,ANgBE,ALCA,IXbE,AwBAA,EZCI,CDYC,CXbD,AYCE,AYDF,CxBAC,AYCE,AYDF,AbaE,CXbD,AwBAA,AbaE,CAAC,WXbF,AwBAA,CxBAC,AwBAA,KxBAK,AwBAA,ExBAE,AwBAA,KbakB,GAAG,CAAC,CAAC,eAAe,IAAI,CAAC;AJZzD,EeLJ,AIIC,EdCqB,ALAZ,ASYT,ALEA,EefM,I1BCF,AwBAA,KxBAK,AwBAA,CxBAC,AwBAA,EjBAa,GAAA,CPAP,AwBAA,CEDO,C1BCL,AwBAA,EEDQ,EnBCH,CAAA,ImBDU,CAAC,SnBCX,GAAG,ImBDwB,KnBCzC,cAAc,CACzB,WAAmB,EACnB,KAAkB,EACF;EAChB,AmBJE,EdCA,AUND,ANkBC,ALEA,EefI,CJLL,CNkBC,CJZK,EAAE,CZAD,AYAE,AYAF,IxBAI,AwBAA,ExBAJ,AwBAA,ERYC,EhBZG,AwBAA,ARYF,CUba,EAAE,cVaE,EAAE,WAAE,CAAC,KAAK,CAAC;ETRtC,ASSA,CAAC,CJbsB,AUNtB,AXqBC,AefE,CVaD,CTTC,CAAC,EeVJ,CNmBO,CMlBA,ANkBC,ChBZD,AwBAA,AbcE,EAAE,CAAC,CAAC,EXdA,AwBAA,ExBAE,AwBAA,AFNR,CfSW,CAAC,IPHE,AwBAA,EbcI,GWpBP,AXoBU,CWpBV,AXoBW,CJXC,AIWA,CWpBZ,AfSa,EAAE,YIWY,IAAI,CAAC;AKDrD,CAAC,GJbG,ALIA,AIYA,AehBE,EJLF,IAAM,CfSC,CPHD,AwBAA,GjBGK,CeTC,EVKE,AcAN,CJLO,AIKN,CdAO,CZCD,AYDE,AYCF,CZDM,CZCJ,AwBAA,IxBAI,AwBAA,CxBAE,AwBAA,GFNP,CAAC,GIKQ,GJLF,AIKK,iBAAiB;EnBK/C,AmBJE,CAAC,CfgBD,EWrBA,GIKO,E1BCF,AwBAA,AFNA,CtBMC,AwBAA,GFNG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CVM3C,CLKC,EIWE,AehBE,I1BCA,AwBAA,AFNA,CtBMC,AwBAA,KFNK,CtBMC,AwBAA,AFNA,CAAC,AXqBE,CWrBD,CAAC,AXqBE,CAAC,CAAC,WAAW,GWrBC,AXqBE,CWpB1B,AXoB2B,CAAC,MWpBrB,EACP,MXmB0C,IWnBzC,AXmB6C,CWnB5C,EAAI;AVKd,ELIE,CIWC,CehBG,EnBKE,IPJA,AwBAA,AFJE,MfQQ,CeRD,CAAC,AIGN,CnBKS,AmBLR,EJHQ,CAAC,WfQa,CAAC,CmBLP,GAAG,EJHQ,CAAC,IfQM,CAAC,kBmBLA;AfiBhD,CAAC,CJVC,AmBNE,Q1BCI,AwBAA,AFJE,ItBIE,AwBAA,GxBAG,AwBAA,AFJE,CAAC,EtBIuB,AwBAA,CFJpB,CAAC,CAAC,CtBIsB,AwBAA,AFJrB,ctBImC,AwBAA,CxBAA,AwBAA,CxBAE,AwBAA;EjBM3D,AmBLE,InBKE,EeTE,CAAC,CtBID,AwBAA,CFHA,AfQG,EPLA,AwBAA,CxBAC,AwBAA,CFHA,AfQG,CePR,EtBES,AwBAA,CxBAC,AwBAA,MxBAM,AwBAA,AjBKE,CAAC,CPLD,AwBAA,AjBKE,CAAC,EAAE,GPLC,AwBAA,ExBAE,AwBAA,IxBAI,AwBAA,CxBAC,AwBAA;EEClC,EnBKA,IeNE,EtBCE,AwBAA,IFDI,CAAC,CAAC,AICJ,CJDK,AICJ,CJDK,eICW,CJDK,CACxB,CIAsB,CAAC,CAAC,OAAO,CAAC,SJAZ,EACpB,GID8C,CAAC,CAAM,KJC3C,CAAC,EAAA;EIAf,EnBKA,MPLI,AwBAA,AFCE,CfIC,EPLA,AwBAA,CxBAC,AwBAA,EEAF,CJCO,AfIA,AmBLN,CJCO,GAAG,CAAC,QtBDM,AwBAA,CxBAC,AwBAA,CEAH,GAAG,CAAC,CAAC,KJCW,CAAC,CIDL,C1BAK,AwBAA,AEAJ,E1BAM,AwBAA,WEAO,CAAC,CAAQ,K1BAE,AwBAA,CxBAC,AwBAA;AZCzD,ELKL,AmBLE,EdAS,GAAG,CUCR,CAAC,CtBDD,AYAQ,AYAR,CFEA,EtBFG,AwBAA,CxBAC,AwBAA,CFEA,CACL,AIHG,CdAM,AcAL,C1BAK,AYAA,AYAA,CxBAC,AwBAA,EZAD,EZAK,AwBAA,CxBAC,AYAH,AYAG,AEAJ,C1BAK,AwBAA,CxBAC,AwBAA,CEAH,OAAO,CAAC,cAAc,IAAI,cAAM,CAAC,OAAO,CAAC,CAAC;EdC7D,ALMA,AmBLE,IJEA,ItBFI,AwBAA,GxBAG,AwBAA,CxBAC,AwBAA,MxBAM,AwBAA,GxBAG,AwBAA,UxBAU,AwBAA,CxBAC,AwBAA,ExBAA,AwBAA;EZA9B,ALMA,AmBLE,EJEF,EIFM,CdDD,EAAE,ALMA,GPLC,AwBAA,CEAK,CnBKD,AmBLE,InBKE,QmBLU,EnBKA,AmBLE,CnBKD,CAAC,CAAC,GAAG,kBAAkB,GAAG,MAAM;AAC7D,CKNC,ALMA,GeHC,AIFI,Q1BAI,AwBAA;IFGR,AIFI,IAAM,I1BAF,AwBAA,MEAY,GAAG,IAAI,cAAU,CAAA,CAAE;IJGvC,AIFI,Q1BAI,AwBAA,EEAM,CAAC,GAAG,CAAA,CAAE;EAClB,EJEF,QtBFQ,AwBAA,GxBAG,AwBAA,GxBAG,AwBAA,IxBAI,AwBAA;EEEhB,EJCF,MtBFM,AwBAA,CxBAC,AwBAA;EEEL,EJCF,EIDM,CAAC,C1BDH,AwBAA,GECG,mCAAsB,EAAA,CAAE,EAAE;IJEjC,AIDI,E1BDF,AwBAA;EFEF,AIAE,I1BDA,AwBAA;EEGA,EJFF,EtBDE,AwBAA,CFCF,ItBAO,AwBAA,IxBAI,AwBAA,KxBAK,AwBAA,IxBAI,AwBAA,kBxBAW,AwBAA,CxBAC,AwBAA,IxBAI,AwBAA,ExBAE,AwBAA;EEGpC,EJHF,EIGM,E1BFF,AwBAA,CFDJ,EACO,SAAA,GAAG,CAAA,EAAA,CIEiB,IAAI,YAAC,EAAE;IAC9B,EJFF,EtBAE,AwBAA,AEEA,EJFE,CAAC,CtBAC,AwBAA,CxBAC,AwBAA,CxBAC,AwBAA,SFAS,CAAA,CAAE,EtBAT,AwBAA,CxBAC,AwBAA,UxBAU,AwBAA,ExBAE,AwBAA,AEEE,EAAA,CAAE;EAC3B,IJFA,ItBAI,AwBAA,SxBAS,AwBAA,CxBAC,AwBAA,UxBAU,AwBAA,CxBAC,AwBAA,MxBAM,AwBAA,ExBAE,AwBAA,IxBAI,AwBAA,CxBAC,AwBAA;EEItC,IJHA,EtBAE,AwBAA,CxBAC,AwBAA,CFAC,CAAC,ItBAI,AwBAA,OFAO,CAAA,CAAE;EIIlB,IJHA,AIGI,I1BHA,AwBAA,GEGO,YAAC,CAAC,MAAM,KAAK,WAAW,EAAE;IACnC,EJHF,ItBAI,AwBAA,AFAA,CAAC,GtBAG,AwBAA,GxBAG,AwBAA,GxBA4B,AwBAA,GFAtB,CtBA0B,AwBAA,AFA1B,CAAE,ItBA6B,AwBAA,CxBAA,AwBAA,CxBAE,AwBAA;IFCpD,AIGI,M1BHE,AwBAA,GxBAG,AwBAA,CxBAC,AwBAA,EEGL,C1BHQ,AwBAA,AEGP,M1BHO,AwBAA,MxBAA,AwBAA,CxBAM,AwBAA,GEGG,CAChB,E1BJmB,AwBAA,YxBAA,AwBAA,IEID,E1BJC,AwBAA,AEKnB,C1BL4B,AwBAA,IxBAI,AwBAA,CxBAE,AwBAA,iCEKf,CAAC,IAAI,CAAC,IAAI,EAAE,sCAA6B,CAAC,CAC9D;EJNJ,AIOC,Q1BNI,AwBAA,GxBAG,AwBAA,CxBAC,AwBAA,MxBAM,AwBAA,GxBAG,AwBAA,YxBAA,AwBAA;AFDlB,EISC,U1BPM,AwBAA;AFFP,EIUC,EJVD,EIUC,M1BPM,AwBAA,AFHP,GtBGU,AwBAA,AFHV,GtBGa,AwBAA,AEOL,EAAC,E1BPQ,AwBAA,AFHjB,CAAA,OAAA,GAEY,KIQe,EAAE,GJRP,CIQO,wCAAmB,EAAA,CAAE,CAAC;EAElD,Q1BRI,AwBAA,CxBAC,AwBAA;EESL,IAAA,E1BRE,AwBAA,UEQK,EAAC,oBAAoB,EAAE,IAAA,4CAAqB,EAAA,CAAE,CAAC;EAEtD,I1BTA,AwBAA;EEUA,E1BTF,AwBAA,EESM,aAAE,IAAI,aAAE,CAAC,OAAO,IAAI,OAAO,aAAE,CAAC,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE;E1BTpE,AwBAA,EEUG,aAAE,CAAC,OAAO,CAAC,QAAQ,CAAA,CAAE,CAAC,IAAI,CAAC,sCAAqB,CAAC;A1BVpD,AwBAA,EEWC;A1BXD,AwBAA,AEYD,CAAC,G1BZA,AwBAA,QxBAA,AwBAA,GxBAA,AwBAA,OxBAA,AwBAA,CxBAA,AwBAA,OxBAA,AwBAA,GxBGY,AwBAA,UxBAU,AwBAA","file":"performance.09b13aae.js","sourceRoot":"../examples","sourcesContent":["export interface IYidengDataConsumption {\n  beacon: number;\n  css: number;\n  fetch: number;\n  img: number;\n  other: number;\n  script: number;\n  total: number;\n  xmlhttprequest: number;\n}\nexport interface IYidengNavigationTiming {\n  fetchTime?: number;\n  workerTime?: number;\n  totalTime?: number;\n  downloadTime?: number;\n  timeToFirstByte?: number;\n  headerSize?: number;\n  dnsLookupTime?: number;\n  tcpTime?: number;\n  whiteTime?: number;\n  domTime?: number;\n  loadTime?: number;\n  parseDomTime?: number;\n}\nexport type EffectiveConnectionType =\n  | '2g'\n  | '3g'\n  | '4g'\n  | '5g'\n  | 'slow-2g'\n  | 'lte';\nexport interface IYidengNetworkInformation {\n  downlink?: number;\n  effectiveType?: EffectiveConnectionType;\n  onchange?: () => void;\n  rtt?: number;\n  saveData?: boolean;\n}\nexport type IYidengData =\n  | number\n  | IYidengNavigationTiming\n  | IYidengNetworkInformation;\n\nexport interface INavigatorInfo {\n  deviceMemory?: number;\n  hardwareConcurrency?: number;\n  isLowEndDevice?: boolean;\n  isLowEndExperience?: boolean;\n  serviceWorkerStatus?: 'controlled' | 'supported' | 'unsupported';\n}\nexport type IVitalsScore = 'good' | 'needsImprovement' | 'poor' | null;\n\nexport interface IAnalyticsTrackerOptions {\n  metricName: string;\n  data: IYidengData;\n  eventProperties: object;\n  navigatorInformation: INavigatorInfo;\n  vitalsScore: IVitalsScore;\n}\nexport interface IYidengOptions {\n  // Metrics\n  captureError?: boolean;\n  resourceTiming?: boolean;\n  elementTiming?: boolean;\n  // Analytics\n  analyticsTracker?: (options: IAnalyticsTrackerOptions) => void;\n  // Logging\n  maxMeasureTime?: number;\n  logUrl?: string;\n}\nexport interface IReportData {\n  sendToAnalytics(level: AskPriority, body: string): void;\n}\n/**\n * @param isResourceTiming - 是否开启资源数据\n * @param isElementTiming - 是否开启性能数据\n * @param analyticsTracker - 最大请求时间\n * @param analyticsTracker - void方法参数IAnalyticsTrackerOptions\n * @param maxTime - 自定义分析工具\n * @interface 系统配置接口\n * @public\n */\nexport interface IYidengConfig {\n  reportData: IReportData;\n  isResourceTiming: boolean;\n  isElementTiming: boolean;\n  analyticsTracker?: (options: IAnalyticsTrackerOptions) => void;\n  maxTime: number;\n}\n\nexport interface IPerfObservers {\n  [measureName: string]: any;\n}\n//性能指标参数\nexport type IPerformanceObserverType =\n  | 'first-input'\n  | 'largest-contentful-paint'\n  | 'layout-shift'\n  | 'longtask'\n  | 'measure'\n  | 'navigation'\n  | 'paint'\n  | 'element'\n  | 'resource';\n//性能指标具体请求类型\nexport type IPerformanceEntryInitiatorType =\n  | 'beacon'\n  | 'css'\n  | 'fetch'\n  | 'img'\n  | 'other'\n  | 'script'\n  | 'xmlhttprequest';\nexport declare interface IPerformanceEntry {\n  decodedBodySize?: number;\n  duration: number;\n  entryType: IPerformanceObserverType;\n  initiatorType?: IPerformanceEntryInitiatorType;\n  loadTime: number;\n  name: string;\n  renderTime: number;\n  startTime: number;\n  hadRecentInput?: boolean;\n  value?: number;\n  identifier?: string;\n}\n//度量指标数据\nexport interface IMetricMap {\n  [measureName: string]: boolean;\n}\n// https://wicg.github.io/event-timing/#sec-performance-event-timing\nexport interface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: DOMHighResTimeStamp;\n  target?: Node;\n}\n//请求响应优先级\nexport enum AskPriority {\n  URGENT = 1,\n  IDLE = 2,\n}\n","/**\n * 浏览器导航器接口扩展\n * 为 navigator 对象添加额外的属性和方法类型定义\n */\ninterface Navigator {\n  /** 存储空间估算方法 */\n  estimate: any;\n  /** 存储相关功能 */\n  storage: any;\n  /** 设备内存大小（GB） */\n  deviceMemory?: number;\n  /** 硬件并发数（CPU核心数） */\n  hardwareConcurrency?: number;\n  /** 网络连接类型 */\n  connection?: string;\n  /** 有效连接类型（如 4g、3g 等） */\n  effectiveType?: string;\n  /** Service Worker 相关功能 */\n  serviceWorker?: {\n    /** Service Worker 控制器 */\n    controller?: string;\n  };\n  /** 发送信标数据的方法 */\n  sendBeacon?: any;\n}\n\n// 全局对象引用，提供便捷访问\n/** 全局 window 对象引用 */\nexport const W = window;\n\n/** 全局 console 对象引用，用于日志输出 */\nexport const C = W.console;\n\n/** 全局 document 对象引用，用于DOM操作 */\nexport const D = document;\n\n/** 全局 navigator 对象引用，类型转换为扩展的 Navigator 接口 */\nexport const WN = (W.navigator as unknown) as Navigator;\n\n/** 全局 performance 对象引用，用于性能监控 */\nexport const WP = W.performance;\n\n/**\n * 获取设备内存大小\n * 从 navigator.deviceMemory 获取设备内存信息，如果不支持则返回 0\n * \n * @returns 设备内存大小（GB），如果不支持则返回 0\n */\nexport const getDM = () => WN.deviceMemory ?? 0;\n\n/**\n * 获取硬件并发数\n * 从 navigator.hardwareConcurrency 获取CPU核心数，如果不支持则返回 0\n * \n * @returns CPU核心数，如果不支持则返回 0\n */\nexport const getHC = () => WN.hardwareConcurrency ?? 0;\n","import { AskPriority, IReportData } from '../typings/types';\nimport { W, WN } from './constants';\n\n/**\n * 数据上报工具配置选项\n */\ntype TrackerOptions = {\n  /** 日志上报的目标URL地址 */\n  logUrl: string;\n};\n\n/**\n * 数据上报类\n * 实现了 IReportData 接口，负责将性能监控数据发送到指定的服务器\n * \n * 支持两种上报方式：\n * 1. 紧急数据（URGENT）：使用 fetch 或 XMLHttpRequest 立即发送\n * 2. 空闲数据（IDLE）：使用 sendBeacon 或图片请求在空闲时发送\n */\nclass ReportData implements IReportData {\n  /** 日志上报的目标URL地址 */\n  private logUrl: string;\n\n  /**\n   * 构造函数\n   * @param options - 配置选项，必须包含 logUrl\n   * @throws Error 如果没有传递 logUrl 参数\n   */\n  constructor(options: TrackerOptions) {\n    const { logUrl } = options;\n    if (logUrl) {\n      this.logUrl = logUrl;\n    } else {\n      throw new Error('请传递要记录数据的路由~');\n    }\n  }\n\n  /**\n   * 发送数据到分析服务\n   * 根据优先级选择不同的上报方式，确保数据能够可靠地发送到服务器\n   * \n   * @param level - 数据优先级，决定上报方式和时机\n   * @param body - 要上报的数据内容\n   * @param uri - 可选的自定义上报URL，如果提供则覆盖默认的 logUrl\n   */\n  public sendToAnalytics(level: AskPriority, body: string, uri?: string) {\n    // 确定最终使用的上报URL\n    let logurl = this.logUrl;\n    // 临时更换其他url，用于特殊场景下的数据上报\n    if (uri) {\n      logurl = uri;\n    }\n    // console.log('路由', logurl);\n\n    // 紧急数据上报：需要立即发送的重要数据\n    if (level == AskPriority.URGENT) {\n      // 优先使用 fetch API，支持 keepalive 选项\n      if (!!W.fetch) {\n        fetch(logurl, { \n          body, \n          method: 'POST', \n          keepalive: true  // 确保页面关闭后请求仍能完成\n        });\n      } else {\n        // 降级到 XMLHttpRequest\n        let xhr: XMLHttpRequest | null = new XMLHttpRequest();\n        xhr.open('post', logurl, true);\n        // 设置请求头，指定内容类型为 JSON\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(body); // 发送参数\n        \n        xhr.onload = function (e) {\n          //   if (this.status == 200 || this.status == 304) {\n          //     alert(this.responseText);\n          //   }\n          // 及时清理引用，防止多次创建导致的内存泄露\n          xhr = null;\n        };\n      }\n    } \n    // 空闲数据上报：可以在空闲时发送的非紧急数据\n    else if (level == AskPriority.IDLE) {\n      // 优先使用 sendBeacon API，专为数据上报设计\n      if (!!WN.sendBeacon) {\n        navigator.sendBeacon(logurl, body);\n      } else {\n        // 降级到图片请求方式，兼容性最好\n        let img: HTMLImageElement | null = new Image();\n        img.src = `${logurl}?body=${body}`;\n        img.onload = function () {\n          // 统计完成收回创建的元素，防止内存泄露\n          img = null;\n        };\n      }\n    }\n  }\n}\n\nexport default ReportData;\n","import ReportData from '../data/ReportData';\nimport { IYidengConfig, IReportData } from '../typings/types';\n\nexport const config: IYidengConfig = {\n  // Metrics\n  reportData: new ReportData({ logUrl: 'hole' }),\n  isResourceTiming: false,\n  isElementTiming: false,\n  // Logging\n  maxTime: 15000,\n};\n","import { WN } from '../data/constants';\nimport {\n  EffectiveConnectionType,\n  IYidengNetworkInformation,\n} from '../typings/types';\n\n/**\n * 网络连接类型\n * 用于存储当前网络的有效连接类型，默认为 '4g'\n */\nexport let et: EffectiveConnectionType = '4g';\n\n/**\n * 节省数据模式状态\n * 表示用户是否启用了节省数据模式，默认为 false\n */\nexport let sd = false;\n\n/**\n * 获取网络连接信息\n * 从浏览器的 Network Information API 获取网络状态信息\n * 包括下行带宽、有效连接类型、往返时间等\n * \n * 如果浏览器不支持 Network Information API，则返回空对象\n * 未来计划实现多普勒测速法或图片探测法作为备选方案\n * \n * @returns 网络信息对象，包含下行带宽、连接类型、RTT等信息\n */\nexport const getNetworkInformation = (): IYidengNetworkInformation => {\n  // 检查浏览器是否支持 Network Information API\n  if ('connection' in WN) {\n    // 获取网络连接对象\n    const dataConnection = (WN as any).connection;\n    \n    // 验证连接对象是否为有效对象\n    if (typeof dataConnection !== 'object') {\n      return {};\n    }\n    \n    // 更新全局变量：有效连接类型\n    et = dataConnection.effectiveType;\n    \n    // 更新全局变量：节省数据模式状态\n    sd = !!dataConnection.saveData;\n    \n    // 返回完整的网络信息对象\n    return {\n      downlink: dataConnection.downlink,           // 下行带宽（Mbps）\n      effectiveType: dataConnection.effectiveType, // 有效连接类型（如 4g、3g 等）\n      rtt: dataConnection.rtt,                     // 往返时间（毫秒）\n      saveData: !!dataConnection.saveData,         // 是否启用节省数据模式\n    };\n  } else {\n    // 浏览器不支持 Network Information API\n    // TODO: 这里我们使用多普勒测速法或者直接用图片探测法\n    // 作为获取网络信息的备选方案\n  }\n  \n  // 如果无法获取网络信息，返回空对象\n  return {};\n};\n","import { getDM, getHC } from '../data/constants';\nimport { EffectiveConnectionType } from '../typings/types';\n\n/**\n * 判断是否为低端设备\n * 基于硬件能力（CPU核心数和内存大小）来评估设备性能\n * \n * 判断标准：\n * - CPU核心数 ≤ 4 个\n * - 设备内存 ≤ 4GB\n * \n * @returns true 表示低端设备，false 表示中高端设备\n */\nexport const getIsLowEndDevice = (): boolean => {\n  // 检查CPU核心数：如果逻辑处理器数量 ≤ 4，则认为是低端设备\n  if (getHC() && getHC() <= 4) {\n    return true;\n  }\n  \n  // 检查设备内存：如果可用内存 ≤ 4GB，则认为是低端设备\n  if (getDM() && getDM() <= 4) {\n    return true;\n  }\n  \n  // 如果CPU核心数 > 4 且内存 > 4GB，则认为是中高端设备\n  return false;\n};\n\n/**\n * 判断是否为低端用户体验\n * 综合考虑网络连接类型、节省数据模式和设备硬件能力\n * \n * @param et - 有效连接类型，如 'slow-2g'、'2g'、'3g'、'4g' 等\n * @param sd - 是否启用节省数据模式\n * @returns true 表示低端用户体验，false 表示中高端用户体验\n */\nexport const getIsLowEndExperience = (\n  et: EffectiveConnectionType,\n  sd: boolean\n): boolean => {\n  // 根据网络连接类型判断用户体验质量\n  // 如果连接类型不是 4g，则认为是低端体验\n  switch (et) {\n    case 'slow-2g':\n      // 极慢的2G网络，用户体验较差\n      return true;\n      break;\n    case '2g':\n      // 2G网络，用户体验较差\n      return true;\n      break;\n    case '3g':\n      // 3G网络，用户体验一般\n      return true;\n      break;\n    default:\n      // 4G或更好的网络连接\n      // 此时需要综合考虑设备硬件能力和节省数据模式\n      // 如果设备本身是低端设备，或者启用了节省数据模式，则认为是低端体验\n      return getIsLowEndDevice() || sd;\n  }\n};\n","import { getDM, getHC, WN } from '../data/constants';\nimport { et, sd } from './getNetworkInformation';\nimport { getIsLowEndDevice, getIsLowEndExperience } from './isLowEnd';\nimport { INavigatorInfo } from '../typings/types';\n\n/**\n * 获取浏览器导航器信息\n * 收集来自 window.navigator 的各种设备和浏览器能力信息\n * \n * 包含以下信息：\n * 1. Device Memory - 设备内存大小（GB）\n * 2. Hardware Concurrency - 硬件并发数（CPU核心数）\n * 3. Service Worker 状态：\n *    - controlled: 页面被 service worker 控制\n *    - supported: 浏览器支持 service worker\n *    - unsupported: 用户浏览器不支持 service worker\n * 4. 低端设备判断 - 基于硬件能力的设备性能评估\n * 5. 低端体验判断 - 基于网络条件的用户体验评估\n * \n * @returns 包含设备信息的对象，如果无法获取则返回空对象\n */\nexport const getNavigatorInfo = function (): INavigatorInfo {\n  // 检查浏览器是否支持 navigator 对象\n  if (WN) {\n    return {\n      // 获取设备内存大小，如果无法获取则默认为 0\n      deviceMemory: getDM() || 0,\n      \n      // 获取硬件并发数（CPU核心数），如果无法获取则默认为 0\n      hardwareConcurrency: getHC() || 0,\n      \n      // 判断 Service Worker 状态\n      serviceWorkerStatus:\n        'serviceWorker' in WN\n          ? WN.serviceWorker!.controller\n            ? 'controlled'    // 页面被 service worker 控制\n            : 'supported'     // 支持但未控制页面\n          : 'unsupported',    // 不支持 service worker\n      \n      // 基于硬件能力判断是否为低端设备\n      isLowEndDevice: getIsLowEndDevice(),\n      \n      // 基于网络条件判断是否为低端体验\n      // 传入网络类型(et)和节省数据模式(sd)参数\n      isLowEndExperience: getIsLowEndExperience(et, sd),\n    };\n  }\n  \n  // 如果浏览器不支持 navigator 对象，返回空对象\n  return {};\n};\n","import { D } from '../data/constants';\n\n/**\n * 页面可见性状态管理对象\n * 用于跟踪页面的可见性状态，避免在页面隐藏时发送错误的性能数据\n */\nexport const visibility = {\n  /** 页面是否处于隐藏状态，默认为 false（可见） */\n  isHidden: false,\n};\n\n/**\n * 页面可见性变化事件处理函数\n * \n * 该函数只在页面变为隐藏状态时执行回调，这样设计的原因是：\n * 1. 避免在页面隐藏时发送错误的性能数据或日志\n * 2. 确保性能监控的准确性，因为隐藏页面的性能数据可能不准确\n * 3. 优化资源使用，在页面不可见时停止不必要的性能监控\n * \n * 使用场景：\n * - 当用户切换到其他标签页时\n * - 当用户最小化浏览器窗口时\n * - 当页面被其他应用遮挡时\n * \n * @param cb - 页面隐藏时要执行的回调函数，通常用于停止性能监控\n */\nexport const didVisibilityChange = function (cb: Function) {\n  // 检查页面是否处于隐藏状态\n  if (D.hidden) {\n    // 执行回调函数，通常用于停止性能监控或清理资源\n    cb();\n    \n    // 更新全局可见性状态，记录页面当前为隐藏状态\n    visibility.isHidden = D.hidden;\n  }\n};\n","import { W } from '../data/constants';\n\n/**\n * 数值四舍五入到两位小数\n * 使用 toFixed(2) 方法进行精度控制，然后转换为浮点数\n * \n * @param num - 需要处理的数值\n * @returns 四舍五入到两位小数的浮点数\n */\nexport const roundByTwo = (num: number) => {\n  return parseFloat(num.toFixed(2));\n};\n\n/**\n * 将字节数转换为千字节（KB）\n * 将字节数除以 1024^2 得到 KB 值，并保留两位小数\n * \n * @param bytes - 字节数\n * @returns 转换后的 KB 值，如果输入无效则返回 null\n */\nexport const convertToKB = (bytes: number): number | null => {\n  // 验证输入参数是否为有效数字\n  if (typeof bytes !== 'number') {\n    return null;\n  }\n  \n  // 将字节转换为 KB：1 KB = 1024^2 字节\n  // 使用 roundByTwo 函数保留两位小数\n  return roundByTwo(bytes / Math.pow(1024, 2));\n};\n\n/**\n * 推送任务到 requestIdleCallback\n * 高效利用浏览器的空闲时间进行数据收集，避免阻塞主线程\n * \n * 如果浏览器支持 requestIdleCallback，则使用它来调度任务\n * 如果不支持，则立即执行回调函数\n * \n * @param cb - 需要执行的回调函数\n */\nexport const pushTask = (cb: any): void => {\n  // 检查浏览器是否支持 requestIdleCallback API\n  if ('requestIdleCallback' in W) {\n    // 使用 requestIdleCallback 在浏览器空闲时执行任务\n    // timeout: 3000 表示最多等待 3 秒，如果一直没有空闲时间则强制执行\n    (W as any).requestIdleCallback(cb, { timeout: 3000 });\n  } else {\n    // 浏览器不支持 requestIdleCallback，立即执行回调函数\n    cb();\n  }\n};\n","import { IYidengData, IVitalsScore } from '../typings/types';\n\n// Web Vitals 评分标准阈值定义\n// 参考标准：https://web.dev/vitals/\n// 这些阈值用于评估网页性能指标的质量等级\n\n// FCP (First Contentful Paint) 评分阈值：1000ms 为优秀，2500ms 为需要改进\nconst fcpScore = [1000, 2500];\n\n// LCP (Largest Contentful Paint) 评分阈值：2500ms 为优秀，4000ms 为需要改进\nconst lcpScore = [2500, 4000];\n\n// FID (First Input Delay) 评分阈值：100ms 为优秀，300ms 为需要改进\nconst fidcore = [100, 300];\n\n// CLS (Cumulative Layout Shift) 评分阈值：0.1 为优秀，0.25 为需要改进\nconst clsScore = [0.1, 0.25];\n\n// TBT (Total Blocking Time) 评分阈值：300ms 为优秀，600ms 为需要改进\nconst tbtScore = [300, 600];\n\n/**\n * Web Vitals 评分标准映射表\n * 将各种性能指标名称映射到对应的评分阈值数组\n * 每个阈值数组包含两个值：[优秀阈值, 需要改进阈值]\n */\nexport const webVitalsScore: Record<string, number[]> = {\n  // First Paint 和 First Contentful Paint 使用相同的评分标准\n  fp: fcpScore,      // First Paint\n  fcp: fcpScore,     // First Contentful Paint\n  \n  // Largest Contentful Paint 相关指标\n  lcp: lcpScore,     // Largest Contentful Paint\n  lcpFinal: lcpScore, // LCP 最终值\n  \n  // First Input Delay 相关指标\n  fid: fidcore,      // First Input Delay\n  fidVitals: fidcore, // FID Vitals 指标\n  \n  // Cumulative Layout Shift 相关指标\n  cls: clsScore,     // Cumulative Layout Shift\n  clsFinal: clsScore, // CLS 最终值\n  \n  // Total Blocking Time 相关指标\n  tbt: tbtScore,     // Total Blocking Time\n  tbt5S: tbtScore,   // 5秒内的 TBT\n  tbt10S: tbtScore,  // 10秒内的 TBT\n  tbtFinal: tbtScore, // TBT 最终值\n};\n\n/**\n * 根据性能指标名称和值计算 Web Vitals 评分\n * 将数值性能指标转换为可读的质量等级\n * \n * @param measureName - 性能指标名称，如 'fcp'、'lcp'、'cls' 等\n * @param value - 性能指标的具体数值\n * @returns 性能评分等级：'good'（优秀）、'needsImprovement'（需要改进）、'poor'（较差）或 null（未知指标）\n */\nexport const getVitalsScore = (\n  measureName: string,\n  value: IYidengData\n): IVitalsScore => {\n  // 检查指标名称是否在评分标准中存在\n  if (!webVitalsScore[measureName]) {\n    return null;\n  }\n  \n  // 获取该指标的评分阈值\n  const thresholds = webVitalsScore[measureName];\n  \n  // 根据数值与阈值的比较确定评分等级\n  if (value <= thresholds[0]) {\n    // 数值小于等于第一个阈值，评为优秀\n    return 'good';\n  }\n  \n  // 数值小于等于第二个阈值，评为需要改进，否则评为较差\n  return value <= thresholds[1] ? 'needsImprovement' : 'poor';\n};","import { config } from '../config';\nimport { getNavigatorInfo } from '../helpers/getNavigatorInfo';\nimport { visibility } from '../helpers/onVisibilityChange';\nimport { pushTask } from '../helpers/utils';\nimport { getVitalsScore } from '../helpers/vitalsScore';\n\n/**\n * Sends the User timing measure to analyticsTracker\n */\nexport const reportPerf = function (\n  measureName: string,\n  data: any,\n  customProperties?: object\n): void {\n  pushTask(() => {\n    // 当页面被隐藏的时候不报告具体数据\n    if (\n      (visibility.isHidden && measureName.indexOf('Final') < 0) ||\n      !config.analyticsTracker\n    ) {\n      return;\n    }\n    // Send metric to custom Analytics service\n    config.analyticsTracker({\n      metricName: measureName,\n      data,\n      eventProperties: customProperties || {},\n      navigatorInformation: getNavigatorInfo(),\n      vitalsScore: getVitalsScore(measureName, data),\n    });\n  });\n};\n","import { config } from '../config';\nimport { reportPerf } from '../data/reportPerf';\nimport { roundByTwo } from '../helpers/utils';\n\n/**\n * 记录并上报性能指标数据\n * 将传入的指标数据中的数值进行四舍五入处理，然后发送到外部跟踪服务\n * \n * @param measureName - 指标名称，用于标识不同类型的性能数据\n * @param metric - 指标数据对象，包含各种性能指标值\n * @param customProperties - 可选的自定义属性，用于添加额外的上下文信息\n */\nexport const logData = (\n  measureName: string,\n  metric: any,\n  customProperties?: object\n): void => {\n  // 遍历指标对象的所有属性，对数值类型的属性进行精度处理\n  Object.keys(metric).forEach((key) => {\n    if (typeof metric[key] === 'number') {\n      // 将数值四舍五入到两位小数，提高数据的一致性和可读性\n      metric[key] = roundByTwo(metric[key]);\n    }\n  });\n  \n  // 将处理后的指标数据发送到外部跟踪服务\n  reportPerf(measureName, metric, customProperties);\n};\n\n/**\n * 记录并上报性能指标持续时间\n * 将指标持续时间分发到内部日志和外部时间跟踪服务\n * \n * @param duration - 持续时间（毫秒），表示某个操作的执行时间\n * @param measureName - 指标名称，用于标识性能指标类型\n * @param customProperties - 可选的自定义属性，用于添加额外的上下文信息\n */\nexport const logMetric = (\n  duration: number,\n  measureName: string,\n  customProperties?: object\n): void => {\n  // 将持续时间四舍五入到两位小数\n  const duration2Decimal = roundByTwo(duration);\n  \n  // 验证持续时间的有效性：必须在配置的最大时间范围内且为非负数\n  if (duration2Decimal <= config.maxTime && duration2Decimal >= 0) {\n    // 从内部或者外部的报告工具报告指标数据\n    reportPerf(measureName, duration2Decimal, customProperties);\n  }\n};\n","import { W, WP } from '../data/constants';\n\n/**\n * 检查浏览器是否支持性能监控相关的 API\n * \n * 该函数检查浏览器是否支持以下三个关键的性能 API：\n * 1. Navigation Timing API - 导航时间 API\n * 2. User Timing API - 用户时间 API（performance.mark()）\n * 3. PerformanceObserver Interface - 性能观察器接口\n * \n * 注意事项：\n * - 在 Safari 浏览器中，User Timing API (performance.mark()) 不可用\n * - 这会导致 DevTools 时间轴无法显示性能标记\n * \n * 相关文档：\n * - Performance.mark(): https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n * - PerformanceObserver: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n * - Performance.getEntriesByType: https://developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType\n * \n * @returns true 表示浏览器支持性能监控 API，false 表示不支持\n */\nexport const isPerformanceSupported = (): boolean => {\n  // 检查 performance 对象是否存在\n  // 检查 getEntriesByType 方法是否可用（Navigation Timing API）\n  // 检查 now 方法是否可用（高精度时间戳）\n  // 检查 mark 方法是否可用（User Timing API）\n  return WP && !!WP.getEntriesByType && !!WP.now && !!WP.mark;\n};","import { WP } from '../data/constants';\nimport { isPerformanceSupported } from '../helpers/isSupported';\nimport { IYidengNavigationTiming } from '../typings/types';\n\n/**\n * 获取页面导航时间性能指标\n * \n * Navigation Timing API 提供了 HTML 文档的性能指标数据。\n * 该 API 可以详细测量页面加载过程中的各个阶段耗时。\n * \n * 相关文档：\n * - W3C 规范：https://w3c.github.io/navigation-timing/\n * - Google 开发者指南：https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\n * \n * @returns 包含各种导航时间指标的对象，如果浏览器不支持则返回空对象\n */\nexport const getNavigationTiming = (): IYidengNavigationTiming => {\n  // 检查浏览器是否支持性能监控 API\n  if (!isPerformanceSupported()) {\n    return {};\n  }\n  \n  // 获取导航类型的性能条目\n  // 注意：这里直接使用 performance.timing 已被弃用，改用 getEntriesByType\n  // TypeScript 类型定义问题：https://github.com/microsoft/TypeScript/issues/33866\n  const n = WP.getEntriesByType('navigation')[0] as any;\n  \n  // Safari 11.2 版本之前不支持 Navigation Timing API\n  if (!n) {\n    return {};\n  }\n  \n  // 缓存响应开始和结束时间，避免重复计算\n  const responseStart = n.responseStart;\n  const responseEnd = n.responseEnd;\n  \n  // 返回包含各种导航时间指标的对象\n  return {\n    // 资源获取时间：从开始获取到最后一个字节到达的时间\n    fetchTime: responseEnd - n.fetchStart,\n    \n    // Service Worker 时间：Service Worker 启动到响应结束的时间\n    // 如果没有 Service Worker 则返回 0\n    workerTime: n.workerStart > 0 ? responseEnd - n.workerStart : 0,\n    \n    // 总网络时间：请求开始到响应结束的总时间（仅网络部分）\n    totalTime: responseEnd - n.requestStart,\n    \n    // 下载时间：仅响应数据的下载时间\n    downloadTime: responseEnd - responseStart,\n    \n    // 首字节时间（TTFB）：从请求开始到收到第一个字节的时间\n    // 这是衡量服务器响应速度的重要指标\n    timeToFirstByte: responseStart - n.requestStart,\n    \n    // HTTP 头部大小：传输大小减去编码后的主体大小\n    headerSize: n.transferSize - n.encodedBodySize || 0,\n    \n    // DNS 解析时间：域名查找结束时间减去开始时间\n    dnsLookupTime: n.domainLookupEnd - n.domainLookupStart,\n    \n    // TCP 建立时间：连接结束时间减去开始时间\n    tcpTime: n.connectEnd - n.connectStart || 0,\n    \n    // 白屏时间：从导航开始到响应开始的时间\n    // 表示用户看到页面的第一个视觉反馈的时间\n    whiteTime: n.responseStart - n.navigationStart || 0,\n    \n    // DOM 渲染完成时间：从导航开始到 DOM 内容加载完成的时间\n    // 表示页面结构完全渲染完成的时间\n    domTime: n.domContentLoadedEventEnd - n.navigationStart || 0,\n    \n    // 页面完全加载时间：从导航开始到 onload 事件结束的时间\n    // 表示页面所有资源加载完成的时间\n    loadTime: n.loadEventEnd - n.navigationStart || 0,\n    \n    // 页面解析 DOM 耗时：DOM 完成时间减去 DOM 交互时间\n    // 表示浏览器解析和构建 DOM 树所需的时间\n    parseDomTime: n.domComplete - n.domInteractive || 0,\n  };\n};\n","import { IMetricMap, IYidengDataConsumption } from '../typings/types';\n\n/**\n * 性能指标存储映射表\n * 用于存储各种性能指标的测量结果\n */\nexport const metrics: IMetricMap = {};\n\n/**\n * CLS (Cumulative Layout Shift) 累积布局偏移指标\n * 用于衡量页面的视觉稳定性，值越小表示页面越稳定\n */\nexport const cls = {\n  /** CLS 指标值，默认为 0 */\n  value: 0,\n};\n\n/**\n * FCP (First Contentful Paint) 首次内容绘制指标\n * 用于衡量页面首次显示内容的时间，值越小表示页面加载越快\n */\nexport const fcp = {\n  /** FCP 指标值，默认为 0 */\n  value: 0,\n};\n\n/**\n * LCP (Largest Contentful Paint) 最大内容绘制指标\n * 用于衡量页面主要内容加载完成的时间，值越小表示用户体验越好\n */\nexport const lcp = {\n  /** LCP 指标值，默认为 0 */\n  value: 0,\n};\n\n/**\n * First Paint 性能条目的名称\n * 用于标识首次绘制的性能条目\n */\nexport const fpEntryName = 'first-paint';\n\n/**\n * First Contentful Paint 性能条目的名称\n * 用于标识首次内容绘制的性能条目\n */\nexport const fcpEntryName = 'first-contentful-paint';\n\n/**\n * 资源时间消耗统计对象\n * 用于跟踪不同类型资源的加载时间消耗\n */\nexport const rt: { value: IYidengDataConsumption } = {\n  value: {\n    beacon: 0,           // 信标请求消耗的时间\n    css: 0,              // CSS 资源加载消耗的时间\n    fetch: 0,            // Fetch API 请求消耗的时间\n    img: 0,              // 图片资源加载消耗的时间\n    other: 0,            // 其他类型资源消耗的时间\n    script: 0,           // JavaScript 脚本加载消耗的时间\n    total: 0,            // 所有资源消耗的总时间\n    xmlhttprequest: 0,   // XMLHttpRequest 请求消耗的时间\n  },\n};\n\n/**\n * TBT (Total Blocking Time) 总阻塞时间指标\n * 用于衡量主线程被阻塞的总时间，值越小表示页面响应性越好\n * 这是衡量页面交互性能的重要指标\n */\nexport const tbt = {\n  /** TBT 指标值，默认为 0 */\n  value: 0,\n};\n","import { cls } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\n/**\n * 检测新的布局偏移事件并更新累积布局偏移分数\n * \n * 该函数用于监控页面的视觉稳定性，通过累积计算布局偏移分数来评估用户体验。\n * CLS (Cumulative Layout Shift) 是 Core Web Vitals 的重要指标之一。\n * \n * 布局偏移检测规则：\n * 1. 只计算没有最近用户输入的布局偏移\n * 2. 累积所有有效的布局偏移值\n * 3. 确保布局偏移值的有效性\n * \n * @param performanceEntries - 性能条目数组，包含布局偏移事件的详细信息\n */\nexport const initLayoutShift = (performanceEntries: IPerformanceEntry[]) => {\n  // 获取最后一个布局偏移条目\n  // 因为布局偏移观察器可能触发多次，我们处理最新的偏移事件\n  const lastEntry = performanceEntries.pop();\n  \n  // 只计算没有最近用户输入的布局偏移\n  // 这是 CLS 计算的重要规则，避免将用户主动操作导致的布局变化计入分数\n  // 同时确保布局偏移值存在且有效\n  if (lastEntry && !lastEntry.hadRecentInput && lastEntry.value) {\n    // 累积布局偏移分数\n    // cls.value 存储的是页面的累积布局偏移分数\n    // 分数越高表示页面视觉稳定性越差\n    cls.value += lastEntry.value;\n  }\n};\n","import { IPerfObservers } from '../typings/types';\n/**\n * @remarks 核心性能数据指标对象\n * @public\n */\nexport const perfObservers: IPerfObservers = {};\n","import { C } from '../data/constants';\nimport { perfObservers } from './observeInstances';\nimport { IPerformanceObserverType } from '../typings/types';\n\n/**\n * PerformanceObserver 异步订阅封装\n * 用于创建和配置性能观察器，监听特定类型的性能事件\n * \n * @param eventType - 性能事件类型，如 'first-input'、'largest-contentful-paint' 等\n * @param cb - 回调函数，当性能事件触发时会被调用，接收性能条目数组作为参数\n * @returns PerformanceObserver 实例或 null（如果创建失败）\n */\nexport const po = (\n  eventType: IPerformanceObserverType,\n  cb: (performanceEntries: any[]) => void\n): PerformanceObserver | null => {\n  try {\n    // 创建新的性能观察器实例\n    const perfObserver = new PerformanceObserver((entryList) => {\n      // 当性能事件触发时，调用回调函数并传递性能条目\n      cb(entryList.getEntries());\n    });\n    \n    // 订阅指定类型的事件\n    // buffered: true 表示不立即执行，在内存中保留 PerformanceObserver 实例\n    // 这样可以捕获在观察器创建之前就已经发生的性能事件\n    perfObserver.observe({ type: eventType, buffered: true });\n    \n    return perfObserver;\n  } catch (e) {\n    // 如果创建观察器失败，记录警告信息\n    C.warn('sdk.js:', e);\n  }\n  \n  // 创建失败时返回 null\n  return null;\n};\n\n/**\n * 断开性能观察器的连接并清理资源\n * 用于停止性能监控并释放内存\n * \n * @param observer - 要断开的观察器标识符\n */\nexport const poDisconnect = (observer: any) => {\n  // 检查观察器是否存在\n  if (perfObservers[observer]) {\n    // 断开观察器的连接，停止监听性能事件\n    perfObservers[observer].disconnect();\n  }\n  \n  // 从观察器实例集合中删除该观察器，释放内存\n  delete perfObservers[observer];\n};\n","import { logData, logMetric } from '../data/log';\nimport { cls, lcp, rt, tbt } from '../data/metrics';\nimport { perfObservers } from './observeInstances';\nimport { poDisconnect } from './performanceObserver';\nimport { PerformanceEventTiming } from '../typings/types';\n\n/**\n * 初始化首次输入延迟监控\n * \n * 该函数在首次输入事件触发后被调用，用于：\n * 1. 计算并记录 FID (First Input Delay) 指标\n * 2. 记录其他核心 Web Vitals 指标\n * 3. 清理性能观察器，避免内存泄露\n * 4. 延迟记录 TBT 和资源消耗数据\n * \n * @param performanceEntries - 性能事件时间数组，包含输入事件的详细信息\n */\nexport const initFirstInputDelay = (\n  performanceEntries: PerformanceEventTiming[]\n) => {\n  // 取最后一位即为我们希望所获取的时间点\n  // 因为 FID 观察器可能触发多次，我们只需要最后一次的输入事件\n  const lastEntry = performanceEntries.pop();\n  \n  if (lastEntry) {\n    // Core Web Vitals FID 逻辑\n    // 测量输入事件的延迟操作：从事件开始到开始处理的时间差\n    // 这是衡量页面响应性的关键指标\n    logMetric(lastEntry.processingStart - lastEntry.startTime, 'fidVitals', {\n      performanceEntry: lastEntry,\n    });\n    \n    // 传统的 FID 逻辑\n    // 测量处理第一个输入事件的持续时间\n    // 包括事件处理的总时间\n    logMetric(lastEntry.duration, 'fid', {\n      performanceEntry: lastEntry,\n    });\n  }\n  \n  // 销毁对 FID 的注册回调，避免过多的观察者造成内存泄露\n  poDisconnect(1);\n  \n  // 初始化并记录 LCP (Largest Contentful Paint) 指标\n  logMetric(lcp.value, 'lcp');\n  \n  // 如果存在 LCP 观察器，立即获取其记录\n  // takeRecords() 方法可以立即获取所有待处理的性能条目\n  if (perfObservers[3] && typeof perfObservers[3].takeRecords === 'function') {\n    perfObservers[3].takeRecords();\n  }\n  \n  // 记录 CLS (Cumulative Layout Shift) 累积布局偏移指标\n  logMetric(cls.value, 'cls');\n  \n  // 记录 TBT (Total Blocking Time) 总阻塞时间指标\n  logMetric(tbt.value, 'tbt');\n  \n  // FID 触发后 5 秒延迟记录 TBT 指标\n  // 这可以反映用户在首次交互后的页面响应性\n  setTimeout(() => {\n    logMetric(tbt.value, `tbt5S`);\n  }, 5000);\n  \n  // FID 触发后 10 秒延迟记录 TBT 指标和资源消耗数据\n  // 这可以反映用户在首次交互后一段时间内的整体体验\n  setTimeout(() => {\n    logMetric(tbt.value, `tbt10S`);\n    \n    // FID 被激活以后 10S 的整体数据消耗\n    // 记录各种资源类型的加载时间消耗\n    logData('dataConsumption', rt.value);\n  }, 10000);\n};\n","import { fcp, tbt } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\n/**\n * 初始化总阻塞时间监控\n * \n * 该函数用于计算页面的总阻塞时间（Total Blocking Time, TBT），\n * TBT 是衡量页面交互性能的重要指标，表示主线程被阻塞的总时间。\n * \n * 计算逻辑：\n * 1. 只统计 FCP（首次内容绘制）之后的长任务\n * 2. 只统计来自渲染帧的长任务（name === 'self'）\n * 3. 长任务是指执行时间超过 50ms 的任务\n * 4. 阻塞时间 = 任务持续时间 - 50ms（50ms 是长任务的阈值）\n * \n * 相关文档：https://developer.mozilla.org/zh-CN/docs/Web/API/Long_Tasks_API\n * \n * @param performanceEntries - 性能条目数组，包含长任务的详细信息\n */\nexport const initTotalBlockingTime = (\n  performanceEntries: IPerformanceEntry[]\n): void => {\n  // 遍历所有性能条目，寻找长任务\n  performanceEntries.forEach((entry) => {\n    // 从 FCP 到 TTI 获取长耗时任务\n    // 只统计 name === 'self' 的任务，表示耗时长任务来自于渲染帧\n    // 只统计 FCP 之后的任务，因为 FCP 之前的阻塞不影响用户交互\n    if (entry.name !== 'self' || entry.startTime < fcp.value) {\n      return;\n    }\n    \n    // 长耗时任务意味着执行时间超过 50ms 的任务\n    // 50ms 是长任务的阈值，超过这个时间的任务被认为会阻塞主线程\n    // 参考文档：https://developer.mozilla.org/zh-CN/docs/Web/API/Long_Tasks_API\n    const blockingTime = entry.duration - 50;\n    \n    // 只有当阻塞时间大于 0 时才累加到总阻塞时间中\n    // 如果任务持续时间小于等于 50ms，则不会产生阻塞时间\n    if (blockingTime > 0) {\n      tbt.value += blockingTime;\n    }\n  });\n};\n","import { IPerformanceEntry } from '../typings/types';\nimport { fcp, fcpEntryName,fpEntryName, lcp } from '../data/metrics';\nimport { po, poDisconnect } from './performanceObserver';\nimport { perfObservers } from './observeInstances';\nimport { initTotalBlockingTime } from './totalBlockingTime';\nimport { logMetric } from '../data/log';\nexport const initFirstPaint = (performanceEntries: IPerformanceEntry[]) => {\n  performanceEntries.forEach((entry) => {\n    if (entry.name === fpEntryName) {\n      logMetric(entry.startTime, 'fp');\n    } else if (entry.name === fcpEntryName) {\n      fcp.value = entry.startTime;\n      logMetric(fcp.value, 'fcp');\n      perfObservers[4] = po('longtask', initTotalBlockingTime);\n      poDisconnect(0);\n    }\n  });\n};\nexport const initLargestContentfulPaint = (\n  performanceEntries: IPerformanceEntry[]\n) => {\n  const lastEntry = performanceEntries.pop();\n  if (lastEntry) {\n    lcp.value = lastEntry.renderTime || lastEntry.loadTime;\n  }\n};\nexport const initElementTiming = (performanceEntries: IPerformanceEntry[]) => {\n  performanceEntries.forEach((entry) => {\n    if (entry.identifier) {\n      logMetric(entry.startTime, entry.identifier);\n    }\n  });\n};\n","import { config } from '../config';\nimport { logData } from '../data/log';\nimport { rt } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\n/**\n * 初始化资源时间监控\n * \n * 该函数用于监控和分析页面中各种资源的加载性能，包括：\n * 1. 记录资源加载的详细时间信息（如果启用）\n * 2. 统计不同类型资源的体积大小\n * 3. 累积计算总资源消耗\n * \n * 支持的资源类型包括：script、css、img、fetch、xmlhttprequest 等\n * \n * @param performanceEntries - 性能条目数组，包含各种资源加载的详细信息\n */\nexport const initResourceTiming = (performanceEntries: IPerformanceEntry[]) => {\n  // 遍历所有资源性能条目\n  performanceEntries.forEach((entry) => {\n    // 如果配置中启用了资源时间监控，则记录详细的资源时间信息\n    if (config.isResourceTiming) {\n      logData('resourceTiming', entry);\n    }\n    \n    // 检查条目是否包含有效的体积信息和发起者类型\n    // decodedBodySize: 解码后的资源体积（字节）\n    // initiatorType: 资源发起者类型（如 script、css、img 等）\n    if (entry.decodedBodySize && entry.initiatorType) {\n      // 将字节转换为 KB，提高可读性\n      const bodySize = entry.decodedBodySize / 1000;\n      \n      // 累加到对应资源类型的体积统计中\n      // 例如：如果是 script 资源，则累加到 rt.value.script\n      rt.value[entry.initiatorType] += bodySize;\n      \n      // 同时累加到总体积统计中\n      rt.value.total += bodySize;\n    }\n  });\n};\n","import { config } from '../config';\nimport { logMetric } from '../data/log';\nimport { cls, lcp, tbt } from '../data/metrics';\nimport { initLayoutShift } from './cumulativeLayoutShift';\nimport { initFirstInputDelay } from './firstInput';\nimport { perfObservers } from './observeInstances';\nimport {\n  initElementTiming,\n  initFirstPaint,\n  initLargestContentfulPaint,\n} from './paint';\nimport { po, poDisconnect } from './performanceObserver';\nimport { initResourceTiming } from './resourceTiming';\nexport const initPerformanceObserver = (): void => {\n  console.log('⏰ 性能收集开始');\n  perfObservers[0] = po('paint', initFirstPaint);\n  perfObservers[1] = po('first-input', initFirstInputDelay);\n  perfObservers[2] = po('largest-contentful-paint', initLargestContentfulPaint);\n  //收集页面全部资源性能数据\n  if (config.isResourceTiming) {\n    console.log('📚 收集页面性能数据');\n    po('resource', initResourceTiming);\n  }\n  perfObservers[3] = po('layout-shift', initLayoutShift);\n  if (config.isElementTiming) {\n    po('element', initElementTiming);\n  }\n};\n\nexport const disconnectPerfObserversHidden = (): void => {\n  if (perfObservers[2]) {\n    logMetric(lcp.value, `lcpFinal`);\n    poDisconnect(2);\n  }\n  if (perfObservers[3]) {\n    if (typeof perfObservers[3].takeRecords === 'function') {\n      perfObservers[3].takeRecords();\n    }\n    logMetric(cls.value, `clsFinal`);\n    poDisconnect(3);\n  }\n  if (perfObservers[4]) {\n    logMetric(tbt.value, `tbtFinal`);\n    poDisconnect(4);\n  }\n};\n","import { W, WP } from '../data/constants';\n\n/**\n * True if the browser supports the Navigation Timing API,\n * User Timing API and the PerformanceObserver Interface.\n * In Safari, the User Timing API (performance.mark()) is not available,\n * so the DevTools timeline will not be annotated with marks.\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n * Support: developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType\n */\n\n/**\n * 检查浏览器是否支持性能API\n *\n * @returns 如果浏览器支持性能API，则返回true；否则返回false\n */\nexport const isPerformanceSupported = (): boolean => {\n  return WP && !!WP.getEntriesByType && !!WP.now && !!WP.mark;\n};\n","import { config } from '../config';\nimport { W } from '../data/constants';\n//rrweb引入到了这里\nimport { AskPriority } from '../typings/types';\ntype ErrorInfo = {};\nclass ErrorTrace {\n  private errordefo: ErrorInfo;\n  constructor() {\n    this.errordefo = {};\n  }\n  //全局捕获同步+异步错误\n  private globalError() {\n    console.log('上报sdk');\n    console.log('[ ❌全局捕获错误 ]');\n    W.onerror = (\n      eventOrMessage: Event | string,\n      scriptURI?: string,\n      lineno?: number,\n      colno?: number,\n      error?: Error\n    ): boolean => {\n      console.log('[ 我知道错误了 ]', eventOrMessage);\n      const errorInfo = JSON.stringify({\n        scriptURI,\n        lineno,\n        colno,\n        error,\n      });\n      //通过错误信息还原sourcemap源文件地址\n      console.log(errorInfo);\n      config.reportData.sendToAnalytics(AskPriority.IDLE, errorInfo);\n      return true;\n    };\n  }\n  //资源挂载失败 如404png\n  private networkError() {\n    W.addEventListener(\n      'error',\n      function (e: ErrorEvent) {\n        if (e.target !== W) {\n          console.log('🖼网络错误', e.target);\n        }\n      },\n      true\n    );\n  }\n  //异步Promise错误\n  private promiseError() {\n    W.addEventListener('unhandledrejection', function (e) {\n      e.preventDefault();\n      console.log('我知道 promise 的错误了', e.reason);\n      return true;\n    });\n  }\n  private iframeError() {\n    const frames = W.frames;\n    for (let i = 0; i < frames.length; i++) {\n      frames[i].addEventListener(\n        'error',\n        (e) => {\n          console.log('addEventListener');\n          console.log(e);\n        },\n        true\n      );\n\n      frames[i].addEventListener(\n        'unhandledrejection',\n        function (e) {\n          console.log('unhandledrejection');\n        },\n        true\n      );\n    }\n  }\n  // private consoleReflect() {\n  //   const console_error = W.console.error;\n  //   W.console.error = function () {\n  //     config.reportData.sendToAnalytics(AskPriority.IDLE, errorInfo);\n  //     console_error.apply(window, arguments);\n  //   };\n  // }\n  public run() {\n    this.networkError();\n    //触发全体数据监听错误\n    this.globalError();\n    //触发promise的错误\n    this.promiseError();\n  }\n}\nexport default ErrorTrace;\n","import { IAnalyticsTrackerOptions } from '../typings/types';\nconst analyticsTracker = (options: IAnalyticsTrackerOptions): void => {\n  //   console.log(Math.random());\n  //   console.log('-------');\n  const {\n    metricName,\n    eventProperties,\n    data,\n    navigatorInformation,\n    vitalsScore,\n  } = options;\n  console.log(options);\n};\nexport default analyticsTracker;\n","import { AskPriority, IReportData } from '../typings/types';\nimport { W, WN } from './constants';\n\n/**\n * 数据上报工具配置选项\n */\ntype TrackerOptions = {\n  /** 日志上报的目标URL地址 */\n  logUrl: string;\n};\n\n/**\n * 数据上报类\n * 实现了 IReportData 接口，负责将性能监控数据发送到指定的服务器\n * \n * 支持两种上报方式：\n * 1. 紧急数据（URGENT）：使用 fetch 或 XMLHttpRequest 立即发送\n * 2. 空闲数据（IDLE）：使用 sendBeacon 或图片请求在空闲时发送\n */\nclass ReportData implements IReportData {\n  /** 日志上报的目标URL地址 */\n  private logUrl: string;\n\n  /**\n   * 构造函数\n   * @param options - 配置选项，必须包含 logUrl\n   * @throws Error 如果没有传递 logUrl 参数\n   */\n  constructor(options: TrackerOptions) {\n    const { logUrl } = options;\n    if (logUrl) {\n      this.logUrl = logUrl;\n    } else {\n      throw new Error('请传递要记录数据的路由~');\n    }\n  }\n\n  /**\n   * 发送数据到分析服务\n   * 根据优先级选择不同的上报方式，确保数据能够可靠地发送到服务器\n   * \n   * @param level - 数据优先级，决定上报方式和时机\n   * @param body - 要上报的数据内容\n   * @param uri - 可选的自定义上报URL，如果提供则覆盖默认的 logUrl\n   */\n  public sendToAnalytics(level: AskPriority, body: string, uri?: string) {\n    // 确定最终使用的上报URL\n    let logurl = this.logUrl;\n    // 临时更换其他url，用于特殊场景下的数据上报\n    if (uri) {\n      logurl = uri;\n    }\n    // console.log('路由', logurl);\n\n    // 紧急数据上报：需要立即发送的重要数据\n    if (level == AskPriority.URGENT) {\n      // 优先使用 fetch API，支持 keepalive 选项\n      if (!!W.fetch) {\n        fetch(logurl, { \n          body, \n          method: 'POST', \n          keepalive: true  // 确保页面关闭后请求仍能完成\n        });\n      } else {\n        // 降级到 XMLHttpRequest\n        let xhr: XMLHttpRequest | null = new XMLHttpRequest();\n        xhr.open('post', logurl, true);\n        // 设置请求头，指定内容类型为 JSON\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(body); // 发送参数\n        \n        xhr.onload = function (e) {\n          //   if (this.status == 200 || this.status == 304) {\n          //     alert(this.responseText);\n          //   }\n          // 及时清理引用，防止多次创建导致的内存泄露\n          xhr = null;\n        };\n      }\n    } \n    // 空闲数据上报：可以在空闲时发送的非紧急数据\n    else if (level == AskPriority.IDLE) {\n      // 优先使用 sendBeacon API，专为数据上报设计\n      if (!!WN.sendBeacon) {\n        navigator.sendBeacon(logurl, body);\n      } else {\n        // 降级到图片请求方式，兼容性最好\n        let img: HTMLImageElement | null = new Image();\n        img.src = `${logurl}?body=${body}`;\n        img.onload = function () {\n          // 统计完成收回创建的元素，防止内存泄露\n          img = null;\n        };\n      }\n    }\n  }\n}\n\nexport default ReportData;\n","import { logData } from './log';\nimport { convertToKB } from '../helpers/utils';\n\n/**\n * 存储空间估算报告函数\n * \n * 该函数使用 StorageManager 接口的 estimate() 方法来获取应用的存储使用情况：\n * - 应用已使用的存储空间（usage）\n * - 可用的存储空间（quota）\n * - 各种存储类型的详细使用情况\n * \n * 参考文档：https://developer.mozilla.org/en-US/docs/Web/API/StorageManager/estimate\n * \n * @param storageInfo - StorageEstimate 对象，包含存储空间的使用和配额信息\n */\nexport const reportStorageEstimate = (storageInfo: StorageEstimate) => {\n  // 获取详细的存储使用情况\n  // 某些浏览器可能不支持 usageDetails，需要做兼容性处理\n  const estimateUsageDetails =\n    'usageDetails' in storageInfo ? (storageInfo as any).usageDetails : {};\n  \n  // 记录存储空间估算数据\n  // 将所有存储空间数值从字节转换为 KB，提高可读性\n  logData('storageEstimate', {\n    quota: convertToKB((storageInfo as any).quota),                    // 总配额（可用存储空间）\n    usage: convertToKB((storageInfo as any).usage),                    // 已使用存储空间\n    caches: convertToKB(estimateUsageDetails.caches),                  // 缓存存储使用量\n    indexedDB: convertToKB(estimateUsageDetails.indexedDB),            // IndexedDB 存储使用量\n    serviceWorker: convertToKB(estimateUsageDetails.serviceWorkerRegistrations), // Service Worker 注册存储使用量\n  });\n};\n","/**\n * 一款免费的开源性能监控SDK\n *\n * @remarks\n * 目前能够完成监控的指标包含FCP等\n *\n * @packageDocumentation\n */\nimport { config } from './config';\nimport { D, W, WN, WP } from './data/constants';\nimport { logData } from './data/log';\nimport { getNavigationTiming } from './performance/getNavigationTiming';\nimport {\n  disconnectPerfObserversHidden,\n  initPerformanceObserver,\n} from './performance/observe';\nimport { isPerformanceSupported } from './tools/isSupported';\nimport { IReportData, IYidengOptions } from './typings/types';\nimport ErrorTrace from './error';\nimport analyticsTracker from './data/analyticsTracker';\nimport ReportData from './data/reportData';\nimport { didVisibilityChange } from './helpers/onVisibilityChange';\nimport { getNetworkInformation } from './helpers/getNetworkInformation';\nimport { reportStorageEstimate } from './data/storageEstimate';\n\n/**\n * Yideng 性能监控主类\n * 负责初始化性能监控、错误跟踪、网络信息收集等功能\n */\nexport default class Yideng {\n  /** SDK版本号 */\n  private v = '1.0.0';\n  \n  /** 数据上报接口实例 */\n  private reportData: IReportData;\n\n  /**\n   * 构造函数\n   * @param options - 配置选项，包含日志URL、错误捕获、性能监控等配置\n   */\n  constructor(options: IYidengOptions = {}) {\n    // 验证必需参数：日志上报URL\n    const logUrl = options.logUrl;\n    if (!logUrl) {\n      throw new Error(`系统监控平台${this.v}提示未传递logUrl`);\n    }\n\n    // 初始化数据上报实例，用于向后台输送监控数据\n    const insReportData = new ReportData({\n      logUrl,\n    });\n    config.reportData = insReportData;\n    \n    // 对外暴露上传接口，供外部调用\n    this.reportData = insReportData;\n\n    // 配置数据分析追踪器\n    const _analyticsTracker = options.analyticsTracker;\n    if (_analyticsTracker) {\n      // 使用用户自定义的分析追踪器\n      config.analyticsTracker = _analyticsTracker;\n    } else {\n      // 使用默认的分析追踪器\n      config.analyticsTracker = analyticsTracker;\n    }\n\n    // 配置性能监控选项\n    config.isResourceTiming = !!options.resourceTiming;      // 是否开启资源加载时间监控\n    config.isElementTiming = !!options.elementTiming;        // 是否开启元素时间监控\n    config.maxTime = options.maxMeasureTime || config.maxTime; // 设置最大测量时间\n\n    // 错误监控配置\n    if (options.captureError) {\n      // 开启错误跟踪功能\n      const errorTtace = new ErrorTrace();\n      errorTtace.run();\n    }\n\n    // 浏览器兼容性检查：如果不支持性能指标则退出\n    if (!isPerformanceSupported()) {\n      return;\n    }\n\n    // 性能观察器初始化：如果浏览器支持PerformanceObserver则启用\n    if ('PerformanceObserver' in W) {\n      initPerformanceObserver();\n    }\n\n    // 页面可见性变化监听初始化\n    if (typeof D.hidden !== 'undefined') {\n      // Opera 12.10 和 Firefox 18 及更高版本支持\n      D.addEventListener(\n        'visibilitychange',\n        didVisibilityChange.bind(this, disconnectPerfObserversHidden)\n      );\n    }\n\n    // 记录页面导航时间数据（DNS请求、白屏时间等）\n    logData('navigationTiming', getNavigationTiming());\n    \n    // 记录用户网络信息（H5+多普勒测速） \n    logData('networkInformation', getNetworkInformation());\n    \n    // 管理离线缓存数据：如果浏览器支持存储估算API则启用\n    if (WN && WN.storage && typeof WN.storage.estimate === 'function') {\n      WN.storage.estimate().then(reportStorageEstimate);\n    }\n  }\n}\n","import PerformanceSdk from '../../src/yideng';\n\nconst sdk = new PerformanceSdk({\n  elementTiming: true,\n  logUrl: 'http://123.com/test',\n});\n\nconsole.log('🐻', sdk);\n// 模拟一个长任务\nconst start = Date.now();\nwhile (Date.now() - start < 1000) {}\n"]}