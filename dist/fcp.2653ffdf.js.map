{"version":3,"sources":["../src/config/index.ts","../src/data/constants.ts","../src/helpers/getNetworkInformation.ts","../src/helpers/isLowEnd.ts","../src/helpers/getNavigatorInfo.ts","../src/helpers/onVisibilityChange.ts","../src/helpers/utils.ts","../src/helpers/vitalsScore.ts","../src/data/reportPerf.ts","../src/data/log.ts","../src/helpers/isSupported.ts","../src/performance/getNavigationTiming.ts","../src/data/metrics.ts","../src/performance/observeInstances.ts","../src/performance/performanceObserver.ts","../src/performance/firstInput.ts","../src/performance/totalBlockingTime.ts","../src/performance/paint.ts","../src/performance/resourceTiming.ts","../src/performance/observe.ts","../src/tools/isSupported.ts","../src/error/index.ts","../src/yideng.ts","fcp/index.ts"],"names":[],"mappings":";;AuBAA;;;;AvBEO,ACOA,AWPA,ALAP,AgBAA,IvBAa,ACOA,AWPA,ALAP,AgBAA,CtBOQ,GAAG,EDPE,AuBAP,CXAQ,CLAN,CPAuB,AuBAtB,CtBOR,AWP4B,CLAlB,CKAV,ALAW,CgBAC,GhBAF,EAAO,IAAP,CAAjB,KgBAe,CAAW;AvBCxB,ASHF,ADAA,AaAA,AjBAA,AFAA,ACAA,AOAA,ALAA,ACAA,ACGA,AQHA,AJAA,AQAA,ANCA,AIAA,AHDA,AIAA,AFAA,AIAA,AEQA,ACLE,EAAA,EhBAI,QAAQ,GAAG,CAAC,AgBAF,EAAE,EhBAD,EAAO,CgBDE,GhBCT,CAAjB;APCE,ACMK,AWPA,ALCP,AgBAE,EvBAA,AuBAA,EtBMW,AWPA,ALCP,CNMQ,EWPE,CXOC,CAAC,CAAC,AWPA,CLCN,GAAG,CAAC,ENMV,CDNW,AOAF,AgBAE,EvBAE,AOAE,AgBAF,GhBAJ,CAAhB,CPFqC,qBuBEhB,OAAD,EAAY,CAC5B;AvBAF,ASJF,AGGE,AJHF,AJAA,ADEO,AODP,ALAO,ACAA,ACGP,AQJA,AJAA,AQAA,AFCA,AHDA,AIAA,AFEO,AIDP,AEOA,ACHI,EvBDF,AYDA,ETDW,AEDA,ACAA,ACGP,ASFO,GJCN,EAAE,GLCK,EFHS,ACAA,CCGN,CAAC,CPAD,AKHS,ACAA,ENGP,AOAF,EJFa,AIEP,GPHc,AGCJ,CIEhB,ASFiB,CVDrB,ACGb,ESFqC,KbAxB,GGDa,CAAC,AUCd,GVDa,EAAgB,QHCT,GAAc,KaAV,CACnC,kBADmC,EAE3B;AhBCR,ACKK,AWRY,ATCjB,AEDA,ACAA,ACGF,ASAE,AOCE,CXJG,CPAL,AWGA,EfKW,AMLP,CNKQ,GAAG,CKRR,CDAC,EAAE,AEGE,GAAG,CNKV,AMLW,GDHC,ACGF,CDHG,AUGA,CTAG,ASAF,EVHE,CAAC,ACGP,CAAjB,GSAE,CAA2B,EVHT,CAAY,CAAZ,CAAD,CAAjB,IUG4B,KAAD,EAAU;AhBCrC,ASLF,ADAA,AJAA,AFIO,ACDL,AEHwB,ACEzB,ACIM,AQNP,AJEA,AQFA,ANGO,AIFP,AHCA,AIFA,AFKI,AMGJ,ACFI,ClBNG,ACAA,CNKL,EEDS,AKEE,AMHA,EXCA,ACDP,GHEG,AEDgC,EFC9B,EEDJ,IWDmB,CNGC,EMHkB,CNGW,CMHjD,WVAU,2BAAW,CAA1B,EAA6B;AHHM,ACU9B,AWNA,ATAH,AEAJ,AEGE,ASDE,AOCA,CvBPG,COOL,ENGW,AWNA,ALGT,ENGW,AMHT,CKHU,EXMG,CAAC,AWND,CXME,AENV,GIE6C,CJFpD,KFMG;AQRA,AGGL,AJJF,AJEA,AFEO,ACAJ,AIGD,AQPF,AIAA,AFCA,ACCO,AFIH,AMEJ,ACDI,EXHF,ALGA,CJP6C,CMClC,APGF,ACCT,AeHW,CXKR,CLHQ,CUAN,ALGA,CSDC,CJFC,AVAO,EOHI,EOKP,CPLU,APGhB,AcEO,CTD0C,GSChD,IEJuB,CTDlB,AOKU,EEJW,IFI1B,CPLe,CACrB,EOI+B,CEJpB,IFIyB,CAAC,GPLhB,EAErB,IOG+B,EPLV,COK4B,CPFjD,ASFgC,CAAC,WFIoB,IPLhC,COKnB,CPDM,CSHwB,AFI4B,EEJgB;AjBQvE,AQJL,AGHiB,ALKjB,AOJK,AIDL,AFII,AOCF,CXLG,CHGL,AFEA,ENEW,AaNA,CPIR,CNEU,AaNA,CPIR,CEFC,CRIU,AQJT,AKFS,CbMC,CAAC,EQJlB,CAAY,CFD0C,GOD3C,ELEX,AKFgB,CAChB,CbKK,AQJe,ERMtB,KQNE,CAA4B,AKFZ,EAEhB,EAFgB,EAGc,ILDD,GAAD,EAAQ;AAClC,ADNJ,AFEO,ACML,AQNK,AIFP,AFCA,AHME,AIJA,AFIG,AMCL,ACAI,EhBAF,AWLA,EGLI,AfIO,ASAA,CCA0B,CFKjC,AECF,EPFI,EFEE,EAAE,GEFG,AHJS,GAAG,ECE6B,AWDpC,CTGC,ASHA,CTGC,CMJU,ENIX,CAAb,AMJ2B,CTAtB,CYCX,CAA2B,ETGE,IMJlB,GTAc,CGIvB,AHJwB,AYCE,ETGW,GHJd,AYCE,EZD+B,AYCrB,QHDJ,CACjC,kBADiC,EAE/B;ANGE,AGFC,ASLL,AnBKK,ACAL,AGFA,ACMA,AQJA,AJAK,AGGH,AIJA,AFKA,AOAA,EhBAF,EKJW,AVAA,ASAA,CJIR,CEFC,ANFA,AGFA,CMEU,ALIT,CODG,EFHS,EHEP,CAAC,AHJA,CCC2C,EEG5C,CAAN,CHJA,EGIc,AKCE,GRLC,AKES,AGGP,CORvB,CnBKgC,CSAC,CGGN,CZHQ,GIFnC,EHEe,AGFgB,EKEpB,ETAA,MOEkB,GKCN,CAAwB,ELDZ,CAAC,GAAD,CAAjB,AEFe,CFE7B,EEF4D,AGGhB,CZHb,ECAT,CDA0C,ACApE,EAA6B,GWGkB,EAAc;ALA1D,AGFH,AJJF,AaFE,AnBMA,ACAE,AGFA,ACMF,AQJA,AJAA,AQLF,AFCO,AHOD,AIJF,AFKA,AMDJ,ACCI,EXJF,ALIA,EURW,EfIP,AaAE,AJAF,AGGA,CFHC,ADAA,CGGC,AIJA,CNCC,AEGA,EXHE,AGFA,ACMA,EAAE,EJJT,AGFA,ASEa,GAAG,AEJO,AHOT,CAAC,CPLqC,CUF1B,CfIR,CgBDP,MJIN,CGPI,CHOL,CAAF,GZHJ,CaAoC,CbAZ,AaAa,EGDnC,CHCgB,CGDa,CHC/B,EEJ4B,CAAC,INI7B,EAA+B,YMJH,EAA4C;AhBUnE,AQHJ,AGJgB,AVEf,ACAD,AOAI,AJFJ,ACMD,AIJE,AMJF,AHOG,AIJC,AECC,AGIJ,CXNI,CLML,AURA,CREA,CROW,ASLA,AUAA,CXHH,AFOL,AOHoB,CLEvB,AKFE,CPGG,AOJD,CZAI,AYIN,CbCc,EULP,CVKU,CULjB,EJHoD,KUDpC,ChBSP,AgBTQ,CfIG,EgBDV,ChBCc,CDKP,ASLc,AUAA,EHJjC,CPIoC,AOJT,AGIS,SVAzB,AUAA,ClBA0B,AeJT,CCGxB,EAA0B,EDHH,EAAU,CCGjC,EhBCF,WQAkC,AUAA,GVAc,AUAA;AnBK/B,AoBXjB,AXOF,AHIA,AQLA,AJCC,AQNI,AFEH,ACGC,AECH,AEGF,ACb0B,CAAX,ChBcb,AgBdF,CZOkE,CAIhE,AQPW,EJKP,EEHE,CIHC,AXOA,AUAA,CbIC,EAAE,CURC,CAAC,CFGZ,EAAe,CMNb,AJGI,EVAgD,CcHnC,EAAjB,AJGmB,GPIR,AUAA,CVAC,ASNoB,ACMpB,CVAC,AUAA,EDNsB,MFEnC,EAAkC,CEFzB,GTMO,AUAA,gBVAX,AUAA,IVA+B,ASND,ACMC,CVAC,AUAA,CVAC,AUAA,CDNQ,aTML,AUAA,GVApC,AUAA,IVA2C,AUAA,CVAC,AUAA,CVAC,AUAA,cVAG,AUAA,IVAvD,AUAA;AXGA,AGHK,AJHA,AaHJ,AnBMC,ACAF,AOCD,ALFM,ACDL,ACOA,AQLE,AJEF,AQPA,AFEI,AHOF,AEDA,AIFH,AGKD,CbPO,AUAA,CbML,AYVA,EPKW,AJHA,AaFX,AhBIW,ASKT,CPCC,EAAE,AgBCA,CrBNC,AcGE,AOGF,CpBNC,AGFA,AaHA,CAAC,CIWV,CAAY,CJXV,CXEqB,ALGrB,AgBLY,CZC0C,CKI/B,AVAV,AYIC,ASEhB,CfT0B,AMOT,CSEC,CXNU,ANFT,CAAC,AUKE,GXJU,AWIP,CGRvB,ALSE,ASEJ,CjBRyB,AQMA,CNPZ,AHEsB,AcJT,AFEV,CMUhB,CjBT4B,AUKE,CAAC,CPAlB,APHL,AiBLsB,CAAC,AFEV,CXCW,AWDV,CXCW,EDCpB,CGFa,ANGQ,AIFN,CEA1B,AFAmC,AaHX,AHQD,EGRvB,CHQwC,CPAxC,AHL0B,AaJsB,AFG5C,CEDJ,AHOE,CPAsB,AGHnB,ANFoC,AWDV,CfG7B,AIFwB,CAAT,CJEyB,AIF1C,CWDI,CTAoB,CCMxB,CDJA,CCIgC,GDNR,AHES,CAAU,CGC3C,CHDiC,EAAsB,QIIvD,KDNwB,EAGC;APIN,AQApB,ADFC,ANDI,ACAL,AEDC,ACDD,ACOC,AQLE,AEHC,AHMsB,AIJvB,CTRG,ANDA,AGGA,CCYL,GUVE,CZIE,ASIqB,CPEpB,CWNC,CXMC,COFsB,CGNpB,CHMsB,CZHpB,AgBDA,CAAC,ChBCR,AeHS,EVFyC,EFIhD,CYFY,CAAC,AHMI,ENFd,EHFT,AYFa,EZEC,EJIW,AiBJnB,CDFsB,ChBMD,CAAC,CiBJG,EVEjB,GUFsB,CAAC,KjBIlB,OgBNV,CCEP,CDFwC,CCEU,qDjBIR,CAAzB;AAAA,AQErB,AGLO,AJEH,AJDG,AFAF,AGDD,ACAJ,ACME,AQLE,AILF,AFEI,AHKsC,AIHtC,AFGF,AOIJ,CtBJO,CMGL,CNFF,CWJa,ARCA,ACDT,AkBOE,EXPS,APAT,AcJA,ALOsC,EPGpC,ASHA,CJH8C,AWO3C,ChBDD,AWNE,EKOE,ETJsC,EAAE,ASIpC,CAAC,ChBZqC,AWKpC,CDFV,CbGmB,AYET,AOIN,CJXD,ADIU,CKOvB,CnBNgC,AYET,CDFT,AEHR,ADKF,EEHwB,AFGF,CCLR,ACEW,KdChB,AaHU,CFGA,AEHC,CFGA,GILtB,EAA6B,GFEzB,ACEiB,GAAwB,GdCf,CWAlB,AGDR,EdC0B,CWAU,SAAS,CAAC,SAAhD,EAA2D,WAA3D,EAAwE;AHA1E,AJEE,AJDF,ACDE,AEMF,AQLI,AJAJ,AQLE,AFEE,AHImB,AIFnB,AFGA,EJHJ,ALMA,EFNE,AcJA,CLMA,CVDE,AWAA,AJAE,CCDD,ADCE,ECDA,CLMC,AILE,CQLD,CZUC,AYVA,EdIE,CAAC,AcJX,CAAY,EDIP,CdCP,AYEQ,EZFA,CWAY,CVDlB,AaAE,CHCkB,AJAT,AODA,AFGT,EXHoB,AYFV,EDKG,CGPf,ADIgB,CAAC,SbAO,AYFR,CNGR,AKEN,CLF0B,EOD1B,CDFA,CZEF,CYFuB,ECEY,GDFjC,ENGM,EAAkC,CAAlC,AODN,CPCJ,CANgE,CAOhE;ACDE,AJEA,AJDA,AFDA,AGAD,AEPqD,AQMoB,AIHxE,AFEE,AHIF,AIFE,AFGD,AOGL,ChBbO,GKOH,CGDA,EAHa,AQUV,CfHA,AODH,EHFM,CRCC,AUCA,ASIA,CXNC,AWMA,CXPH,EWOF,ErBNH,CgBAK,ChBAH,CqBMc,ErBNX,CYEL,AIFE,CAAS,CKMR,GAAqB,CLNtB,GKMN,CJVO,ADIiB,CKMU,CAAE,CrBNb,CAAC,CeFJ,CTKF,ASLZ,ECEA,ECJF,AFEqB,EEFN,EXOZ,GNHH,CMG0B,WAAW,CAAC,OAAZ,CAAoB,CSLtB,MTKE,CWP1B,GXOyD,ASLpC,CTKnB,CSLkC,GTMlC,CAAC,eAAO,gBAFV,EAGE,GSPmB,CAAnB;ALGF,AJKE,AJJA,AFDF,ACDG,AECN,AUEG,AIND,AFEG,AHIH,AIFE,AFGF,CXRI,ESAL,AELA,CJUE,ATDS,AWGT,AQDiB,ElBAf,CQDC,EAAE,CAFA,CEIE,CAAP,CQCF,CRDY,GZFV,CECc,CFDZ,CECc,EFDX,CAAC,CAAC,CCDuB,GAAG,GmBIK,GDXrB,GlBOR,CDCY,CAAC,MeFP,CAAb,CbGyB,AFD3B,CEAO,UDD0B,CACnC,EADmC,EAEnC,EAFmC,EAGxB;ASDT,AJKC,AabD,AjBSE,AFDF,ACEF,AQFA,AMFG,AHID,AIFD,AFGF,AMDyC,CNhBnC,EEIL,CNUE,CJHY,CASZ,AadA,AjBSE,AODA,AWEQ,CXFP,CAAL,CCAO,CDAC,CCAC,AVAA,CUHF,CSLE,ACU+B,CDV9B,GAAR,APUE,COVU,GPUZ,CAAO,GVDc,EAAE,IiBTvB,GPUA,EAAqB,CAArB,iBVDkC,CAF3B,6BkBG6B,EAAE;ArBDnC,AWAH,ARCE,AFDA,ACEJ,AIGK,AQJH,AJDA,AQLF,AFGC,AHIA,AIFF,CAbM,EDEL,ChBWW,AWAT,ALKS,EHJP,AFDA,CUAC,EXAW,AWAT,CAJA,CDIE,CVAU,CUAjB,CTAU,EAAE,EKKW,GNLd,AMKiB,GQJhB,CXAW,CHDJ,CGEb,GFFsB,AKKjB,CLLkB,EaCR,CAAC,AINR,CAAd,IjBIS,AiBJU,GJMjB,ERI0B,AQJI,CRKhC,CHJyB,GWDvB,EAAqC,KRIX,EAE5B,CHLM,GACI,CGEkB,EAGZ,GYbM,OAAH,CfQN,CeRkB,YfQrB,CAAkB,QeRT,CAAnB,CfQU,GACE,YADF,GAEE,WAHN,GAII,aARD;AHEU,AWCjB,ASTA,AjBeE,AFNA,ACEJ,AIMA,AQPI,AJDH,AQLD,AFGD,AKEyC,CLbnC,GLaH,ERME,AFNA,AKQA,AQPA,CROC,EKRE,CTEC,CSFC,CALF,ATOP,OkBXI,AnBSa,CEMC,CFNC,AKQA,CHFC,AGEA,AQPA,EAAE,EMVpB,GAAY,IdiBK,CAAnB,AYbc,CjBKmB,AiBLjC,CjBKkC,AKQA,GchB9B,AFGe,UjBGV,ImBPK,EAEV,CjBIK,KiBNK,EAGV,KFCkB,CEJR,EAIV,KAJU,EAKV,GFDe,EEJL,AFIuB,EEEtB,6BFFI,CAAnB;APME,AJIA,AaPE,AjBSA,AFNA,ACEF,AIMA,AQTqC,AIJxC,ALMC,CKfK,GPcH,CGDA,CXOE,AFNA,EmBHA,CnBGG,ACEA,AWDA,CFDC,CVAC,AKQA,CKRC,CANH,AEOP,EOJW,AdWT,CcXU,ElBKV,CKEO,AaPL,CAAY,IjBSM,CFNC,CEMC,AFNA,GAHf,GmBAL,EAA0B,CbO5B,CAAwB,YaPtB,EADW,CAEX,YjBQ0C,yBAAtB,EAA0B,yBAA1B;AHRL,AQId,AGDH,AJIE,AJTK,AFKL,ACEA,AGNC,ACYJ,AQPA,AJFD,AGED,AQJS,CRXH,ECCH,ADeJ,CLDa,AGDT,ANJS,ASMX,CXPE,CISE,ANJA,ASDE,CWFE,CAAA,CVGD,EAAE,AUHG,CVJL,ANGY,CGKC,ANCT,CDFC,CIJU,CGKC,ADGT,ANJA,CAAC,ACEX,CKEY,ANJA,AoBHR,CXEW,AWDqB,CACtC,EXAoB,CAAC,CLHZ,AKGa,CFEb,IDEe,GNHI,AIJR,CJIS,AIJR,CLCE,AQIF,CACvB,AHNsB,CLCK,CAAC,AKDY,AKGxC,MFEuB,EAEvB,WRNmB,AQII,EAGvB,gBAHuB,EAIf,qDRR2C,CAAhC;AAAA,AQSnB,AGLE,AJIE,AaPA,AjBSH,AFXQ,ACOL,AGNJ,AKGA,CVHK,GWIH,CVLA,COUI,ADDF,AFRA,AKGE,EUFF,EbOI,EAAJ,GaPO,CbKe,AaLd,CVEK,CCCD,CSHZ,CTGc,ASHF,AVEI,CAAC,CFMC,AENA,GFMG,CYRrB,EAAoB,GfDK,EKG7B,CUFI,AVV4D,CAahE,CUHgC,KAA5B,EAAmC,AfDvC,EAAgC,GGSI,AYRhC,QZQqB,CAAzB;AGbO,AJaH,AaPA,AnBGH,AIJE,ACWH,AeTE,MdME,ADGA,KAAK,IcVE,AdUE,EDXA,AgBEJ,EDDL,EbOe,EAAE,MDGM,CAAC,GeT1B,GhBFC,AgBEyB,ChBFK,EEQI,AFRlC,EAAkC,ACWV,CAAd,CCH4B,ADGA,AeTN,CfStB,AeTuB,CdGV,ADM1B,EAA6C,aeT3C;AbOF,AGfoD,AJehD,AaPD,AjBQH,ADJE,AGNqC,ACYrC,AQPF,AJDA,AQNK,AGKH,CVTG,EAYP,CORa,EVWP,ADAA,AFTmC,CeTrC,EjBmBK,ADJA,AQFA,EPMP,AGES,EJNP,AGN4C,EAAE,ECY9C,AeTO,KbMW,IAAI,ADAA,EAAE,KWXc,AGKtC,GHLyC,AGKf,CAAC,CAAC,GbMC,AMJlB,CAAb,EAhBE,CAiBF,AIRW,AGK0B,CAAC,EbMlC,IAAsC,QaNxC,QbMwD,CDJhC,GCIoC,CAA9D,CUX2C,CVWsB,EUXX,CAAG,CAApD;AVYH,ADAE,AaPH,AjBQF,AFNC,ACEI,AGPiC,ACapC,AIRC,AWDA,ClBTG,IEKF,CEUC,AaNJ,GnBCO,EAAP,ECEW,IKGI,ALHX,AmBHK,EdMQ,acNf,GAAyB,CAAC,CAAC,OAAO,CAAC,OdML,McN9B,KdMe,EAA4B,IAA5B;ACCf,ADNwB,ANC3B,ACEK,AGPH,ASMD,AJDE,AGDG,AQAH,CpBfG,EISL,CQMW,CNAT,IFJK,OQIgB,CQAd,ERAiB,GCEhB,EOFR,GAAiB,CRAR,ILME,EaNa,CPEZ,AOFa,KPE3B,ADF0B,CAAC,CCEN,CNInB,EAAwB,EMJ1B,EDF0B,AQAP,ERAyB,EQAC,QbM3C,EAA0C,KaNQ,OAAlD,CALsC,CAMtC,EbKA;AACD,AGLI,AJKJ,AFVC,ACYF,AIPE,AGDF,GNXA,CIYW,ANLT,AKKA,ELLE,AQIA,CFCU,ELOP,CKPU,GDAN,CJOC,CIPC,GJOG,QIPQ,GAAG,CAAC,CAAC,CJOC,CAAC,KORb,GHFX,GJUuB,CAAd,CAA4B,AORxC,CPQY,AORhB,CPQO,CORsB,EPQoB,kBAA1C,GAA+D,MAAtE;AEDD,AGLC,AJKD,ALJG,AGND,ACYF,AQPC,AJAE,AGDA,AQAA,CbJG,ADbA,ADcA,CKIL,IGAI,AODI,CVCH,EAAE,ATCA,IAAL,GmBFgB,GAAG,IAAI,aRAT,CQAK,CPCH,CAAd,AODF,KPCsB,ADDtB,EAAwB,KCCK,KDD7B,2BCC2C,CAAd,EAAiB,WAAxB,KAAwC,UAAhE,EAA4E;AHD3D,ATGb,AGNL,ASKG,AJAA,AGDD,AQAC,CVDG,ANTA,CgBUH,EXCA,QWDU,CnBED,AmBFE,CXCD,EAAE,AWDZ,CnBEE,AQDW,CAAC,WAAF,GAAgB,CAAhB,EUJM,CNIJ,AJAkB,CIAhC,EAAiB,QJA0B,GIA3C,AJA8C,CAAC,CAAC,WAApC,GAAkD,CALzD;AUEL,AlBKE,AYDH,AJAC,mBUJE,gBAAF,CACE,OADF,EAEE,UAAU,CAAV,EAAuB;AACrB,AVEJ,AGFF,AQAE,IXEA,EWFI,CAAC,ERAA,GOAG,CAAC,AVEA,CUFC,CVEC,KUFH,KAAa,CVEC,GAAG,CAAC,CAAC,MUFvB,EAAoB,EPAL,EHLd,MGKA,AQAL,CRAF,CQAiC;ADCzB,AlBEN,AYDF,AJCE,AGFH,AQAK,CRLC,SOKG,OAAO,CAAC,GAAR,CAAY,ANCV,QMDF,EAAsB,CAAC,CAAC,CNClB,KMDN,ANCR,EAAqB,KAArB;AMAO,AlBEH,AYDJ,AJCE,AWFC,IXED,YAAY,EAAE,IIDN,OJCiB,GAAG,GIDhB,KAAd,EAAqB,GJRd,EIQP,EAvBE,CAwBF;AMDK,AlBED,AQAF,OURA,EAOE,IAPF,AlBQS,iBAAiB,MAAM,EAA9B;AkBCH,AlBbD,AYYA,AJCE,AWHA,EPEF,EJCE,EUCF,ACJM,MPEI,CAAC,MJCM,EAAE,IIDH,MOFe,GXGC,GAAG,CAAC,CAAC,IWHnC,EAAgC,MXR3B;ARYR,AYDG,AJCA,AWHE,CnBjBC,uBYmBO,aAAI,KAAd;AACD,AJCC,AWHC,GPAO,AOd8B,CXiBtC,AWFA,CPCC,IAFO,CAAV,CAzBE,CA4BF,EJAY,EAAE,CAAC,CAAC,YAAF,GAAiB,CAAC,CAAC,eAAnB,IAAsC,CAb7C;AAcL;AIAF,AJCE,EIDF,EJCE,QIDQ,CAAC,IJCI,EAAE,CAAC,CAAC,IIDH,UMDI,CVEH,GAAoB,CAAC,CAAC;AUDrC,ANCA,AJfK,AWYL,GXZF,gBUcI,CCFM,IPGE,WMDV,CAAmB,CNCL,COHd,EAA4B,EPG5B,YADc,CAEd,CMFA,EAAyC,UAAU,CAAV,EAAW,gBCFpD,EAhBsC,CAiBtC;ADEE,AVEL,AWHE,CX5BI,OU6BD,CAAC,CAAC,cAAF;AACA,ANCF,QMDE,OAAO,CAAC,GAAR,CAAY,ENCN,gBMDN,CNCF,CMDkC,CAAC,ANCR,CMDS,MAAlC,KNC4B,KAA9B;AMAE,ANCH,GAJS,EAIP,KAJO,CAAV,IMGW,IAAP;AACD,ANCJ,CApCM,MM+BH;AAKD;;;kCACkB;AACjB,UAAM,MAAM,GAAG,aAAE,MAAjB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,QAAA,MAAM,CAAC,CAAD,CAAN,CAAU,gBAAV,CACE,OADF,EAEE,UAAC,CAAD,EAAM;AACJ,UAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,CAAZ;AACD,SALH,EAME,IANF;AASA,QAAA,MAAM,CAAC,CAAD,CAAN,CAAU,gBAAV,CACE,oBADF,EAEE,UAAU,CAAV,EAAW;AACT,UAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ;AACD,SAJH,EAKE,IALF;AAOD;AACF;;;0BACS;AACR,WAAK,YAAL,GADQ,CAER;;AACA,WAAK,WAAL,GAHQ,CAIR;;AACA,WAAK,YAAL;AACD;;;;;;eAEY","file":"fcp.2653ffdf.js","sourceRoot":"../examples","sourcesContent":["import { IYidengConfig } from '../typings/types';\n\nexport const config: IYidengConfig = {\n  // Metrics\n  isResourceTiming: false,\n  isElementTiming: false,\n  // Logging\n  maxTime: 15000,\n};\n","interface Navigator {\n  deviceMemory?: number;\n  hardwareConcurrency?: number;\n  connection?: string;\n  effectiveType?: string;\n  serviceWorker?: {\n    controller?: string;\n  };\n}\nexport const W = window;\nexport const C = W.console;\nexport const D = document;\nexport const WN = (W.navigator as unknown) as Navigator;\nexport const WP = W.performance;\n\n//内存\nexport const getDM = () => WN.deviceMemory ?? 0;\n//cpu核数\nexport const getHC = () => WN.hardwareConcurrency ?? 0;\n","import { WN } from '../data/constants';\nimport {\n  EffectiveConnectionType,\n  IPerfumeNetworkInformation,\n} from '../typings/types';\n\nexport let et: EffectiveConnectionType = '4g';\nexport let sd = false;\n\nexport const getNetworkInformation = (): IPerfumeNetworkInformation => {\n  if ('connection' in WN) {\n    const dataConnection = (WN as any).connection;\n    if (typeof dataConnection !== 'object') {\n      return {};\n    }\n    et = dataConnection.effectiveType;\n    sd = !!dataConnection.saveData;\n    return {\n      downlink: dataConnection.downlink,\n      effectiveType: dataConnection.effectiveType,\n      rtt: dataConnection.rtt,\n      saveData: !!dataConnection.saveData,\n    };\n  }\n  return {};\n};\n","import { getDM, getHC } from '../data/constants';\nimport { EffectiveConnectionType } from '../typings/types';\n\nexport const getIsLowEndDevice = (): boolean => {\n  // If number of logical processors available to run threads <= 4\n  if (getHC() && getHC() <= 4) {\n    return true;\n  }\n  // If the approximate amount of RAM client device has <= 4\n  if (getDM() && getDM() <= 4) {\n    return true;\n  }\n  return false;\n};\n\nexport const getIsLowEndExperience = (\n  et: EffectiveConnectionType,\n  sd: boolean\n): boolean => {\n  // If the effective type of the connection meaning\n  // one of 'slow-2g', '2g', '3g', or '4g' is !== 4g\n  switch (et) {\n    case 'slow-2g':\n      return true;\n      break;\n    case '2g':\n      return true;\n      break;\n    case '3g':\n      return true;\n      break;\n    default:\n      // Data Saver preference\n      return getIsLowEndDevice() || sd;\n  }\n};\n","import { getDM, getHC, WN } from '../data/constants';\nimport { et, sd } from './getNetworkInformation';\nimport { getIsLowEndDevice, getIsLowEndExperience } from './isLowEnd';\nimport { INavigatorInfo } from '../typings/types';\n\n/**\n * 如下信息来源于 window.navigator:\n * 1. Device Memory\n * 2. Hardware Concurency\n * 3. Status of the service worker:\n *     - controlled: a service worker is controlling the page\n *     - supported: the browser supports service worker\n *     - unsupported: the user's browser does not support service worker\n */\nexport const getNavigatorInfo = function (): INavigatorInfo {\n  if (WN) {\n    return {\n      deviceMemory: getDM() || 0,\n      hardwareConcurrency: getHC() || 0,\n      serviceWorkerStatus:\n        'serviceWorker' in WN\n          ? WN.serviceWorker!.controller\n            ? 'controlled'\n            : 'supported'\n          : 'unsupported',\n      isLowEndDevice: getIsLowEndDevice(),\n      isLowEndExperience: getIsLowEndExperience(et, sd),\n    };\n  }\n  return {};\n};\n","import { D } from '../data/constants';\n\nexport const visibility = {\n  isHidden: false,\n};\n\n/**\n * From visibilitychange listener it saves only when\n * the page gets hidden, because it's important to not\n * use the wrong \"hidden\" value when send timing or logging.\n */\nexport const didVisibilityChange = function (cb: Function) {\n  if (D.hidden) {\n    cb();\n    visibility.isHidden = D.hidden;\n  }\n};\n","import { W } from '../data/constants';\n\nexport const roundByTwo = (num: number) => {\n  return parseFloat(num.toFixed(2));\n};\n\nexport const convertToKB = (bytes: number): number | null => {\n  if (typeof bytes !== 'number') {\n    return null;\n  }\n  return roundByTwo(bytes / Math.pow(1024, 2));\n};\n\n/**\n * PushTask to requestIdleCallback\n * 高效利用每一帧进行数据的收集\n */\nexport const pushTask = (cb: any): void => {\n  if ('requestIdleCallback' in W) {\n    (W as any).requestIdleCallback(cb, { timeout: 3000 });\n  } else {\n    cb();\n  }\n};\n","import { IPerfumeData, IVitalsScore } from '../typings/types';\n\nconst fcpScore = [1000, 2500];\nconst lcpScore = [2500, 4000];\nconst fidcore = [100, 300];\nconst clsScore = [0.1, 0.25];\nconst tbtScore = [300, 600];\n\nexport const webVitalsScore: Record<string, number[]> = {\n  fp: fcpScore,\n  fcp: fcpScore,\n  lcp: lcpScore,\n  lcpFinal: lcpScore,\n  fid: fidcore,\n  fidVitals: fidcore,\n  cls: clsScore,\n  clsFinal: clsScore,\n  tbt: tbtScore,\n  tbt5S: tbtScore,\n  tbt10S: tbtScore,\n  tbtFinal: tbtScore,\n};\n\nexport const getVitalsScore = (\n  measureName: string,\n  value: IPerfumeData\n): IVitalsScore => {\n  if (!webVitalsScore[measureName]) {\n    return null;\n  }\n  if (value <= webVitalsScore[measureName][0]) {\n    return 'good';\n  }\n  return value <= webVitalsScore[measureName][1] ? 'needsImprovement' : 'poor';\n};\n","import { config } from '../config';\nimport { getNavigatorInfo } from '../helpers/getNavigatorInfo';\nimport { visibility } from '../helpers/onVisibilityChange';\nimport { pushTask } from '../helpers/utils';\nimport { getVitalsScore } from '../helpers/vitalsScore';\n\n/**\n * Sends the User timing measure to analyticsTracker\n */\nexport const reportPerf = function (\n  measureName: string,\n  data: any,\n  customProperties?: object\n): void {\n  pushTask(() => {\n    //console.log('[ measureName ]', measureName);\n    // 当页面被隐藏的时候不报告具体数据\n    if (\n      (visibility.isHidden && measureName.indexOf('Final') < 0) ||\n      !config.analyticsTracker\n    ) {\n      return;\n    }\n    // Send metric to custom Analytics service\n    config.analyticsTracker({\n      metricName: measureName,\n      data,\n      eventProperties: customProperties || {},\n      navigatorInformation: getNavigatorInfo(),\n      vitalsScore: getVitalsScore(measureName, data),\n    });\n  });\n};\n","import { config } from '../config';\nimport { reportPerf } from '../data/reportPerf';\nimport { roundByTwo } from '../helpers/utils';\n\nexport const logData = (\n  measureName: string,\n  metric: any,\n  customProperties?: object\n): void => {\n  Object.keys(metric).forEach((key) => {\n    if (typeof metric[key] === 'number') {\n      metric[key] = roundByTwo(metric[key]);\n    }\n  });\n  // Sends the metric to an external tracking service\n  reportPerf(measureName, metric, customProperties);\n};\n\n/**\n * Dispatches the metric duration into internal logs\n * and the external time tracking service.\n */\nexport const logMetric = (\n  duration: number,\n  measureName: string,\n  customProperties?: object\n): void => {\n  const duration2Decimal = roundByTwo(duration);\n  if (duration2Decimal <= config.maxTime && duration2Decimal >= 0) {\n    // 从内部或者外部的报告工具报告指标数据\n    reportPerf(measureName, duration2Decimal, customProperties);\n  }\n};\n","import { W, WP } from '../data/constants';\n\n/**\n * True if the browser supports the Navigation Timing API,\n * User Timing API and the PerformanceObserver Interface.\n * In Safari, the User Timing API (performance.mark()) is not available,\n * so the DevTools timeline will not be annotated with marks.\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n * Support: developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType\n */\nexport const isPerformanceSupported = (): boolean => {\n  return WP && !!WP.getEntriesByType && !!WP.now && !!WP.mark;\n};\n","import { WP } from '../data/constants';\nimport { isPerformanceSupported } from '../helpers/isSupported';\nimport { IPerfumeNavigationTiming } from '../typings/types';\n\n/**\n * Navigation Timing API provides performance metrics for HTML documents.\n * w3c.github.io/navigation-timing/\n * developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\n */\nexport const getNavigationTiming = (): IPerfumeNavigationTiming => {\n  if (!isPerformanceSupported()) {\n    return {};\n  }\n  // There is an open issue to type correctly getEntriesByType\n  // github.com/microsoft/TypeScript/issues/33866\n  const n = WP.getEntriesByType('navigation')[0] as any;\n  // In Safari version 11.2 Navigation Timing isn't supported yet\n  if (!n) {\n    return {};\n  }\n  const responseStart = n.responseStart;\n  const responseEnd = n.responseEnd;\n  // We cache the navigation time for future times\n  return {\n    // fetchStart marks when the browser starts to fetch a resource\n    // responseEnd is when the last byte of the response arrives\n    fetchTime: responseEnd - n.fetchStart,\n    // Service worker time plus response time\n    workerTime: n.workerStart > 0 ? responseEnd - n.workerStart : 0,\n    // Request plus response time (network only)\n    totalTime: responseEnd - n.requestStart,\n    // Response time only (download)\n    downloadTime: responseEnd - responseStart,\n    // Time to First Byte (TTFB)\n    timeToFirstByte: responseStart - n.requestStart,\n    // HTTP header size\n    headerSize: n.transferSize - n.encodedBodySize || 0,\n    //  DNS解析时间\n    dnsLookupTime: n.domainLookupEnd - n.domainLookupStart,\n  };\n};\n","import { IMetricMap, IPerfumeDataConsumption } from '../typings/types';\n\nexport const metrics: IMetricMap = {};\nexport const cls = {\n  value: 0,\n};\nexport const fcp = {\n  value: 0,\n};\nexport const lcp = {\n  value: 0,\n};\nexport const fcpEntryName = 'first-contentful-paint';\nexport const rt: { value: IPerfumeDataConsumption } = {\n  value: {\n    beacon: 0,\n    css: 0,\n    fetch: 0,\n    img: 0,\n    other: 0,\n    script: 0,\n    total: 0,\n    xmlhttprequest: 0,\n  },\n};\n//主线程总阻塞时间\nexport const tbt = {\n  value: 0,\n};\n","import { IPerfObservers } from '../typings/types';\n/**\n * @remarks 核心性能数据指标对象\n * @public\n */\nexport const perfObservers: IPerfObservers = {};\n","import { C } from '../data/constants';\nimport { perfObservers } from './observeInstances';\nimport { IPerformanceObserverType } from '../typings/types';\n\n/**\n * PerformanceObserver 异步订阅封装\n */\nexport const po = (\n  eventType: IPerformanceObserverType,\n  cb: (performanceEntries: any[]) => void\n): PerformanceObserver | null => {\n  try {\n    const perfObserver = new PerformanceObserver((entryList) => {\n      cb(entryList.getEntries());\n    });\n    // 订阅时间或者开始计时 buffered不立即执行在内存中留下PerformanceObserver实例\n    perfObserver.observe({ type: eventType, buffered: true });\n    return perfObserver;\n  } catch (e) {\n    C.warn('Yideng.js:', e);\n  }\n  return null;\n};\n//断开测试通道\nexport const poDisconnect = (observer: any) => {\n  if (perfObservers[observer]) {\n    perfObservers[observer].disconnect();\n  }\n  delete perfObservers[observer];\n};\n","import { logData, logMetric } from '../data/log';\nimport { cls, lcp, rt, tbt } from '../data/metrics';\nimport { perfObservers } from './observeInstances';\nimport { poDisconnect } from './performanceObserver';\nimport { PerformanceEventTiming } from '../typings/types';\n\nexport const initFirstInputDelay = (\n  performanceEntries: PerformanceEventTiming[]\n) => {\n  //取最后的一位即为我们希望所获取的时间点\n  const lastEntry = performanceEntries.pop();\n  if (lastEntry) {\n    // Core Web Vitals FID logic\n    // 测量输入事件的延迟操作\n    logMetric(lastEntry.processingStart - lastEntry.startTime, 'fidVitals', {\n      performanceEntry: lastEntry,\n    });\n    // 传统的FID逻辑\n    // Measure the duration of processing the first input event\n    logMetric(lastEntry.duration, 'fid', {\n      performanceEntry: lastEntry,\n    });\n  }\n  // 销毁对FID的注册回调 避免过多的观察者造成内存泄露\n  poDisconnect(1);\n  //初始化lcp\n  logMetric(lcp.value, 'lcp');\n  if (perfObservers[3] && typeof perfObservers[3].takeRecords === 'function') {\n    perfObservers[3].takeRecords();\n  }\n  logMetric(cls.value, 'cls');\n  logMetric(tbt.value, 'tbt');\n  // TBT with 5 second delay after FID\n  setTimeout(() => {\n    logMetric(tbt.value, `tbt5S`);\n  }, 5000);\n  // TBT with 10 second delay after FID\n  setTimeout(() => {\n    logMetric(tbt.value, `tbt10S`);\n    //FID被激活以后10S的整体数据消耗\n    logData('dataConsumption', rt.value);\n  }, 10000);\n};\n","import { fcp, tbt } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\nexport const initTotalBlockingTime = (\n  performanceEntries: IPerformanceEntry[]\n): void => {\n  performanceEntries.forEach((entry) => {\n    //从fcp -> tti获取长耗时任务（self表示耗时长任务来自于渲染帧）\n    // console.log('🍌', entry);\n    if (entry.name !== 'self' || entry.startTime < fcp.value) {\n      return;\n    }\n    // console.log('🍌2', entry);\n    //https://developer.mozilla.org/zh-CN/docs/Web/API/Long_Tasks_API\n    //长耗时任务意味着执行时间超过50ms的\n    const blockingTime = entry.duration - 50;\n    if (blockingTime > 0) {\n      tbt.value += blockingTime;\n    }\n  });\n};\n","import { IPerformanceEntry } from '../typings/types';\nimport { fcp, fcpEntryName, lcp } from '../data/metrics';\nimport { po, poDisconnect } from './performanceObserver';\nimport { perfObservers } from './observeInstances';\nimport { initTotalBlockingTime } from './totalBlockingTime';\nimport { logMetric } from '../data/log';\nexport const initFirstPaint = (performanceEntries: IPerformanceEntry[]) => {\n  performanceEntries.forEach((entry) => {\n    if (entry.name === 'first-paint') {\n      logMetric(entry.startTime, 'fp');\n    } else if (entry.name === fcpEntryName) {\n      fcp.value = entry.startTime;\n      logMetric(fcp.value, 'fcp');\n      perfObservers[4] = po('longtask', initTotalBlockingTime);\n      poDisconnect(0);\n    }\n  });\n};\n","import { config } from '../config';\nimport { logData } from '../data/log';\nimport { rt } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\nexport const initResourceTiming = (performanceEntries: IPerformanceEntry[]) => {\n  //console.log('🐶', performanceEntries);\n  performanceEntries.forEach((entry) => {\n    //console.log('🐶', 1);\n    if (config.isResourceTiming) {\n      logData('resourceTiming', entry);\n    }\n    if (entry.decodedBodySize && entry.initiatorType) {\n      const bodySize = entry.decodedBodySize / 1000;\n      rt.value[entry.initiatorType] += bodySize;\n      rt.value.total += bodySize;\n    }\n  });\n};\n","import { config } from '../config';\nimport { initFirstInputDelay } from './firstInput';\nimport { perfObservers } from './observeInstances';\nimport { initFirstPaint } from './paint';\nimport { po } from './performanceObserver';\nimport { initResourceTiming } from './resourceTiming';\nexport const initPerformanceObserver = (): void => {\n  console.log('⏰ 性能收集开始', Math.random());\n  //收集页面全部资源性能数据\n  if (config.isResourceTiming) {\n    console.log('📚 收集页面性能数据');\n    po('resource', initResourceTiming);\n  }\n  perfObservers[0] = po('paint', initFirstPaint);\n  perfObservers[1] = po('first-input', initFirstInputDelay);\n};\n\nexport const disconnectPerfObserversHidden = (): void => {};\n","import { W, WP } from '../data/constants';\n\n/**\n * True if the browser supports the Navigation Timing API,\n * User Timing API and the PerformanceObserver Interface.\n * In Safari, the User Timing API (performance.mark()) is not available,\n * so the DevTools timeline will not be annotated with marks.\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n * Support: developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType\n */\nexport const isPerformanceSupported = (): boolean => {\n  return WP && !!WP.getEntriesByType && !!WP.now && !!WP.mark;\n};\n","import { W } from '../data/constants';\ntype ErrorInfo = {};\nclass ErrorTrace {\n  private errordefo: ErrorInfo;\n  constructor() {\n    this.errordefo = {};\n  }\n  //全局捕获同步+异步错误\n  private globalError() {\n    console.log('[ ❌全局捕获错误 ]');\n    W.onerror = (\n      eventOrMessage: Event | string,\n      source?: string,\n      lineno?: number,\n      colno?: number,\n      error?: Error\n    ): boolean => {\n      console.log('[ 我知道错误了 ]', eventOrMessage);\n      //通过错误信息还原sourcemap源文件地址\n      console.log(source, lineno, colno, error);\n      return true;\n    };\n  }\n  //资源挂载失败 如404png\n  private networkError() {\n    W.addEventListener(\n      'error',\n      function (e: ErrorEvent) {\n        if (e.target !== W) {\n          console.log('🖼网络错误', e.target);\n        }\n      },\n      true\n    );\n  }\n  //异步Promise错误\n  private promiseError() {\n    W.addEventListener('unhandledrejection', function (e) {\n      e.preventDefault();\n      console.log('我知道 promise 的错误了', e.reason);\n      return true;\n    });\n  }\n  private iframeError() {\n    const frames = W.frames;\n    for (let i = 0; i < frames.length; i++) {\n      frames[i].addEventListener(\n        'error',\n        (e) => {\n          console.log('addEventListener');\n          console.log(e);\n        },\n        true\n      );\n\n      frames[i].addEventListener(\n        'unhandledrejection',\n        function (e) {\n          console.log('unhandledrejection');\n        },\n        true\n      );\n    }\n  }\n  public run() {\n    this.networkError();\n    //触发全体数据监听错误\n    this.globalError();\n    //触发promise的错误\n    this.promiseError();\n  }\n}\nexport default ErrorTrace;\n","/**\n * 一款免费的开源性能监控SDK\n *\n * @remarks\n * 目前能够完成监控的指标包含FCP等\n *\n * @packageDocumentation\n */\nimport { config } from './config';\nimport { D, W, WN, WP } from './data/constants';\nimport { logData } from './data/log';\nimport { getNavigationTiming } from './performance/getNavigationTiming';\nimport { initPerformanceObserver } from './performance/observe';\nimport { isPerformanceSupported } from './tools/isSupported';\nimport { IYidengOptions } from './typings/types';\nimport ErrorTrace from './error';\n\nexport default class Yideng {\n  private v = '1.0.0';\n  constructor(options: IYidengOptions = {}) {\n    // 扩展基础配置\n    config.analyticsTracker = options.analyticsTracker;\n    config.isResourceTiming = !!options.resourceTiming;\n    config.isElementTiming = !!options.elementTiming;\n    config.maxTime = options.maxMeasureTime || config.maxTime;\n    //自动开启错误跟踪\n    const errorTtace = new ErrorTrace();\n    errorTtace.run();\n    if (!isPerformanceSupported()) {\n      return;\n    }\n    if ('PerformanceObserver' in W) {\n      initPerformanceObserver();\n    }\n    //记录系统DNS请求+白屏时间等\n    logData('navigationTiming', getNavigationTiming());\n    // console.log('[ options ]', options);\n  }\n}\n","import Yideng from '../../src/yideng';\n\nconst yideng = new Yideng({\n  resourceTiming: false,\n  analyticsTracker: (options) => {\n    // console.log(Math.random());\n    // console.log('-------');\n    // const {\n    //   metricName,\n    //   eventProperties,\n    //   data,\n    //   navigatorInformation,\n    //   vitalsScore,\n    // } = options;\n    // console.log(options);\n  },\n});\n\nconsole.log('🐻', yideng);\n// 模拟一个长任务\nconst start = Date.now();\nwhile (Date.now() - start < 1000) {}\n"]}